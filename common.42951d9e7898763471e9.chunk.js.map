{"version":3,"sources":["./node_modules/service-mocker/client/modern/get-newest-reg.js","./node_modules/service-mocker/client/legacy/create-event.js","./node_modules/service-mocker/client/modern/register.js","./node_modules/service-mocker/utils/debug.js","./node_modules/service-mocker/client/legacy/client.js","./node_modules/service-mocker/client/modern/client.js","./node_modules/service-mocker/utils/index.js","./node_modules/highlight.js/lib/highlight.js","./node_modules/highlight.js/lib/languages/json.js","./src/demo/modules/@shared/client/models/customer.ts","./src/demo/modules/@shared/client/models/category.ts","./src/demo/modules/@shared/client/models/employee.ts","./src/demo/modules/@shared/client/models/employee-territory.ts","./src/demo/modules/@shared/client/models/order.ts","./src/demo/modules/@shared/client/models/order-detail.ts","./src/demo/modules/@shared/client/models/product.ts","./src/demo/modules/@shared/client/models/region.ts","./src/demo/modules/@shared/client/models/shipper.ts","./src/demo/modules/@shared/client/models/supplier.ts","./src/demo/modules/@shared/client/models/territory.ts","./node_modules/service-mocker/client/legacy/dispatch-fetch-event.js","./node_modules/service-mocker/constants/index.js","./node_modules/service-mocker/client/legacy/patch-fetch.js","./node_modules/service-mocker/client/legacy/patch-xhr.js","./node_modules/service-mocker/client/modern/connect.js","./node_modules/regenerator-runtime/runtime.js","./node_modules/service-mocker/utils/event-wait-until.js","./node_modules/service-mocker/client/index.js","./node_modules/babel-runtime/regenerator/index.js","./node_modules/service-mocker/utils/defer.js","./node_modules/service-mocker/utils/extensify.js","./node_modules/service-mocker/utils/send-message-request.js","./node_modules/regenerator-runtime/runtime-module.js","./src/@tdm/service-mocker/shared/src/messaging.ts","./src/@tdm/service-mocker/client/src/client.ts","./src/@tdm/service-mocker/client/src/client-base.ts","./src/@tdm/service-mocker/client/src/metadata/on-message.ts","./src/@tdm/service-mocker/client/src/metadata/client.ts","./src/@tdm/service-mocker/client/src/decorator/client.ts","./src/@tdm/service-mocker/client/src/decorator/on-message.ts","./src/demo/modules/@shared/client/client.ts","./node_modules/service-mocker/constants/action.js"],"names":["exports","__esModule","getNewestReg","undefined","_regenerator2","obj","default","_interopRequireDefault","__webpack_require__","_ref","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_asyncToGenerator","mark","_callee","_navigator","serviceWorker","registration","newWorker","wrap","_context","prev","next","navigator","updateLog","color","getRegistration","sent","Error","update","installing","waiting","_utils","eventWaitUntil","state","abrupt","stop","debug","scope","createEvent","name","Event","e","event","document","initEvent","register","_connect","scriptURL","options","connect","_x","_x2","isIE","test","userAgent","colorPresets","log","warn","PrefixedConsole","namespace","length","instance","Constructor","TypeError","_classCallCheck","_namespace","_color","prototype","c","ns","Object","setPrototypeOf","console","desc","getOwnPropertyNames","forEach","prop","getOwnPropertyDescriptor","create","method","_console2","_len","messages","Array","_key","_console","concat","head","shift","LegacyClient","_constants","_patchXhr","_patchFetch","clientLog","registrations","_this","isLegacy","ready","controller","_registration","patchXHR","patchFetch","promise","script","createElement","src","onload","onerror","body","appendChild","sendMessageRequest","window","action","ACTION","PING","catch","_ref2","_callee2","_context2","unregister","_ref3","_callee3","_context3","ModernClient","_register","_getNewestReg","_init","active","result","_ref4","_callee4","_context4","location","pathname","_autoSyncClient","_this2","addEventListener","_callee5","_context5","t0","_debug","keys","defineProperty","enumerable","get","_defer","_extensify","_eventWaitUntil","_sendMessageRequest","self","hljs","escape","replace","tag","node","nodeName","toLowerCase","testRe","re","lexeme","match","exec","index","isNotHighlighted","language","noHighlightRe","inherit","parent","objects","slice","call","nodeStream","_nodeStream","offset","child","firstChild","nextSibling","nodeType","nodeValue","push","highlight","ignore_illegals","continuation","endOfMode","mode","endRe","endsParent","endsWithParent","keywordMatch","match_str","case_insensitive","keywords","hasOwnProperty","buildSpan","classname","insideSpan","leaveOpen","noPrefix","openSpan","classPrefix","spanEndTag","processBuffer","top","subLanguage","explicit","languages","mode_buffer","continuations","highlightAuto","relevance","processSubLanguage","keyword_match","last_index","lexemesRe","lastIndex","substring","substr","processKeywords","startNewMode","className","processLexeme","buffer","new_mode","i","contains","beginRe","subMode","skip","excludeBegin","returnBegin","end_mode","origin","returnEnd","excludeEnd","starts","illegalRe","getLanguage","reStr","source","langRe","global","RegExp","compileMode","compiled","beginKeywords","compiled_keywords","flatten","str","split","kw","pair","Number","objectKeys","lexemes","begin","join","end","terminator_end","illegal","map","variants","cached_variants","variant","expand_mode","terminators","filter","Boolean","compileLanguage","current","count","message","indexOf","text","languageSubset","second_best","fixMarkup","tabReplace","useBR","fixMarkupRe","p1","highlightBlock","block","originalStream","resultNode","_class","classes","parentNode","languagePrefixRe","blockLanguage","createElementNS","innerHTML","textContent","original","highlighted","selectStream","open","ArrayProto","attributes","a","close","render","processed","nodeStack","stream","reverse","splice","pop","mergeStreams","prevClassName","currentLang","resultLang","aliases","trim","buildClassName","initHighlighting","called","blocks","querySelectorAll","configure","user_options","initHighlightingOnLoad","registerLanguage","lang","alias","listLanguages","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","COMMENT","inherits","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","CSS_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","factory","module","LITERALS","literal","TYPES","VALUE_CONTAINER","OBJECT","ARRAY","Customer","_super","$Customer","tslib_es6","core","endpoint","category_$Category","$Category","Category","employee_$Employee","$Employee","Employee","employee_territory_$EmployeeTerritory","$EmployeeTerritory","data","EmployeeTerritory","order_$Order","$Order","foreignKey","Order","order_detail_$OrderDetail","$OrderDetail","OrderDetail","product_$Product","$Product","Product","region_$Region","$Region","Region","shipper_$Shipper","$Shipper","Shipper","supplier_$Supplier","$Supplier","Supplier","territory_$Territory","$Territory","Territory","dispatchFetchEvent","request","fetchEvt","_createEvent","deferred","Defer","respondWith","response","fetchEvents","listener","bind","type","useCapture","_action","patchedFetch","input","init","Request","_dispatchFetchEvent","nativeFetch","fetch","mockerPatched","polyfill","toString","Function","isNativeFetch","native","_possibleConstructorReturn","ReferenceError","parseResponse","responseType","res","parser","clone","json","blob","arrayBuffer","DOMParser","parseFromString","contentType","headers","getDocumentMIME","t1","_x3","XMLHttpRequest","MockerXHR","EVENTS_LIST","_ExtandableXHR","_temp","_ret","args","_requestHeaders","Headers","_responseHeaders","_responseMIME","_method","_url","subClass","superClass","constructor","writable","configurable","__proto__","_inherits","setRequestHeader","header","append","getResponseHeader","getAllResponseHeaders","results","seperator","String","fromCharCode","linebreaker","overrideMimeType","mime","url","_ExtandableXHR$protot","_len2","rest","_key2","send","readyState","OPENED","_mockFetch","_processResponse","credentials","withCredentials","set","_setProperty","DONE","status","statusText","_dispatchEvents","_this3","total","loaded","dispatchEvent","extensify","handshake","hasController","reg","skipUpdate","REQUEST_CLAIM","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","iterator","returnMethod","record","tryCatch","GenStateSuspendedYield","resultName","nextLoc","_sent","dispatchException","ContinueSentinel","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AsyncIterator","invoke","hasOwn","__await","unwrapped","process","domain","previousPromise","callInvokeWithMethodAndArg","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","Op","$Symbol","Symbol","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","displayName","isGeneratorFunction","genFun","ctor","awrap","async","iter","object","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","target","comparer","handler","evt","removeEventListener","createClient","forceLegacy","_client2","protocol","hostname","_client","reason","Native","Extendable","_native","checked","_loop","checkLack","mapPrototypeMethods","descriptor","nativeFn","_typeof","port1","port2","timeout","MessageChannel","timer","isFinite","setTimeout","JSON","stringify","onmessage","clearTimeout","postMessage","g","hadRuntime","oldRuntime","messaging_ServiceWorkerMessageError","ServiceWorkerMessageError","remoteError","stack","client_ServiceMockerClient","ServiceMockerClient","mockClient","messageHandler","messageEventListener","onMessage","ports","port","canHandle","withStack","postError","sendAction","_a","dispose","service_mocker_client","ClientBase","_smClient","on_message_OnMessageMetadata","OnMessageMetadata","eventName","tdm","allowOn","extend","client_ClientMetadata","ClientMetadata","metaArgs","messageHandlers","Map","clientMessage","getMetaFor","_i","asKeyValArray","_b","single","client_client","decorator","ContextMessageHandler","handlersMap","has","methodName","client_SWClient","SWClient","installed","restoreDB","DB","isExtendingClientBase","WrappedClientMockerServer","clientMeta","serviceMockerClient","registerTarget","Client","PONG","ESTABLISHED"],"mappings":"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","file":"common.42951d9e7898763471e9.chunk.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.getNewestReg = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Get newest service worker registration\n *\n * @return {Promise<ServiceWorkerRegistration>}\n */\n/* istanbul ignore next: unable to test it on single run */\nvar getNewestReg = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n    var _navigator, serviceWorker, registration, newWorker;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _navigator = navigator, serviceWorker = _navigator.serviceWorker;\n\n\n            updateLog.color('darkorchid').info('checking for updates');\n\n            _context.next = 4;\n            return serviceWorker.getRegistration();\n\n          case 4:\n            registration = _context.sent;\n\n            if (registration) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('no active service worker registration is found');\n\n          case 7:\n            _context.next = 9;\n            return registration.update();\n\n          case 9:\n            newWorker = registration.installing || registration.waiting;\n\n            if (!newWorker) {\n              _context.next = 16;\n              break;\n            }\n\n            updateLog.info('installing updates');\n\n            // wait until worker is activated\n            _context.next = 14;\n            return (0, _utils.eventWaitUntil)(newWorker, 'statechange', function () {\n              return newWorker.state === 'activated';\n            });\n\n          case 14:\n            _context.next = 17;\n            break;\n\n          case 16:\n            updateLog.color('lightseagreen').info('already up-to-date');\n\n          case 17:\n            return _context.abrupt('return', registration);\n\n          case 18:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getNewestReg() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _utils = require('../../utils/');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar updateLog = _utils.debug.scope('update');exports.getNewestReg = getNewestReg;\n//# sourceMappingURL=get-newest-reg.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/modern/get-newest-reg.js\n// module id = 0eeZ\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n/**\n * Create custom event\n *\n * @param  {string} name event name\n * @return {Event}\n */\n/* istanbul ignore next */\nfunction createEvent(name) {\n  try {\n    return new Event(name);\n  } catch (e) {\n    var event = document.createEvent('Event');\n    event.initEvent(name, false, false);\n    return event;\n  }\n}\n\n// Don't use `export function createEvent() {}`\n// because `istanbul ignore next` has issue with ES6 exports\n// <https://github.com/gotwarlost/istanbul/issues/762>\nexports.createEvent = createEvent;\n//# sourceMappingURL=create-event.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/legacy/create-event.js\n// module id = 0jhs\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.register = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Register service worker\n *\n * @param  {string}                             scriptURL\n * @param  {ServiceWorkerRegisterOptions}       options\n * @return {Promise<ServiceWorkerRegistration>}\n */\nvar register = exports.register = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee(scriptURL, options) {\n    var _navigator, serviceWorker;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _navigator = navigator, serviceWorker = _navigator.serviceWorker;\n            _context.next = 3;\n            return serviceWorker.register(scriptURL, options);\n\n          case 3:\n            return _context.abrupt('return', (0, _connect.connect)());\n\n          case 4:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function register(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _connect = require('./connect');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n//# sourceMappingURL=register.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/modern/register.js\n// module id = 0y6h\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar isIE = /Trident|Edge/.test(navigator.userAgent);\n\nvar defaultColor = 'dodgerblue';\n\nvar colorPresets = {\n  log: defaultColor,\n  info: defaultColor,\n  warn: 'goldenrod',\n  error: 'crimson'\n};\n\nvar PrefixedConsole = exports.PrefixedConsole = function () {\n  /**\n   * Logger namespace\n   *\n   * @private\n   * @type {string}\n   */\n  function PrefixedConsole() {\n    var namespace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'mocker';\n    var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : colorPresets.log;\n\n    _classCallCheck(this, PrefixedConsole);\n\n    this._namespace = 'mocker';\n    this._color = colorPresets.log;\n\n    this._namespace = namespace;\n    this._color = color;\n  }\n\n  /**\n   * Set logger color, returns new PrefixedConsole\n   *\n   * @param  {string} c Color string\n   * @return {PrefixedConsole}\n   */\n\n\n  /**\n   * Logger color\n   *\n   * @private\n   * @type {string}\n   */\n\n\n  PrefixedConsole.prototype.color = function color(c) {\n    return new PrefixedConsole(this._namespace, c);\n  };\n\n  /**\n   * Set logger namespace, returns new PrefixedConsole\n   *\n   * @param  {string} ns Namespace\n   * @return {PrefixedConsole}\n   */\n\n\n  PrefixedConsole.prototype.scope = function scope(ns) {\n    return new PrefixedConsole(this._namespace + ':' + ns, this._color);\n  };\n\n  return PrefixedConsole;\n}();\n\nvar debug = exports.debug = new PrefixedConsole();\n\n/* istanbul ignore else */\n// inherit console methods\nif (typeof Object.setPrototypeOf === 'function') {\n  Object.setPrototypeOf(PrefixedConsole.prototype, console);\n} else {\n  var desc = {};\n\n  Object.getOwnPropertyNames(PrefixedConsole.prototype).forEach(function (prop) {\n    desc[prop] = Object.getOwnPropertyDescriptor(PrefixedConsole.prototype, prop);\n  });\n\n  PrefixedConsole.prototype = Object.create(console, desc);\n}\n\n['log', 'info', 'warn', 'error'].forEach(function (method) {\n  PrefixedConsole.prototype[method] = function logger() {\n    var _console2;\n\n    var _namespace = this._namespace,\n        _color = this._color;\n\n    /* istanbul ignore if */\n\n    for (var _len = arguments.length, messages = Array(_len), _key = 0; _key < _len; _key++) {\n      messages[_key] = arguments[_key];\n    }\n\n    if (isIE) {\n      var _console;\n\n      return (_console = console)[method].apply(_console, ['[' + _namespace + ']'].concat(messages));\n    }\n\n    var head = '%c[' + _namespace + ']%c';\n\n    if (/%c/.test(messages[0])) {\n      head = head + ' ' + messages.shift();\n    }\n\n    var color = _color === defaultColor ? colorPresets[method] : _color;\n\n    (_console2 = console)[method].apply(_console2, [head, 'color: ' + color, 'color: #000'].concat(messages));\n  };\n});\n//# sourceMappingURL=debug.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/debug.js\n// module id = 1ZRj\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.LegacyClient = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _utils = require('../../utils/');\n\nvar _constants = require('../../constants/');\n\nvar _patchXhr = require('./patch-xhr');\n\nvar _patchFetch = require('./patch-fetch');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar clientLog = _utils.debug.scope('legacy');\nvar registrations = {};\n\nvar LegacyClient = exports.LegacyClient = function () {\n\n  /**\n   * Points to currently activated ServiceWorker object.\n   * Stays null when running in legacy mode.\n   *\n   * @readonly\n   * @type {null}\n   */\n\n  /**\n   * Indicates which mode current client is running on.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n  function LegacyClient(scriptURL) {\n    var _this = this;\n\n    _classCallCheck(this, LegacyClient);\n\n    this.isLegacy = true;\n    this.ready = null;\n    this.controller = null;\n    this._registration = null;\n\n    (0, _patchXhr.patchXHR)();\n    (0, _patchFetch.patchFetch)();\n\n    var promise = null;\n\n    // avoid duplications\n    if (registrations[scriptURL]) {\n      promise = registrations[scriptURL];\n    } else {\n      registrations[scriptURL] = promise = new Promise(function (resolve, reject) {\n        var script = document.createElement('script');\n        script.src = scriptURL;\n        script.onload = resolve;\n        script.onerror = reject;\n\n        document.body.appendChild(script);\n      });\n    }\n\n    /* istanbul ignore next */\n    this.ready = promise.then(function () {\n      return (0, _utils.sendMessageRequest)(window, {\n        action: _constants.ACTION.PING\n      });\n    }).then(function () {\n      clientLog.info('connection established');\n      return _this._registration;\n    }).catch(function (error) {\n      // `ready` should never be rejected\n      clientLog.error('bootstrap failed', error);\n    });\n  }\n\n  /**\n   * Update registration, this method has no effect in legacy mode\n   *\n   * @return {Promise<null>}\n   */\n\n\n  /**\n   * Defines whether a client has connected to mocker server.\n   * Resolves with `null` as there're actually no registrations\n   *\n   * @readonly\n   * @type {Promise<null>}\n   */\n\n\n  LegacyClient.prototype.update = function () {\n    var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt('return', Promise.resolve(this._registration));\n\n            case 1:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function update() {\n      return _ref.apply(this, arguments);\n    }\n\n    return update;\n  }();\n\n  /**\n   * Get current registration, resolved with `null` in legacy mode\n   *\n   * @return {Promise<null>}\n   */\n\n\n  LegacyClient.prototype.getRegistration = function () {\n    var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2() {\n      return _regenerator2.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt('return', Promise.resolve(this._registration));\n\n            case 1:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getRegistration() {\n      return _ref2.apply(this, arguments);\n    }\n\n    return getRegistration;\n  }();\n\n  /* istanbul ignore next */\n  /**\n   * Unregister mocker, this method has no effect in legacy mode\n   *\n   * @return {Promise<false>}\n   */\n\n\n  LegacyClient.prototype.unregister = function () {\n    var _ref3 = _asyncToGenerator(_regenerator2.default.mark(function _callee3() {\n      return _regenerator2.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _utils.debug.scope('legacy').warn('mocker in legacy mode can\\'t be unregistered');\n\n              return _context3.abrupt('return', false);\n\n            case 2:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function unregister() {\n      return _ref3.apply(this, arguments);\n    }\n\n    return unregister;\n  }();\n\n  return LegacyClient;\n}();\n//# sourceMappingURL=client.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/legacy/client.js\n// module id = 21Xv\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.ModernClient = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _utils = require('../../utils/');\n\nvar _register = require('./register');\n\nvar _connect = require('./connect');\n\nvar _getNewestReg = require('./get-newest-reg');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ModernClient = exports.ModernClient = function () {\n\n  /**\n   * Defines whether a client has connected to mocker server.\n   *\n   * @readonly\n   * @type {Promise<ServiceWorkerRegistration>}\n   */\n  function ModernClient(scriptURL) {\n    var _this = this;\n\n    _classCallCheck(this, ModernClient);\n\n    this.isLegacy = false;\n    this.ready = null;\n    this.controller = null;\n\n    /* istanbul ignore next */\n    this.ready = this._init(scriptURL).then(function (registration) {\n      _this.controller = registration.active;\n      return registration;\n    }).catch(function (error) {\n      _utils.debug.error('mocker initialization failed: ', error);\n    });\n  }\n\n  /**\n   * Update the service worker registration immediately\n   *\n   * @return {Promise<ServiceWorkerRegistration>}\n   */\n\n\n  /**\n   * Points to currently activated ServiceWorker object.\n   *\n   * @readonly\n   * @type {ServiceWorker}\n   */\n\n  /**\n   * Indicates which mode current client is running on.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n\n\n  ModernClient.prototype.update = function () {\n    var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt('return', (0, _getNewestReg.getNewestReg)());\n\n            case 1:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function update() {\n      return _ref.apply(this, arguments);\n    }\n\n    return update;\n  }();\n\n  /**\n   * Get current service worker registration.\n   *\n   * @return {Promise<ServiceWorkerRegistration>}\n   */\n\n\n  ModernClient.prototype.getRegistration = function () {\n    var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2() {\n      return _regenerator2.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt('return', this.ready);\n\n            case 1:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getRegistration() {\n      return _ref2.apply(this, arguments);\n    }\n\n    return getRegistration;\n  }();\n\n  /* istanbul ignore next: don't unregister sw in tests */\n  /**\n   * Unregister current service worker registration,\n   * call this method will invoke `ServiceWorkerRegistration.unregister()` method when possible.\n   *\n   * @return {Promise<boolean>}\n   */\n\n\n  ModernClient.prototype.unregister = function () {\n    var _ref3 = _asyncToGenerator(_regenerator2.default.mark(function _callee3() {\n      var registration, result;\n      return _regenerator2.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.getRegistration();\n\n            case 2:\n              registration = _context3.sent;\n              _context3.next = 5;\n              return registration.unregister();\n\n            case 5:\n              result = _context3.sent;\n\n\n              if (!result) {\n                // tslint:disable-next-line max-line-length\n                _utils.debug.warn('this service worker has already been unregistered, you may need to close all relative tabs to remove it');\n              }\n\n              return _context3.abrupt('return', result);\n\n            case 8:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function unregister() {\n      return _ref3.apply(this, arguments);\n    }\n\n    return unregister;\n  }();\n\n  /**\n   * Init mocker\n   *\n   * @private\n   * @param  {string} scriptURL\n   * @return {Promise<ServiceWorkerRegistration>}\n   */\n\n\n  ModernClient.prototype._init = function () {\n    var _ref4 = _asyncToGenerator(_regenerator2.default.mark(function _callee4(scriptURL) {\n      var registration;\n      return _regenerator2.default.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return (0, _register.register)(scriptURL, {\n                scope: location.pathname\n              });\n\n            case 2:\n              registration = _context4.sent;\n\n\n              this._autoSyncClient();\n\n              return _context4.abrupt('return', registration);\n\n            case 5:\n            case 'end':\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function _init(_x) {\n      return _ref4.apply(this, arguments);\n    }\n\n    return _init;\n  }();\n\n  /**\n   * Synchronize mocker controller when sw controller changed\n   *\n   * @private\n   */\n\n\n  ModernClient.prototype._autoSyncClient = function _autoSyncClient() {\n    var _this2 = this;\n\n    var _navigator = navigator,\n        serviceWorker = _navigator.serviceWorker;\n\n\n    var updateLog = _utils.debug.scope('update');\n\n    /* istanbul ignore next: won't occur in tests */\n    serviceWorker.addEventListener('controllerchange', _asyncToGenerator(_regenerator2.default.mark(function _callee5() {\n      var registration;\n      return _regenerator2.default.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return (0, _connect.connect)(true);\n\n            case 3:\n              registration = _context5.sent;\n\n              _this2.controller = registration.active;\n\n              updateLog.color('crimson').warn('mocker updated, reload your requests to take effect');\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5['catch'](0);\n\n              updateLog.error('connecting to new service worker failed', _context5.t0);\n\n            case 11:\n            case 'end':\n              return _context5.stop();\n          }\n        }\n      }, _callee5, _this2, [[0, 8]]);\n    })));\n  };\n\n  return ModernClient;\n}();\n//# sourceMappingURL=client.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/modern/client.js\n// module id = 2bYr\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _debug = require('./debug');\n\nObject.keys(_debug).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _debug[key];\n    }\n  });\n});\n\nvar _defer = require('./defer');\n\nObject.keys(_defer).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _defer[key];\n    }\n  });\n});\n\nvar _extensify = require('./extensify');\n\nObject.keys(_extensify).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extensify[key];\n    }\n  });\n});\n\nvar _eventWaitUntil = require('./event-wait-until');\n\nObject.keys(_eventWaitUntil).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _eventWaitUntil[key];\n    }\n  });\n});\n\nvar _sendMessageRequest = require('./send-message-request');\n\nObject.keys(_sendMessageRequest).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _sendMessageRequest[key];\n    }\n  });\n});\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/index.js\n// module id = 6DF8\n// module chunks = 0","/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n(function(factory) {\n\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window ||\n                     typeof self === 'object' && self;\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  if(typeof exports !== 'undefined') {\n    factory(exports);\n  } else if(globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({});\n\n    // Finally register the global hljs with AMD.\n    if(typeof define === 'function' && define.amd) {\n      define([], function() {\n        return globalObject.hljs;\n      });\n    }\n  }\n\n}(function(hljs) {\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys;\n\n  // Global internal variables used within the highlight.js library.\n  var languages = {},\n      aliases   = {};\n\n  // Regular expressions used throughout the highlight.js library.\n  var noHighlightRe    = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe      = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm;\n\n  var spanEndTag = '</span>';\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    match = languagePrefixRe.exec(classes);\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i]\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  function inherit(parent) {  // inherit(parent, override_obj, override_obj, ...)\n    var key;\n    var result = {};\n    var objects = Array.prototype.slice.call(arguments, 1);\n\n    for (key in parent)\n      result[key] = parent[key];\n    objects.forEach(function(obj) {\n      for (key in obj)\n        result[key] = obj[key];\n    });\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3)\n          offset += child.nodeValue.length;\n        else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset !== highlighted[0].offset) {\n        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n\n      if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n\n      ... which is collapsed to:\n      */\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {return ' ' + a.nodeName + '=\"' + escape(a.value).replace('\"', '&quot;') + '\"';}\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substring(processed, stream[0].offset));\n      processed = stream[0].offset;\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function expand_mode(mode) {\n    if (mode.variants && !mode.cached_variants) {\n      mode.cached_variants = mode.variants.map(function(variant) {\n        return inherit(mode, {variants: null}, variant);\n      });\n    }\n    return mode.cached_variants || (mode.endsWithParent && [inherit(mode)]) || [mode];\n  }\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n        return (re && re.source) || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(\n        reStr(value),\n        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n      );\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled)\n        return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n          str.split(' ').forEach(function(kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords === 'string') { // string\n          flatten('keyword', mode.keywords);\n        } else {\n          objectKeys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n        mode.keywords = compiled_keywords;\n      }\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin)\n          mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = /\\B|\\b/;\n        if (mode.end)\n          mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end)\n          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null)\n        mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      mode.contains = Array.prototype.concat.apply([], mode.contains.map(function(c) {\n        return expand_mode(c === 'self' ? mode : c)\n      }));\n      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators =\n        mode.contains.map(function(c) {\n          return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n        })\n        .concat([mode.terminator_end, mode.illegal])\n        .map(reStr)\n        .filter(Boolean);\n      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(/*s*/) {return null;}};\n    }\n\n    compileMode(language);\n  }\n\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n\n  */\n  function highlight(name, value, ignore_illegals, continuation) {\n\n    function subMode(lexeme, mode) {\n      var i, length;\n\n      for (i = 0, length = mode.contains.length; i < length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan    = '<span class=\"' + classPrefix,\n          closeSpan   = leaveOpen ? '' : spanEndTag\n\n      openSpan += classname + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n\n      if (!top.keywords)\n        return escape(mode_buffer);\n\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substring(last_index, match.index));\n        keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ?\n                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += (top.subLanguage != null ? processSubLanguage() : processKeywords());\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className? buildSpan(mode.className, '', true): '';\n      top = Object.create(mode, {parent: {value: top}});\n    }\n\n    function processLexeme(buffer, lexeme) {\n\n      mode_buffer += buffer;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n      if (end_mode) {\n        var origin = top;\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n        do {\n          if (top.className) {\n            result += spanEndTag;\n          }\n          if (!top.skip) {\n            relevance += top.relevance;\n          }\n          top = top.parent;\n        } while (top !== end_mode.parent);\n        if (end_mode.starts) {\n          startNewMode(end_mode.starts, '');\n        }\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top))\n        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '', current;\n    for(current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match, count, index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match)\n          break;\n        count = processLexeme(value.substring(index, match.index), match[0]);\n        index = match.index + count;\n      }\n      processLexeme(value.substr(index));\n      for(current = top; current.parent; current = current.parent) { // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message && e.message.indexOf('Illegal') !== -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n  */\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).forEach(function(name) {\n      var current = highlight(name, text, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n  */\n  function fixMarkup(value) {\n    return !(options.tabReplace || options.useBR)\n      ? value\n      : value.replace(fixMarkupRe, function(match, p1) {\n          if (options.useBR && match === '\\n') {\n            return '<br>';\n          } else if (options.tabReplace) {\n            return p1.replace(/\\t/g, options.tabReplace);\n          }\n          return '';\n      });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result   = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n\n    if (isNotHighlighted(language))\n        return;\n\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    originalStream = nodeStream(node);\n    if (originalStream.length) {\n      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    if (lang.aliases) {\n      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.inherit = inherit;\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit(\n      {\n        className: 'comment',\n        begin: begin, end: end,\n        contains: []\n      },\n      inherits || {}\n    );\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' +\n      '%|em|ex|ch|rem'  +\n      '|vw|vh|vmin|vmax' +\n      '|cm|mm|in|pt|pc|px' +\n      '|deg|grad|rad|turn' +\n      '|s|ms' +\n      '|Hz|kHz' +\n      '|dpi|dpcm|dppx' +\n      ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/, end: /\\]/,\n        relevance: 0,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\n  return hljs;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/highlight.js/lib/highlight.js\n// module id = 70Rd\n// module chunks = 0","module.exports = function(hljs) {\n  var LITERALS = {literal: 'true false null'};\n  var TYPES = [\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE\n  ];\n  var VALUE_CONTAINER = {\n    end: ',', endsWithParent: true, excludeEnd: true,\n    contains: TYPES,\n    keywords: LITERALS\n  };\n  var OBJECT = {\n    begin: '{', end: '}',\n    contains: [\n      {\n        className: 'attr',\n        begin: /\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE],\n        illegal: '\\\\n',\n      },\n      hljs.inherit(VALUE_CONTAINER, {begin: /:/})\n    ],\n    illegal: '\\\\S'\n  };\n  var ARRAY = {\n    begin: '\\\\[', end: '\\\\]',\n    contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\n    illegal: '\\\\S'\n  };\n  TYPES.splice(TYPES.length, 0, OBJECT, ARRAY);\n  return {\n    contains: TYPES,\n    keywords: LITERALS,\n    illegal: '\\\\S'\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/highlight.js/lib/languages/json.js\n// module id = GdJY\n// module chunks = 0","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, TypeOfActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'customers/:id?'\n})\nclass $Customer extends ActiveRecord() implements modelContract.Customer {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  CustomerID: string;\n\n  @Prop()\n  CompanyName: string;\n\n  @Prop()\n  ContactName: string;\n\n  @Prop()\n  ContactTitle: string;\n\n  @Prop()\n  Address: string;\n\n  @Prop()\n  City: string;\n\n  @Prop()\n  Region: string;\n\n  @Prop()\n  PostalCode: string;\n\n  @Prop()\n  Country: string;\n\n  @Prop()\n  Phone: string;\n\n  @Prop()\n  Fax: string;\n}\n\nexport const Customer: TypeOfActiveRecord<$Customer, typeof $Customer> = <any> $Customer;\nexport type Customer = ActiveRecord<$Customer>;\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/models/customer.ts","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'categories/:id?'\n})\nclass $Category implements modelContract.Category {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  CategoryID: number;\n\n  @Prop()\n  CategoryName: string;\n\n  @Prop()\n  Description: string;\n\n  @Prop()\n  Picture: string;\n}\n\nexport const Category = ActiveRecord($Category);\nexport type Category = ActiveRecord<$Category>;\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/models/category.ts","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'employees/:id?'\n})\nclass $Employee implements modelContract.Employee {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  EmployeeID: number;\n\n  @Prop()\n  LastName: string;\n\n  @Prop()\n  FirstName: string;\n\n  @Prop()\n  Title: string;\n\n  @Prop()\n  TitleOfCourtesy: string;\n\n  @Prop()\n  BirthDate: string;\n\n  @Prop()\n  HireDate: string;\n\n  @Prop()\n  Address: string;\n\n  @Prop()\n  City: string;\n\n  @Prop()\n  Region: string;\n\n  @Prop()\n  PostalCode: string;\n\n  @Prop()\n  Country: string;\n\n  @Prop()\n  HomePhone: string;\n\n  @Prop()\n  Extension: number;\n\n  @Prop()\n  Photo: any;\n\n  @Prop()\n  Notes: string;\n\n  @Prop()\n  ReportsTo: number;\n\n  @Prop()\n  PhotoPath: string;\n\n}\n\nexport const Employee = ActiveRecord($Employee);\nexport type Employee = ActiveRecord<$Employee>;\n\n/* When moving to TS 2.8+\nexport const Employee: TypeOfActiveRecord<typeof $Employee> = <any> $Employee;\nexport type Employee = InstanceType<typeof Employee>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/models/employee.ts","import { Identity, Prop, Constructor } from '@tdm/data';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'employeeTerritories/:id?'\n})\nclass $EmployeeTerritory implements modelContract.EmployeeTerritory {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  EmployeeTerritory: number;\n\n  @Prop()\n  EmployeeID: number;\n\n  @Prop()\n  TerritoryID: number;\n\n}\n\nexport const EmployeeTerritory = ActiveRecord($EmployeeTerritory);\nexport type EmployeeTerritory = ActiveRecord<$EmployeeTerritory>;\n\n/* When moving to TS 2.8+\nexport const EmployeeTerritory: TypeOfActiveRecord<typeof $EmployeeTerritory> = <any> $EmployeeTerritory;\nexport type EmployeeTerritory = InstanceType<typeof EmployeeTerritory>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/models/employee-territory.ts","import { Identity, Prop, Relation } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\nimport { Customer } from './customer';\n\n@HttpResource({\n  endpoint: 'orders/:id?'\n})\nclass $Order implements modelContract.Order {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  OrderID: number;\n\n  @Prop()\n  CustomerID: string;\n\n  @Prop()\n  @Relation({ foreignKey: 'CustomerID' })\n  Customer: Customer;\n\n  @Prop()\n  EmployeeID: number;\n\n  @Prop()\n  OrderDate: string;\n\n  @Prop()\n  RequiredDate: string;\n\n  @Prop()\n  ShippedDate: string;\n\n  @Prop()\n  ShipVia: number;\n\n  @Prop()\n  Freight: number;\n\n  @Prop()\n  ShipName: string;\n\n  @Prop()\n  ShipAddress: string;\n\n  @Prop()\n  ShipCity: string;\n\n  @Prop()\n  ShipRegion: string;\n\n  @Prop()\n  ShipPostalCode: string;\n\n  @Prop()\n  ShipCountry: string;\n\n}\n\nexport const Order = ActiveRecord($Order);\nexport type Order = ActiveRecord<$Order>;\n\n/* When moving to TS 2.8+\nexport const Order: TypeOfActiveRecord<typeof $Order> = <any> $Order;\nexport type Order = InstanceType<typeof Order>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/models/order.ts","import { Identity, Prop, Constructor } from '@tdm/data';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'orderDetails/:id?'\n})\nclass $OrderDetail implements modelContract.OrderDetail {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  OrderDetailID: string;\n\n  @Prop()\n  OrderID: number;\n\n  @Prop()\n  ProductID: string;\n\n  @Prop()\n  UnitPrice: string;\n\n  @Prop()\n  Quantity: string;\n\n  @Prop()\n  Discount: string;\n\n}\n\nexport const OrderDetail = ActiveRecord($OrderDetail);\nexport type OrderDetail = ActiveRecord<$OrderDetail>;\n\n/* When moving to TS 2.8+\nexport const OrderDetail: TypeOfActiveRecord<typeof $OrderDetail> = <any> $OrderDetail;\nexport type OrderDetail = InstanceType<typeof OrderDetail>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/models/order-detail.ts","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'products/:id?'\n})\nclass $Product implements modelContract.Product {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  ProductID: number;\n\n  @Prop()\n  ProductName: string;\n\n  @Prop()\n  SupplierID: number;\n\n  @Prop()\n  CategoryID: number;\n\n  @Prop()\n  QuantityPerUnit: string;\n\n  @Prop()\n  UnitPrice: number;\n\n  @Prop()\n  UnitsInStock: number;\n\n  @Prop()\n  UnitsOnOrder: number;\n\n  @Prop()\n  ReorderLevel: number;\n\n  @Prop()\n  Discontinued: number;\n\n}\n\nexport const Product = ActiveRecord($Product);\nexport type Product = ActiveRecord<$Product>;\n\n/* When moving to TS 2.8+\nexport const Product: TypeOfActiveRecord<typeof $Product> = <any> $Product;\nexport type Product = InstanceType<typeof Product>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/models/product.ts","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'regions/:id?'\n})\nclass $Region implements modelContract.Region {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  RegionID: number;\n\n  @Prop()\n  RegionDescription: string;\n\n}\n\nexport const Region = ActiveRecord($Region);\nexport type Region = ActiveRecord<$Region>;\n\n/* When moving to TS 2.8+\nexport const Region: TypeOfActiveRecord<typeof $Region> = <any> $Region;\nexport type Region = InstanceType<typeof Region>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/models/region.ts","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'shippers/:id?'\n})\nclass $Shipper implements modelContract.Shipper {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  ShipperID: number;\n\n  @Prop()\n  CompanyName: string;\n\n  @Prop()\n  Phone: string;\n\n}\n\nexport const Shipper = ActiveRecord($Shipper);\nexport type Shipper = ActiveRecord<$Shipper>;\n\n/* When moving to TS 2.8+\nexport const Shipper: TypeOfActiveRecord<typeof $Shipper> = <any> $Shipper;\nexport type Shipper = InstanceType<typeof Shipper>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/models/shipper.ts","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'suppliers/:id?'\n})\nclass $Supplier implements modelContract.Supplier {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  SupplierID: number;\n\n  @Prop()\n  CompanyName: string;\n\n  @Prop()\n  ContactName: string;\n\n  @Prop()\n  ContactTitle: string;\n\n  @Prop()\n  Address: string;\n\n  @Prop()\n  City: string;\n\n  @Prop()\n  Region: string;\n\n  @Prop()\n  PostalCode: string;\n\n  @Prop()\n  Country: string;\n\n  @Prop()\n  Phone: string;\n\n  @Prop()\n  Fax: string;\n\n  @Prop()\n  HomePage: string;\n\n}\n\nexport const Supplier = ActiveRecord($Supplier);\nexport type Supplier = ActiveRecord<$Supplier>;\n\n/* When moving to TS 2.8+\nexport const Supplier: TypeOfActiveRecord<typeof $Supplier> = <any> $Supplier;\nexport type Supplier = InstanceType<typeof Supplier>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/models/supplier.ts","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'territories/:id?'\n})\nclass $Territory implements modelContract.Territory {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  TerritoryID: number;\n\n  @Prop()\n  TerritoryDescription: string;\n\n  @Prop()\n  RegionID: number;\n\n}\n\nexport const Territory = ActiveRecord($Territory);\nexport type Territory = ActiveRecord<$Territory>;\n\n/* When moving to TS 2.8+\nexport const Territory: TypeOfActiveRecord<typeof $Territory> = <any> $Territory;\nexport type Territory = InstanceType<typeof Territory>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/models/territory.ts","'use strict';\n\nexports.__esModule = true;\nexports.dispatchFetchEvent = dispatchFetchEvent;\n\nvar _utils = require('../../utils/');\n\nvar _createEvent = require('./create-event');\n\nvar fetchEvents = [];\nvar addEventListener = self.addEventListener.bind(self);\n\n// handle fetch events ourselves\nself.addEventListener = function (type, listener, useCapture) {\n  if (type === 'fetch') {\n    fetchEvents.push(listener);\n  } else {\n    addEventListener(type, listener, useCapture);\n  }\n};\n\n/**\n * Dispatch fetch event on GlobalScope in legacy mode.\n * Resolved with `null` if `event.respondWith` isn't called.\n *\n * @param  {Request} request Request object\n * @return {Promise<Response>}\n */\nfunction dispatchFetchEvent(request) {\n  var fetchEvt = (0, _createEvent.createEvent)('fetch');\n  var deferred = new _utils.Defer();\n\n  fetchEvt.request = request;\n\n  fetchEvt.respondWith = function (response) {\n    if (deferred.done) {\n      // tslint:disable-next-line max-line-length\n      throw new Error('Failed to execute \\'respondWith\\' on \\'FetchEvent\\': The fetch event has already been responded to.');\n    }\n\n    deferred.resolve(response);\n  };\n\n  fetchEvents.forEach(function (listener) {\n    listener(fetchEvt);\n  });\n\n  // `event.respondWith` wasn't called\n  if (!deferred.done) {\n    deferred.resolve(null);\n  }\n\n  return deferred.promise;\n}\n//# sourceMappingURL=dispatch-fetch-event.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/legacy/dispatch-fetch-event.js\n// module id = K6Tf\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _action = require('./action');\n\nObject.keys(_action).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _action[key];\n    }\n  });\n});\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/constants/index.js\n// module id = NWEN\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.patchFetch = patchFetch;\n\nvar _dispatchFetchEvent = require('./dispatch-fetch-event');\n\nfunction patchFetch() {\n  /* istanbul ignore if */\n  if (!self.fetch) {\n    throw new Error('fetch is required for legacy mode');\n  }\n\n  // don't patch polyfills\n  if (!isNativeFetch()) {\n    return;\n  }\n\n  // fetch should be called within Window context\n  var nativeFetch = self.fetch.bind(self);\n\n  function patchedFetch(input, init) {\n    var request = new Request(input, init);\n\n    return (0, _dispatchFetchEvent.dispatchFetchEvent)(request).then(function (response) {\n      if (response) {\n        // `event.respondWith` called\n        // resolve with mock response\n        return response;\n      } else {\n        // fetch real response\n        return nativeFetch(request);\n      }\n    });\n  }\n\n  // marked with `mockerPatched` symbol\n  patchedFetch.mockerPatched = true;\n  // keep a native reference\n  patchedFetch.native = nativeFetch;\n\n  self.fetch = patchedFetch;\n}\n\n/**\n * Check `self.fetch` is (possible) a native one or a polyfill\n *\n * @return {boolean}\n */\n/**\n * Patch native `fetch` interface\n *\n * Notes:\n * - Why we should patch native `fetch`:\n *   Although all the environments that support service worker will support fetch too,\n *   but there are still possiblities that cause mocker runs in legacy mode,\n *   for example, user starts a remote access with `http://192.168.1.129:3000`,\n *   mocker will bootstrap in legacy mode because service worker can only be regiestered\n *   in secure pages.\n *   In case of this situation, we should patch up native fetch with a custom fetch event.\n *\n * - Don't patch fetch polyfills that are implementing with `XMLHttpRequest`:\n *   Since we've patched up native `XMLHttpRequest`,\n *   patching a fetch polyfill may cause an infinite loop:\n *   [unhandled -> fetch -> xhr -> router(unhandled) -> fetch]\n *\n * - Native fetch should always be called within Window context.\n *\n * - If custom fetch event resolved with `null`, re-fetch with native fetch.\n */\n\nfunction isNativeFetch() {\n  var fetch = self.fetch;\n\n  /* eslint-disable no-multi-spaces */\n  return !fetch.mockerPatched && // haven't been patched\n  !fetch.polyfill && // github fetch polyfill\n  fetch.toString === Function.prototype.toString && // sometimes `toString` method is overrided to pretend it's native XD\n  /\\[native code\\]/.test(fetch.toString()); // fetch is overrided\n  /* eslint-enable no-multi-spaces */\n}\n//# sourceMappingURL=patch-fetch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/legacy/patch-fetch.js\n// module id = QR+e\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Parse response with the specified `responseType`,\n * return `null` if any error occurs, see:\n * https://xhr.spec.whatwg.org/#the-response-attribute\n *\n * @async\n * @param  {Response}     response     Response object\n * @param  {string}       responseType XHR responseType\n * @return {Promise<any>}\n */\nvar parseResponse = function () {\n  var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2(response, responseType) {\n    var res, text, parser;\n    return _regenerator2.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            res = response.clone();\n            _context2.t0 = responseType;\n            _context2.next = _context2.t0 === '' ? 5 : _context2.t0 === 'text' ? 5 : _context2.t0 === 'json' ? 8 : _context2.t0 === 'blob' ? 11 : _context2.t0 === 'arraybuffer' ? 14 : _context2.t0 === 'document' ? 17 : 22;\n            break;\n\n          case 5:\n            _context2.next = 7;\n            return res.text();\n\n          case 7:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 8:\n            _context2.next = 10;\n            return res.json();\n\n          case 10:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 11:\n            _context2.next = 13;\n            return res.blob();\n\n          case 13:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 14:\n            _context2.next = 16;\n            return res.arrayBuffer();\n\n          case 16:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 17:\n            _context2.next = 19;\n            return res.text();\n\n          case 19:\n            text = _context2.sent;\n            parser = new DOMParser();\n            return _context2.abrupt('return', parser.parseFromString(text, getDocumentMIME(res)));\n\n          case 22:\n            _context2.next = 26;\n            break;\n\n          case 24:\n            _context2.prev = 24;\n            _context2.t1 = _context2['catch'](0);\n\n          case 26:\n            return _context2.abrupt('return', null);\n\n          case 27:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[0, 24]]);\n  }));\n\n  return function parseResponse(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n/**\n * Get MIME from 'content-type' header\n * @param  {Response} res Response object\n * @return {string}\n */\n\n\nexports.patchXHR = patchXHR;\n\nvar _createEvent = require('./create-event');\n\nvar _dispatchFetchEvent = require('./dispatch-fetch-event');\n\nvar _utils = require('../../utils/');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Patch native `XMLHttpRequest`\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Notes:\nhen and how to dispatch fetch event:\nttpRequest won't be sent until we call `xhr.send()`, so we should dispatch a\nfetch event when `xhr.send()` is invoked,\ny overriding `xhr.open()` method, we can get `request_method` and `request_url`,\ny overriding `xhr.setRequestHeader()`, we can get `request_headers`,\nreate a request instance with `request_method`, `request_url`, `request_headers`,\nand other options got from `this[xhrProp]` like `this.withCredentials` (will be\ndelegated to `this.nativeXHR[xhrProp]`).\nispatch fetch event with the request.\nf fetch event responds with a `Response`, parse it and dispatch `readystatechange`\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *      event and progress events via `this.dispatchEvent()` (will be delegated to\n`this.nativeXHR.dispatchEvent()`).\nr, re-send native requeust via `this.nativeXHR.send()`.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nbout events handling:\nince we delegate all `XMLHttpRequest.prototype` methods to `this.nativeXHR`, there's\nno need to create an event emitter, simply calling `this.dispatchEvent()` and all\nregistered listeners will be invoked, including those are set by `instance#on[event]`.\neanwhile, all the event handlers you registered on `ExtandableXHR` instance will actually be\nregistered on `this.nativeXHR`. So even if we re-send the native request, all the handlers will\nbe called properly.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction patchXHR() {\n  if (XMLHttpRequest.mockerPatched) {\n    return;\n  }\n\n  self.XMLHttpRequest = MockerXHR;\n}\n\n// only `readystatechange` event and progress events are need to be dispatched\nvar EVENTS_LIST = ['readystatechange', 'loadstart', 'progress', 'load', 'loadend'];\n\nvar ExtandableXHR = (0, _utils.extensify)(XMLHttpRequest);\n\nvar MockerXHR = function (_ExtandableXHR) {\n  _inherits(MockerXHR, _ExtandableXHR);\n\n  function MockerXHR() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MockerXHR);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _ExtandableXHR.call.apply(_ExtandableXHR, [this].concat(args))), _this), _this._requestHeaders = new Headers(), _this._responseHeaders = null, _this._responseMIME = undefined, _this._method = undefined, _this._url = undefined, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  // marked with `mockerPatched` symbol\n\n\n  // keep a native reference\n\n\n  // record request headers via `setRequestHeader` method\n\n\n  // save response headers for `getResponseHeader(s)` methods\n\n\n  // override response 'Content-Type' header via `overrideMimeType` method\n\n\n  // save request method and url via `open` method\n\n\n  MockerXHR.prototype.setRequestHeader = function setRequestHeader(header, value) {\n    _ExtandableXHR.prototype.setRequestHeader.call(this, header, value);\n    this._requestHeaders.append(header, value);\n  };\n\n  MockerXHR.prototype.getResponseHeader = function getResponseHeader(header) {\n    if (!this._responseHeaders) {\n      return _ExtandableXHR.prototype.getResponseHeader.call(this, header);\n    }\n\n    return this._responseHeaders.get(header);\n  };\n\n  MockerXHR.prototype.getAllResponseHeaders = function getAllResponseHeaders() {\n    if (!this._responseHeaders) {\n      return _ExtandableXHR.prototype.getAllResponseHeaders.call(this);\n    }\n\n    var results = [];\n\n    // https://xhr.spec.whatwg.org/#dom-xmlhttprequest-getallresponseheaders\n    var seperator = String.fromCharCode(0x3A) + String.fromCharCode(0x20);\n    var linebreaker = String.fromCharCode(0x0D) + String.fromCharCode(0x0A);\n\n    this._responseHeaders.forEach(function (value, name) {\n      results.push([name, value].join(seperator));\n    });\n\n    return results.join(linebreaker);\n  };\n\n  MockerXHR.prototype.overrideMimeType = function overrideMimeType(mime) {\n    /* istanbul ignore if */\n    if (!_ExtandableXHR.prototype.overrideMimeType) {\n      return;\n    }\n\n    _ExtandableXHR.prototype.overrideMimeType.call(this, mime);\n    this._responseMIME = mime;\n  };\n\n  MockerXHR.prototype.open = function open(method, url) {\n    var _ExtandableXHR$protot;\n\n    for (var _len2 = arguments.length, rest = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      rest[_key2 - 2] = arguments[_key2];\n    }\n\n    (_ExtandableXHR$protot = _ExtandableXHR.prototype.open).call.apply(_ExtandableXHR$protot, [this, method, url].concat(rest));\n    this._method = method;\n    this._url = url;\n  };\n\n  MockerXHR.prototype.send = function send(data) {\n    var _this2 = this;\n\n    if (this.readyState !== this.OPENED) {\n      throw new Error('Failed to execute \\'send\\' on \\'XMLHttpRequest\\': The object\\'s state must be OPENED.');\n    }\n\n    this._mockFetch(data).then(function (result) {\n      if (result) {\n        // `event.respondWith` called\n        // resolve with mock response\n        _this2._processResponse(result);\n      } else {\n        // send real XMLHttpRequest\n        _ExtandableXHR.prototype.send.call(_this2, data);\n      }\n    });\n  };\n\n  /**\n   * Mock fetch\n   * @private\n   * @param  {any}               data request body\n   * @return {Promise<Response>}\n   */\n\n\n  MockerXHR.prototype._mockFetch = function _mockFetch(data) {\n    // GET|HEAD requests cannot include body\n    // set body to `null` will raise a TypeMismatchError in IE Edge\n    var body = this._method === 'GET' || this._method === 'HEAD' ? undefined : data;\n\n    var credentials = this.withCredentials ? 'include' : 'omit';\n\n    var request = new Request(this._url, {\n      body: body,\n      credentials: credentials,\n      method: this._method,\n      headers: this._requestHeaders\n    });\n\n    return (0, _dispatchFetchEvent.dispatchFetchEvent)(request);\n  };\n\n  /**\n   * Process response object\n   *\n   * @private\n   * @param  {Response}      response Response object\n   */\n\n\n  MockerXHR.prototype._processResponse = function () {\n    var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee(response) {\n      var result;\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (this._responseMIME) {\n                // apply `overrideMimeType`\n                response.headers.set('content-type', this._responseMIME);\n              }\n\n              _context.next = 3;\n              return parseResponse(response, this.responseType);\n\n            case 3:\n              result = _context.sent;\n\n\n              this._responseHeaders = response.headers;\n\n              // pretend this request is DONE\n              this._setProperty('readyState', this.DONE);\n              this._setProperty('responseURL', response.url);\n              this._setProperty('status', response.status);\n              this._setProperty('statusText', response.statusText);\n              this._setProperty('response', result);\n\n              if (!this.responseType || this.responseType === 'text') {\n                this._setProperty('responseText', result);\n              }\n\n              if (this.responseType === 'document') {\n                this._setProperty('responseXML', result);\n              }\n\n              this._dispatchEvents();\n\n            case 13:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function _processResponse(_x) {\n      return _ref.apply(this, arguments);\n    }\n\n    return _processResponse;\n  }();\n\n  /**\n   * Assign property to self\n   * @private\n   * @param {string} name  property name\n   * @param {any}    value property value\n   */\n\n\n  MockerXHR.prototype._setProperty = function _setProperty(name, value) {\n    // in IE & Safari, these property are internally read-only on native XHR instance\n    // assign to patched XHR, as a trade-off\n    Object.defineProperty(this, name, {\n      value: value,\n      writable: false,\n      enumerable: true,\n      configurable: true\n    });\n  };\n\n  /**\n   * Dispatch XHR events\n   * @private\n   */\n\n\n  MockerXHR.prototype._dispatchEvents = function _dispatchEvents() {\n    var _this3 = this;\n\n    EVENTS_LIST.forEach(function (type) {\n      var event = (0, _createEvent.createEvent)(type);\n\n      if (type !== 'readystatechange') {\n        // progress event\n        event.total = event.loaded = 1;\n      }\n\n      // Caveat: `this` & `event.target` are still the native one\n      _this3.dispatchEvent(event);\n    });\n  };\n\n  return MockerXHR;\n}(ExtandableXHR);\n\nMockerXHR.mockerPatched = true;\nMockerXHR.native = XMLHttpRequest;\nfunction getDocumentMIME(res) {\n  var contentType = res.headers.get('content-type');\n\n  /* istanbul ignore if */\n  if (!contentType) {\n    return 'text/html';\n  }\n\n  // strip charset\n  return contentType.replace(/;.*/, '');\n}\n//# sourceMappingURL=patch-xhr.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/legacy/patch-xhr.js\n// module id = R344\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.connect = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Connect to service worker\n *\n * @param  {boolean} [skipUpdate=false] Set to `true` to bypass auto update\n * @return {Promise<ServiceWorkerRegistration>}\n */\nvar connect = exports.connect = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n    var skipUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var _navigator, serviceWorker, hasController, reg;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _navigator = navigator, serviceWorker = _navigator.serviceWorker;\n\n            // controller may be set when sw is ready\n\n            hasController = !!serviceWorker.controller;\n\n            // chrome will sometimes be hanging after reloading page\n            // delay all actions until sw is ready\n\n            _context.next = 4;\n            return serviceWorker.ready;\n\n          case 4:\n            if (!(!skipUpdate && hasController)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return (0, _getNewestReg.getNewestReg)();\n\n          case 7:\n            _context.t0 = _context.sent;\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.next = 12;\n            return serviceWorker.getRegistration();\n\n          case 12:\n            _context.t0 = _context.sent;\n\n          case 13:\n            reg = _context.t0;\n            return _context.abrupt('return', handshake(reg));\n\n          case 15:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function connect() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n/**\n * Establish service worker connection\n *\n * @param  {ServiceWorkerRegistration} registration\n * @return {Promise<ServiceWorkerRegistration>}\n */\n\n\nvar handshake = function () {\n  var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2(registration) {\n    var controller;\n    return _regenerator2.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            controller = registration.active;\n\n            /* istanbul ignore if */\n\n            if (controller) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw new Error('no active service worker registration is found');\n\n          case 3:\n            if (navigator.serviceWorker.controller) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 6;\n            return (0, _utils.sendMessageRequest)(controller, {\n              action: _constants.ACTION.REQUEST_CLAIM\n            });\n\n          case 6:\n            _context2.next = 8;\n            return (0, _utils.sendMessageRequest)(controller, {\n              action: _constants.ACTION.PING\n            });\n\n          case 8:\n\n            _utils.debug.scope('modern').info('connection established');\n\n            return _context2.abrupt('return', registration);\n\n          case 10:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function handshake(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _utils = require('../../utils/');\n\nvar _constants = require('../../constants/');\n\nvar _getNewestReg = require('./get-newest-reg');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n//# sourceMappingURL=connect.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/modern/connect.js\n// module id = SB5n\n// module chunks = 0","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = arg;\n\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = SldL\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\nexports.eventWaitUntil = eventWaitUntil;\n/**\n * Comparer function\n *\n * @callback comparer\n * @param {Event} event Event object\n * @return {boolean}\n */\n\n/**\n * Wait until an event matches given conditions\n *\n * @param  {any}      target   Event target\n * @param  {string}   event    Event name\n * @param  {comparer} comparer Comparer function\n * @return {Promise<Event>}\n */\nfunction eventWaitUntil(target, event, comparer) {\n  return new Promise(function (resolve) {\n    target.addEventListener(event, function handler(evt) {\n      if (comparer(evt)) {\n        target.removeEventListener(event, handler);\n        resolve(evt);\n      }\n    });\n  });\n}\n//# sourceMappingURL=event-wait-until.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/event-wait-until.js\n// module id = VroV\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.createClient = createClient;\n\nvar _client = require('./modern/client');\n\nvar _client2 = require('./legacy/client');\n\n/**\n * Constructs a new Client instance with the given scriptURL\n *\n * @param  {string} scriptURL The location of your server script\n * @param  {Object} options   Initial options\n * @return {MockerClient}\n */\nfunction createClient(scriptURL) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options.forceLegacy) {\n    return new _client2.LegacyClient(scriptURL);\n  }\n\n  var useLegacy = isLegacyMode();\n\n  /* istanbul ignore if */\n  if (useLegacy) {\n    console.warn('Switching to legacy mode...');\n    return new _client2.LegacyClient(scriptURL);\n  }\n\n  return new _client.ModernClient(scriptURL);\n}\n\n/* istanbul ignore next */\nfunction isLegacyMode() {\n  if (!('serviceWorker' in navigator)) {\n    // tslint:disable-next-line max-line-length\n    console.warn('Service worker is not supported in your browser, please check: http://caniuse.com/#feat=serviceworkers');\n\n    return true;\n  }\n\n  if (location.protocol !== 'https:' && location.hostname !== 'localhost' && location.hostname !== '127.0.0.1') {\n    // tslint:disable-next-line max-line-length\n    console.warn('Service workers should be registered in secure pages, further information: https://github.com/w3c/ServiceWorker/blob/master/explainer.md#getting-started');\n\n    return true;\n  }\n\n  return false;\n}\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/index.js\n// module id = WrD7\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = Xxa5\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Defer =\n/**\n * Indicates whether this defer is end\n *\n * @type {boolean}\n */\nexports.Defer = function Defer() {\n  var _this = this;\n\n  _classCallCheck(this, Defer);\n\n  this.done = false;\n  this.promise = null;\n\n  this.promise = new Promise(function (resolve, reject) {\n    _this.resolve = function (result) {\n      resolve(result);\n      _this.done = true;\n    };\n\n    _this.reject = function (reason) {\n      reject(reason);\n      _this.done = true;\n    };\n  });\n}\n\n/**\n * Defer's promise object\n *\n * @readonly\n * @type {Promise<any>}\n */\n;\n//# sourceMappingURL=defer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/defer.js\n// module id = Y6aT\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.extensify = extensify;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Make the un-extendable classes great again\n *\n * Notes:\n * - Main concepts:\n *   1. The best way to make another native class is to extend native class\n *      with overriding some methods. However, extending the native sometimes\n *      raises an error: <Failed to construct ${Native}: Please use the 'new' operator,\n *      this DOM object constructor cannot be called as a function.>\n *   2. So we should extend `Native` in some ways that are not constructing\n *      new instance with `Native.call(this)`:\n *      2.1. Look back to JavaScript inheritance, no matter which method we choose to\n *           use, we are almost doing the same thing: let the execution context of\n *           `SuperClass.prototype.method` be the instance of `SubClass`.\n *      1.2. Thus if we bind `Native.prototype.method` with a native instance,\n *           we can be free to invoke all methods in prototype! Then attaching these\n *           methods to the `Extendable.prototype`, the instances of `Extendable` will act\n *           as if they're real native instances!\n *\n * - Implementation of `Extendable`:\n *   1. Create a normal class with `this._native` pointing to a native instance,\n *   2. Iterate through the descriptors of `Native.prototype`:\n *      2.1. If the property is a primitive value, do nothing,\n *      2.2. If the property is an accessor, bind `get` and `set` with `this._native`,\n *      2.3. If the property is a function, bind it with `this._native`,\n *      2.4. Copy the descriptor to `Extendable.prototype`\n *   3. Iterate through the descriptors of `Native`, copy them to `Extendable` as\n *      static methods.\n */\n\n/**\n * Make un-extendable native classes extendable\n *\n * @param {AnyClass} Native Native class\n * @return {ExtendableAnyClass}\n */\nfunction extensify(Native) {\n  var Extendable = function Extendable() {\n    _classCallCheck(this, Extendable);\n\n    this._native = initNative.apply(undefined, arguments);\n\n    checkLack(this._native);\n  }\n  /**\n   * Refer to native object\n   *\n   * @private\n   * @type {AnyClass}\n   */\n  ;\n\n  function initNative() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 0) {\n      return new Native();\n    }\n\n    return new (Function.prototype.bind.apply(Native, [null].concat(args)))();\n  }\n\n  var checked = false;\n  /* istanbul ignore next: safari only */\n  function checkLack(instance) {\n    if (checked) {\n      return;\n    }\n\n    // safari 9- only have methods on `XMLHttpRequest.prototype`\n    // so we need copy properties from an instance\n\n    var _loop = function _loop(prop) {\n      if (!Extendable.prototype.hasOwnProperty(prop)) {\n        Object.defineProperty(Extendable.prototype, prop, {\n          get: function get() {\n            return this._native[prop];\n          },\n          set: function set(value) {\n            this._native[prop] = value;\n            return value;\n          },\n\n          enumerable: true,\n          configurable: true\n        });\n      }\n    };\n\n    for (var prop in instance) {\n      _loop(prop);\n    }\n  }\n\n  // copy all static properties\n  // safari 9- will include a \"prototype\" property on XMLHttpRequest\n  try {\n    Object.keys(Native).forEach(function (prop) {\n      Object.defineProperty(Extendable, prop, Object.getOwnPropertyDescriptor(Native, prop));\n    });\n  } catch (e) {}\n\n  // delegate all unset properties to `_native`\n  (function mapPrototypeMethods() {\n    var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Native.prototype;\n    var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Extendable.prototype;\n\n    if (source.constructor === Object) {\n      // exit recursion\n      return;\n    }\n\n    Object.keys(source).forEach(function (prop) {\n      /* istanbul ignore if */\n      if (target.hasOwnProperty(prop)) {\n        return;\n      }\n\n      var descriptor = Object.getOwnPropertyDescriptor(source, prop);\n\n      if (descriptor.get || descriptor.set) {\n        descriptor.get = function getNative() {\n          return this._native[prop];\n        };\n\n        descriptor.set = function setNative(value) {\n          this._native[prop] = value;\n          return value;\n        };\n      } else if (typeof descriptor.value === 'function') {\n        // method\n        var nativeFn = descriptor.value;\n        descriptor.value = function wrapped() {\n          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return nativeFn.apply(this._native, args);\n        };\n      }\n\n      // enable overriding\n      descriptor.configurable = true;\n\n      Object.defineProperty(target, prop, descriptor);\n    });\n\n    // recursively look-up\n    mapPrototypeMethods(Object.getPrototypeOf(source), target);\n  })();\n\n  return Extendable;\n}\n//# sourceMappingURL=extensify.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/extensify.js\n// module id = Z0+4\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.sendMessageRequest = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Send message and get the response\n *\n * @param  {any}    target  Message target\n * @param  {any}    message Message body\n * @param  {number} timeout Messaging timeout\n * @return {Promise<any>} Resolves with response message\n */\nvar sendMessageRequest = exports.sendMessageRequest = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee(target, message) {\n    var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3 * 1e3;\n\n    var _ref2, port1, port2;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref2 = new MessageChannel(), port1 = _ref2.port1, port2 = _ref2.port2;\n            return _context.abrupt('return', new Promise(function (resolve, reject) {\n              var timer = isFinite(timeout) && setTimeout(function () {\n                reject(new Error('messaging timeout: ' + JSON.stringify(message)));\n              }, timeout);\n\n              port1.onmessage = function (_ref3) {\n                var data = _ref3.data;\n\n                if (timer) {\n                  clearTimeout(timer);\n                }\n\n                // avoid high transient memory usage, see\n                // https://html.spec.whatwg.org/multipage/comms.html#ports-and-garbage-collection\n                port1.close();\n                port2.close();\n\n                /* istanbul ignore else */\n                if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n                  data.request = message;\n                }\n\n                if (data && data.error) {\n                  reject(data);\n                } else {\n                  resolve(data);\n                }\n              };\n\n              if (target === self.window) {\n                // posting message to self => legacy mode\n                // add `origin` param to `window.postMessage(message, targetOrigin, [transfer])`\n                target.postMessage(message, '*', [port2]);\n              } else {\n                target.postMessage(message, [port2]);\n              }\n            }));\n\n          case 2:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function sendMessageRequest(_x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n//# sourceMappingURL=send-message-request.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/send-message-request.js\n// module id = fYBT\n// module chunks = 0","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = jyFz\n// module chunks = 0","\nexport interface ClientProtocol { }\n\nexport interface ServerProtocol { }\n\nexport interface MessageResponse<Req = any, Res = any> {\n  request: Req;\n  data: Res;\n}\n\nexport type ClientRequest<T extends keyof ClientProtocol = keyof ClientProtocol> = ClientProtocol[T]['request'];\nexport type ServerResponse<T extends keyof ClientProtocol = keyof ClientProtocol> = ClientProtocol[T]['response']; // tslint:disable-line\n\nexport type ServerRequest<T extends keyof ServerProtocol = keyof ServerProtocol> = ServerProtocol[T]['request'];\nexport type ClientResponse<T extends keyof ServerProtocol = keyof ServerProtocol> = ServerProtocol[T]['response']; // tslint:disable-line\n\nexport type ClientPostMessageEvent<T extends keyof ClientProtocol = keyof ClientProtocol>\n  = MessageResponse<ClientProtocol[T]['request'], ClientProtocol[T]['response']>;\n\nexport type ServerPostMessageEvent<T extends keyof ServerProtocol = keyof ServerProtocol>\n  = MessageResponse<ServerProtocol[T]['request'], ServerProtocol[T]['response']>;\n\nexport class ServiceWorkerMessageError<T> extends Error {\n  name = 'ServiceWorkerMessageError';\n  remoteError?: ServiceWorkerRemoteError;\n  request: T;\n\n  private constructor() {\n    super();\n  }\n\n  static create<T>(request: T, message: string, remoteError?: any): ServiceWorkerMessageError<T> {\n    // tslint:disable-next-line:no-use-before-declare\n    const err = new ServiceWorkerMessageError<T>();\n    Object.setPrototypeOf(err, ServiceWorkerMessageError.prototype);\n    err.request = request;\n    if (remoteError) {\n      err.remoteError = remoteError;\n      err.message = `${err.name}: ${message}\\n${remoteError.name}: ${remoteError.message}`;\n      if (remoteError.stack) {\n        err.stack = remoteError.stack;\n      }\n    } else {\n      err.message = message;\n    }\n    return err;\n  }\n}\n\nexport interface ServiceWorkerRemoteError {\n  name: string;\n  message: string;\n  stack?: any;\n}\n\nexport function postError(error: Error, withStack: boolean = true): { error: ServiceWorkerRemoteError } {\n  const e = {\n    error: {\n      name: error.name,\n      message: error.message\n    } as ServiceWorkerRemoteError\n  };\n  if (withStack) {\n    e.error.stack = error.stack;\n  }\n  return e;\n}\n\nexport function sendMessageRequest<T extends keyof ServerProtocol>(\n  target: Window | ServiceWorker | Client,\n  message: { action: T, data: ServerRequest<T> },\n  timeout?: number\n): Promise<ServerPostMessageEvent<T>>;\nexport function sendMessageRequest<T extends keyof ClientProtocol>(\n  target: Window | ServiceWorker | Client,\n  message: { action: T, data: ClientRequest<T> },\n  timeout?: number\n): Promise<ClientPostMessageEvent<T>>;\nexport function sendMessageRequest<T extends keyof (ServerProtocol | ClientProtocol)>(\n  target: Window | ServiceWorker | Client,\n  message: { action: T, data: ClientRequest<T> | ServerRequest<T> },\n  timeout = 3 * 1e3\n): Promise<ClientPostMessageEvent<T> | ServerPostMessageEvent<T>> {\n\n  const { port1, port2 } = new MessageChannel();\n\n  return new Promise((resolve, reject) => {\n    const timer = isFinite(timeout) && setTimeout(() => {\n      reject(ServiceWorkerMessageError.create(message.data, `Service worker message timeout.`));\n    }, timeout);\n\n    port1.onmessage = ({ data }) => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      // avoid high transient memory usage, see\n      // https://html.spec.whatwg.org/multipage/comms.html#ports-and-garbage-collection\n      port1.close();\n      port2.close();\n\n      if (data && data.error) {\n        reject(ServiceWorkerMessageError.create(message, `Service worker remote error.`, data.error));\n      } else {\n        resolve({ data, request: <any> message.data });\n      }\n    };\n\n    if (target === self.window) {\n      // posting message to self => legacy mode\n      // add `origin` param to `window.postMessage(message, targetOrigin, [transfer])`\n      target.postMessage(message, '*', [ port2 ]);\n    } else {\n      (target as ServiceWorker).postMessage(message, [ port2 ]);\n    }\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/shared/src/messaging.ts","import { createClient, MockerClient } from 'service-mocker/client';\nimport {\n  postError,\n  sendMessageRequest,\n  ServerProtocol,\n  ServerRequest,\n  ClientResponse,\n  ClientProtocol,\n  ClientRequest,\n  ClientPostMessageEvent\n} from '../../shared/src/messaging';\n\ninterface IncomingServerMessageEvent<T extends keyof ServerProtocol = keyof ServerProtocol> extends MessageEvent {\n  data: {\n    action: T;\n    data: ServerRequest<T>\n  };\n}\n\nexport interface MessageHandler {\n  canHandle(name: keyof ServerProtocol): boolean;\n  handle<T extends keyof ServerProtocol>(action: T, data: ServerRequest<T>): Promise<ClientResponse<T>>;\n}\n\nexport class ServiceMockerClient {\n  ready: Promise<void>;\n\n  private controller: ServiceWorker;\n  private messageEventListener = (event: IncomingServerMessageEvent) => this.onMessage(event);\n\n  private constructor(private mockClient: MockerClient, private messageHandler: MessageHandler) {\n    this.ready = this.mockClient.ready.then( registration => {\n      this.controller = registration.active;\n      this.controller.addEventListener('message', this.messageEventListener );\n    });\n  }\n\n  private onMessage(event: IncomingServerMessageEvent): void {\n    const {\n      data,\n      ports,\n    } = event;\n\n    if (!data || !ports || !ports.length) {\n      return;\n    }\n\n    const port = ports[0];\n\n    if (this.messageHandler.canHandle(data.action)) {\n      this.messageHandler.handle(data.action, data.data)\n        .then(response => port.postMessage(response))\n        .catch(err => port.postMessage(postError(err)));\n    }\n  }\n\n  sendAction<T extends keyof ClientProtocol = keyof ClientProtocol>(\n    action: T,\n    data: ClientRequest<T>,\n    timeout?: number): Promise<ClientPostMessageEvent<T>> {\n    const message = { action, data };\n    return sendMessageRequest<T>(this.controller, message, timeout);\n  }\n\n  dispose(): void {\n    this.controller.removeEventListener('message', this.messageEventListener);\n  }\n\n  static create(messageHandler: MessageHandler, scriptURL: string = './sw.js'): ServiceMockerClient {\n    const mockClient = createClient(scriptURL);\n    const client = new ServiceMockerClient(mockClient, messageHandler);\n    return client;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/client.ts","import { ClientProtocol, ClientRequest, ClientPostMessageEvent } from '../../shared/src/index';\nimport { ServiceMockerClient } from './client';\n\nexport abstract class ClientBase {\n  get ready(): Promise<void> {\n    return this._smClient.ready;\n  }\n\n  private _smClient: ServiceMockerClient;\n\n  /**\n   * A lifecycle hook fired when the client inits\n   */\n  init?(): void;\n\n  dispose(): void {\n    this._smClient.dispose();\n  }\n\n  send<T extends keyof ClientProtocol>(action: T,\n                                       data: ClientRequest<T>,\n                                       timeout?: number): Promise<ClientPostMessageEvent<T>> {\n    return this._smClient.sendAction(action, data, timeout);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/client-base.ts","import { BaseMetadata, MetaClass, DecoratorInfo } from '@tdm/core/tdm';\nimport { ServerProtocol } from '../../../shared/src/index';\n\n@MetaClass<string, OnMessageMetadata>({\n  allowOn: ['member'],\n  extend: 'mergeMap'\n})\nexport class OnMessageMetadata extends BaseMetadata {\n  constructor(public eventName: keyof ServerProtocol, info: DecoratorInfo) {\n    super(info);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/metadata/on-message.ts","import { targetStore, DecoratorInfo, MapExt, ModelMetadata, MetaClass, BaseMetadata, Constructor } from '@tdm/core/tdm';\n\nimport { OnMessageMetadata } from './on-message';\n\nexport interface ClientMetadataArgs {\n  scriptURL?: string;\n}\n\n@MetaClass<ClientMetadataArgs, ClientMetadata>({\n  single: true,\n  inherit: ModelMetadata,\n  allowOn: [ 'class' ]\n})\nexport class ClientMetadata extends BaseMetadata {\n  scriptURL: string;\n  messageHandlers = new Map<string, string>();\n\n  constructor(metaArgs: ClientMetadataArgs | undefined, info: DecoratorInfo, target: Constructor<any>) {\n    super(info);\n    if (metaArgs && metaArgs.scriptURL) {\n      this.scriptURL = metaArgs.scriptURL;\n    }\n\n    const clientMessage = targetStore.getMetaFor(target, OnMessageMetadata);\n    if (clientMessage) {\n      for (let [k, v] of MapExt.asKeyValArray(clientMessage)) {\n        this.messageHandlers.set(v.eventName, <any> k);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/metadata/client.ts","import { stringify, isFunction, MetaClass, Constructor, targetStore, getBaseClass } from '@tdm/core/tdm';\n\nimport { ClientResponse, ServerProtocol, ServerRequest } from '../../../shared/src/index';\nimport { ServiceMockerClient, MessageHandler } from '../client';\nimport { ClientBase } from '../client-base';\nimport { ClientMetadata, ClientMetadataArgs } from '../metadata';\n\nconst client = MetaClass.decorator(ClientMetadata, true, 'class');\n\nclass ContextMessageHandler implements MessageHandler  {\n\n  constructor(private instance: any, private handlersMap: Map<string, string>) { }\n\n  canHandle(name: keyof ServerProtocol): boolean {\n    return this.handlersMap.has(name);\n  }\n\n  handle<T extends keyof ServerProtocol>(action: T, data: ServerRequest<T>): Promise<ClientResponse<T>> {\n    const methodName = this.handlersMap.get(action);\n    return this.instance[methodName](data);\n  }\n}\n\nfunction isExtendingClientBase(target: Constructor<any>): boolean {\n  while (target) {\n    if (target === ClientBase) {\n      return true;\n    }\n    target = <any> getBaseClass(target);\n  }\n  return false;\n}\n\nexport function Client(metaArgs?: ClientMetadataArgs): <T extends Constructor<ClientBase>>(target: T) => T | void {\n  return <T extends Constructor<ClientBase>> (target: T) => {\n\n    if (!isExtendingClientBase(target)) {\n      throw new Error(`Class ${stringify(target)} decorated with \"@Client()\" must extend \"ClientBase\"`);\n    }\n\n    class WrappedClientMockerServer extends (target as T) { // tslint:disable-line:max-classes-per-file\n      constructor(...args: any[]) {\n        super(...args);\n        const clientMeta = targetStore.getMetaFor(target, ClientMetadata, true);\n        const serviceMockerClient = ServiceMockerClient\n          .create(new ContextMessageHandler(this, clientMeta.messageHandlers), clientMeta.scriptURL);\n\n        Object.defineProperty(this, '_smClient', { value: serviceMockerClient });\n        if (isFunction(this.init)) {\n          this.init();\n        }\n      }\n    }\n    targetStore.registerTarget(WrappedClientMockerServer);\n    targetStore.extend(target, WrappedClientMockerServer);\n    target = <any> client(metaArgs)(WrappedClientMockerServer) || WrappedClientMockerServer;\n    return target;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/decorator/client.ts","import { MetaClass } from '@tdm/core/tdm';\nimport { ServerProtocol, ClientResponse, ServerRequest } from '../../../shared/src/index';\nimport { OnMessageMetadata } from '../metadata';\n\nconst onMessage = MetaClass.decorator(OnMessageMetadata, 'method');\n\nexport type OnMessageHandler<T extends keyof ServerProtocol>\n  = (data: ServerRequest<T>) => Promise<ClientResponse<T>>;\n\nexport type OnMessageHandlerDecorator = <T extends keyof ServerProtocol>(\n  target: Object,\n  propertyKey: T,\n  descriptor: TypedPropertyDescriptor<OnMessageHandler<T>>\n) => any;\n\nexport type OnMessageHandlerDecoratorLoose = <T extends keyof ServerProtocol>(\n  target: Object,\n  propertyKey: any,\n  descriptor: TypedPropertyDescriptor<OnMessageHandler<T>>\n) => any;\n\n/**\n * Declares a handler for an incoming message from the client.\n */\nexport function OnMessage(): OnMessageHandlerDecorator;\nexport function OnMessage<T extends keyof ServerProtocol>(metaArgs: T): OnMessageHandlerDecoratorLoose;\nexport function OnMessage<T extends keyof ServerProtocol>(metaArgs?: T): any {\n  if (!metaArgs) {\n    return (...args: any[]) => (<any> onMessage)(args[1])(args[0], args[1], args[2]);\n  } else {\n    return onMessage(metaArgs);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/decorator/on-message.ts","import { Client, ClientBase, OnMessage } from '@tdm/service-mocker/client';\nimport { ClientPostMessageEvent, ServerRequest, ClientResponse } from '@tdm/service-mocker/shared';\n\n@Client({\n  scriptURL: './sw.js'\n})\nexport class SWClient extends ClientBase {\n  @OnMessage()\n  installed(data: ServerRequest<'installed'>): Promise<ClientResponse<'installed'>> {\n    return <any> Promise.resolve(12);\n  }\n\n  restoreDB(): Promise<ClientPostMessageEvent<'restoreDb'>> {\n    return System.import(/* webpackChunkName: \"northwind\" */ './json-db/index')\n      .then( module => this.send('restoreDb', module.DB, 1000 * 60) );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/client/client.ts","'use strict';\n\nexports.__esModule = true;\nvar ACTION = {\n  PING: 'ping',\n  PONG: 'pong',\n  ESTABLISHED: 'established',\n  REQUEST_CLAIM: 'request_claim'\n};\n\nObject.keys(ACTION).forEach(function (prop) {\n  ACTION[prop] = '@mocker/' + ACTION[prop];\n});\n\nexports.ACTION = ACTION;\n//# sourceMappingURL=action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/constants/action.js\n// module id = sgJX\n// module chunks = 0"],"sourceRoot":"webpack:///"}