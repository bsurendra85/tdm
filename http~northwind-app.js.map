{"version":3,"sources":["webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/client/src/index.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/client/src/lib/client-base.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/client/src/lib/client.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/client/src/lib/decorator/client.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/client/src/lib/decorator/index.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/client/src/lib/decorator/on-message.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/client/src/lib/index.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/client/src/lib/metadata/client.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/client/src/lib/metadata/index.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/client/src/lib/metadata/on-message.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/shared/src/index.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/shared/src/lib/index.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/libs/service-mocker/shared/src/lib/messaging.ts","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/babel-runtime/regenerator/index.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/regenerator-runtime/runtime-module.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/regenerator-runtime/runtime.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/client/index.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/client/legacy/client.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/client/legacy/create-event.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/client/legacy/dispatch-fetch-event.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/client/legacy/patch-fetch.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/client/legacy/patch-xhr.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/client/modern/client.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/client/modern/connect.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/client/modern/get-newest-reg.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/client/modern/register.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/constants/action.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/constants/index.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/utils/debug.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/utils/defer.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/utils/event-wait-until.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/utils/extensify.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/utils/index.js","webpack:////Users/shlomiassaf/Desktop/Code/shlomi/__LIB__/tdm/node_modules/service-mocker/utils/send-message-request.js","webpack:///./src/modules/@shared/client/client.ts","webpack:///./src/modules/@shared/client/index.ts","webpack:///./src/modules/@shared/client/models/category.ts","webpack:///./src/modules/@shared/client/models/customer.ts","webpack:///./src/modules/@shared/client/models/employee-territory.ts","webpack:///./src/modules/@shared/client/models/employee.ts","webpack:///./src/modules/@shared/client/models/index.ts","webpack:///./src/modules/@shared/client/models/order-detail.ts","webpack:///./src/modules/@shared/client/models/order.ts","webpack:///./src/modules/@shared/client/models/product.ts","webpack:///./src/modules/@shared/client/models/region.ts","webpack:///./src/modules/@shared/client/models/shipper.ts","webpack:///./src/modules/@shared/client/models/supplier.ts","webpack:///./src/modules/@shared/client/models/territory.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;SAES;AACmB;;;;;;;;;;;;;;ACA5B;AAAA;IAAA;IAqBA,CAAC;IApBC,sBAAI,6BAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAC9B,CAAC;;;OAAA;IASD,4BAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,yBAAI,GAAJ,UAAqC,MAAS,EACT,IAAsB,EACtB,OAAgB;QACnD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IACH,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACxBkE;AAU/B;AAcpC;IAME,6BAA4B,UAAwB,EAAU,cAA8B;QAA5F,iBAKC;QAL2B,eAAU,GAAV,UAAU,CAAc;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAFpF,yBAAoB,GAAG,UAAC,KAAiC,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC;QAG1F,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAE,sBAAY;YACnD,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;YACtC,KAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAI,CAAC,oBAAoB,CAAE,CAAC;QAC1E,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,uCAAS,GAAjB,UAAkB,KAAiC;QAE/C,qBAAI,EACJ,mBAAK,CACG;QAEV,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC;QACT,CAAC;QAED,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAEtB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;iBAC/C,IAAI,CAAC,kBAAQ,IAAI,WAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAA1B,CAA0B,CAAC;iBAC5C,KAAK,CAAC,aAAG,IAAI,WAAI,CAAC,WAAW,CAAC,4EAAS,CAAC,GAAG,CAAC,CAAC,EAAhC,CAAgC,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;IAED,wCAAU,GAAV,UACE,MAAS,EACT,IAAsB,EACtB,OAAgB;QAChB,IAAM,OAAO,GAAG,EAAE,MAAM,UAAE,IAAI,QAAE,CAAC;QACjC,MAAM,CAAC,qFAAkB,CAAI,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAClE,CAAC;IAED,qCAAO,GAAP;QACE,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC5E,CAAC;IAEM,0BAAM,GAAb,UAAc,cAA8B,EAAE,SAA6B;QAA7B,iDAA6B;QACzE,IAAM,UAAU,GAAG,0EAAY,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAM,MAAM,GAAG,IAAI,mBAAmB,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QACnE,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IACH,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEwG;AAGzC;AACpB;AACqB;AAEjE,IAAM,MAAM,GAAG,uDAAS,CAAC,SAAS,CAAC,wDAAc,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AAElE;IAEE,+BAAoB,QAAa,EAAU,WAAgC;QAAvD,aAAQ,GAAR,QAAQ,CAAK;QAAU,gBAAW,GAAX,WAAW,CAAqB;IAAI,CAAC;IAEhF,yCAAS,GAAT,UAAU,IAA0B;QAClC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,sCAAM,GAAN,UAAuC,MAAS,EAAE,IAAsB;QACtE,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IACH,4BAAC;AAAD,CAAC;AAED,+BAA+B,MAAwB;IACrD,OAAO,MAAM,EAAE,CAAC;QACd,EAAE,CAAC,CAAC,MAAM,KAAK,uDAAU,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,MAAM,GAAS,kEAAY,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IACD,MAAM,CAAC,KAAK,CAAC;AACf,CAAC;AAEK,gBAAiB,QAA6B;IAClD,MAAM,CAAC,UAAqC,MAAS;QAEnD,EAAE,CAAC,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,IAAI,KAAK,CAAC,WAAS,+DAAS,CAAC,MAAM,CAAC,6DAAsD,CAAC,CAAC;QACpG,CAAC;QAED;YAAwC,6CAAa;YACnD;gBAAY,cAAc;qBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;oBAAd,yBAAc;;gBAA1B,+BACW,IAAI,UASd;gBARC,IAAM,UAAU,GAAG,yDAAW,CAAC,UAAU,CAAC,MAAM,EAAE,wDAAc,EAAE,IAAI,CAAC,CAAC;gBACxE,IAAM,mBAAmB,GAAG,2DAAmB;qBAC5C,MAAM,CAAC,IAAI,qBAAqB,CAAC,KAAI,EAAE,UAAU,CAAC,eAAe,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC;gBAE7F,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC,CAAC;gBACzE,EAAE,CAAC,CAAC,gEAAU,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,KAAI,CAAC,IAAI,EAAE,CAAC;gBACd,CAAC;;YACH,CAAC;YACH,gCAAC;QAAD,CAAC,CAZwC,MAAY,GAYpD;QACD,yDAAW,CAAC,cAAc,CAAC,yBAAyB,CAAC,CAAC;QACtD,yDAAW,CAAC,MAAM,CAAC,MAAM,EAAE,yBAAyB,CAAC,CAAC;QACtD,MAAM,GAAS,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,CAAC,IAAI,yBAAyB,CAAC;QACxF,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;;;;;;;;AC1DiC;AACoD;;;;;;;;;;;;;;;;;ACD5C;AAEM;AAEhD,IAAM,SAAS,GAAG,uDAAS,CAAC,SAAS,CAAC,2DAAiB,EAAE,QAAQ,CAAC,CAAC;AAsB7D,mBAAoD,QAAY;IACpE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACd,MAAM,CAAC;YAAC,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YAAK,OAAO,SAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAArD,CAAqD,CAAC;IACnF,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;AACH,CAAC;;;;;;;;;;;;;;;;;;;;AChCD;AAAA;AAAA,+DAA+D;AAGnC;AACe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ6E;AAEvE;AAWjD;IAAoC,kCAAY;IAI9C,wBAAY,QAAwC,EAAE,IAAmB,EAAE,MAAwB;QAAnG,YACE,kBAAM,IAAI,CAAC,SAWZ;QAdD,qBAAe,GAAG,IAAI,GAAG,EAAkB,CAAC;QAI1C,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YACnC,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACtC,CAAC;QAED,IAAM,aAAa,GAAG,yDAAW,CAAC,UAAU,CAAC,MAAM,EAAE,6DAAiB,CAAC,CAAC;QACxE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,CAAe,UAAmC,EAAnC,yDAAM,CAAC,aAAa,CAAC,aAAa,CAAC,EAAnC,cAAmC,EAAnC,IAAmC;gBAA7C,eAAM,EAAL,SAAC,EAAE,SAAC;gBACZ,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAQ,CAAC,CAAC,CAAC;aAChD;QACH,CAAC;;IACH,CAAC;IAhBU,cAAc;QAL1B,+DAAS,CAAqC;YAC7C,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,2DAAa;YACtB,OAAO,EAAE,CAAE,OAAO,CAAE;SACrB,CAAC;;OACW,cAAc,CAiB1B;IAAD,qBAAC;CAAA,CAjBmC,0DAAY,GAiB/C;AAjB0B;;;;;;;;;;;;;;;;;;;;ACbmC;AACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDsB;AAOvE;IAAuC,qCAAY;IACjD,2BAAmB,SAA+B,EAAE,IAAmB;QAAvE,YACE,kBAAM,IAAI,CAAC,SACZ;QAFkB,eAAS,GAAT,SAAS,CAAsB;;IAElD,CAAC;IAHU,iBAAiB;QAJ7B,+DAAS,CAA4B;YACpC,OAAO,EAAE,CAAC,QAAQ,CAAC;YACnB,MAAM,EAAE,UAAU;SACnB,CAAC;;OACW,iBAAiB,CAI7B;IAAD,wBAAC;CAAA,CAJsC,0DAAY,GAIlD;AAJ6B;;;;;;;;;;;;;;;ACP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;SAES;AACmB;;;;;;;;;;;;;;;ACH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAyC;AACb;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqB5B;IAAkD,6CAAK;IAKrD;QAAA,YACE,iBAAO,SACR;QAND,UAAI,GAAG,2BAA2B,CAAC;;IAMnC,CAAC;IAEM,gCAAM,GAAb,UAAiB,OAAU,EAAE,OAAe,EAAE,WAAiB;QAC7D,iDAAiD;QACjD,IAAM,GAAG,GAAG,IAAI,yBAAyB,EAAK,CAAC;QAC/C,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,yBAAyB,CAAC,SAAS,CAAC,CAAC;QAChE,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;QACtB,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC;YAC9B,GAAG,CAAC,OAAO,GAAM,GAAG,CAAC,IAAI,UAAK,OAAO,UAAK,WAAW,CAAC,IAAI,UAAK,WAAW,CAAC,OAAS,CAAC;YACrF,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;gBACtB,GAAG,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;YAChC,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;QACxB,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IACH,gCAAC;AAAD,CAAC,CAzBiD,KAAK,GAyBtD;;AAQK,mBAAoB,KAAY,EAAE,SAAyB;IAAzB,4CAAyB;IAC/D,IAAM,CAAC,GAAG;QACR,KAAK,EAAE;YACL,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,OAAO,EAAE,KAAK,CAAC,OAAO;SACK;KAC9B,CAAC;IACF,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC9B,CAAC;IACD,MAAM,CAAC,CAAC,CAAC;AACX,CAAC;AAYK,4BACJ,MAAuC,EACvC,OAAiE,EACjE,OAAiB;IAAjB,oCAAU,CAAC,GAAG,GAAG;IAGX,6BAAuC,EAArC,gBAAK,EAAE,gBAAK,CAA0B;IAE9C,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACjC,IAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC;YAC5C,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,iCAAiC,CAAC,CAAC,CAAC;QAC5F,CAAC,EAAE,OAAO,CAAC,CAAC;QAEZ,KAAK,CAAC,SAAS,GAAG,UAAC,EAAQ;gBAAN,cAAI;YACvB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,YAAY,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC;YAED,yCAAyC;YACzC,iFAAiF;YACjF,KAAK,CAAC,KAAK,EAAE,CAAC;YACd,KAAK,CAAC,KAAK,EAAE,CAAC;YAEd,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,OAAO,EAAE,8BAA8B,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChG,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,OAAO,CAAC,EAAE,IAAI,QAAE,OAAO,EAAQ,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;YACjD,CAAC;QACH,CAAC,CAAC;QAEF,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3B,yCAAyC;YACzC,gFAAgF;YAChF,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,EAAE,CAAE,KAAK,CAAE,CAAC,CAAC;QAC9C,CAAC;QAAC,IAAI,CAAC,CAAC;YACL,MAAwB,CAAC,WAAW,CAAC,OAAO,EAAE,CAAE,KAAK,CAAE,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;;;;;;;;;;;;ACpHD;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,cAAc;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,eAAe,cAAc;AAC7B;;;;;;;;;;;;;ACttBA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iC;;;;;;;;;;;;ACpDA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,gCAAgC,qBAAqB,qCAAqC,gDAAgD,0BAA0B,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,sDAAsD,qBAAqB,EAAE,kBAAkB,oBAAoB,EAAE,EAAE,EAAE,EAAE,qBAAqB,EAAE,EAAE,GAAG;;AAExc,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,CAAC;AACD,kC;;;;;;;;;;;;AC7LA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA,wC;;;;;;;;;;;;ACxBA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,gD;;;;;;;;;;;;ACtDA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,uC;;;;;;;;;;;;ACjFA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,gCAAgC,qBAAqB,qCAAqC,gDAAgD,0BAA0B,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,sDAAsD,qBAAqB,EAAE,kBAAkB,oBAAoB,EAAE,EAAE,EAAE,EAAE,qBAAqB,EAAE,EAAE,GAAG;;AAExc,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,iDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,0CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH,EAAE;AAC9e;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,mEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0FAA0F,eAAe;AACzG;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,IAAI;AAClB,cAAc;AACd;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,IAAI;AACjB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA,qC;;;;;;;;;;;;AClZA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,gCAAgC,qBAAqB,qCAAqC,gDAAgD,0BAA0B,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,sDAAsD,qBAAqB,EAAE,kBAAkB,oBAAoB,EAAE,EAAE,EAAE,EAAE,qBAAqB,EAAE,EAAE,GAAG;;AAExc,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA,CAAC;AACD,kC;;;;;;;;;;;;AC/QA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,YAAY,0BAA0B;AACtC,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,gCAAgC,qBAAqB,qCAAqC,gDAAgD,0BAA0B,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,sDAAsD,qBAAqB,EAAE,kBAAkB,oBAAoB,EAAE,EAAE,EAAE,EAAE,qBAAqB,EAAE,EAAE,GAAG;AACxc,mC;;;;;;;;;;;;AClJA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;AAED;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,gCAAgC,qBAAqB,qCAAqC,gDAAgD,0BAA0B,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,sDAAsD,qBAAqB,EAAE,kBAAkB,oBAAoB,EAAE,EAAE,EAAE,EAAE,qBAAqB,EAAE,EAAE,GAAG;;AAExc,6CAA6C;AAC7C,0C;;;;;;;;;;;;AC3FA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,6BAA6B;AACzC,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;AAED;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,gCAAgC,qBAAqB,qCAAqC,gDAAgD,0BAA0B,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,sDAAsD,qBAAqB,EAAE,kBAAkB,oBAAoB,EAAE,EAAE,EAAE,EAAE,qBAAqB,EAAE,EAAE,GAAG;AACxc,oC;;;;;;;;;;;;ACjDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA,kC;;;;;;;;;;;;ACfA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,iC;;;;;;;;;;;;ACfA;;AAEA;;AAEA,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc;AACd;;;AAGA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;AACD,iC;;;;;;;;;;;;ACtHA;;AAEA;;AAEA,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iC;;;;;;;;;;;;ACxCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;;AAEA;AACA;AACA;AACA,YAAY,IAAI;AAChB,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,4C;;;;;;;;;;;;AC9BA;;AAEA;AACA;;AAEA,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,mEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,4EAA4E,eAAe;AAC3F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;;AAEH;AACA;AACA,qC;;;;;;;;;;;;AClKA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,iC;;;;;;;;;;;;AC/DA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,oGAAoG,mBAAmB,EAAE,m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","file":"http~northwind-app.js","sourcesContent":["/*\n       * Public API Surface of mylib\n       */\nexport * from './lib/index';\n","import { ClientProtocol, ClientRequest, ClientPostMessageEvent } from '@tdm/service-mocker/shared';\nimport { ServiceMockerClient } from './client';\n\nexport abstract class ClientBase {\n  get ready(): Promise<void> {\n    return this._smClient.ready;\n  }\n\n  private _smClient: ServiceMockerClient;\n\n  /**\n   * A lifecycle hook fired when the client inits\n   */\n  init?(): void;\n\n  dispose(): void {\n    this._smClient.dispose();\n  }\n\n  send<T extends keyof ClientProtocol>(action: T,\n                                       data: ClientRequest<T>,\n                                       timeout?: number): Promise<ClientPostMessageEvent<T>> {\n    return this._smClient.sendAction(action, data, timeout);\n  }\n}\n","import { createClient, MockerClient } from 'service-mocker/client';\nimport {\n  postError,\n  sendMessageRequest,\n  ServerProtocol,\n  ServerRequest,\n  ClientResponse,\n  ClientProtocol,\n  ClientRequest,\n  ClientPostMessageEvent\n} from '@tdm/service-mocker/shared';\n\ninterface IncomingServerMessageEvent<T extends keyof ServerProtocol = keyof ServerProtocol> extends MessageEvent {\n  data: {\n    action: T;\n    data: ServerRequest<T>\n  };\n}\n\nexport interface MessageHandler {\n  canHandle(name: keyof ServerProtocol): boolean;\n  handle<T extends keyof ServerProtocol>(action: T, data: ServerRequest<T>): Promise<ClientResponse<T>>;\n}\n\nexport class ServiceMockerClient {\n  ready: Promise<void>;\n\n  private controller: ServiceWorker;\n  private messageEventListener = (event: IncomingServerMessageEvent) => this.onMessage(event);\n\n  private constructor(private mockClient: MockerClient, private messageHandler: MessageHandler) {\n    this.ready = this.mockClient.ready.then( registration => {\n      this.controller = registration.active;\n      this.controller.addEventListener('message', this.messageEventListener );\n    });\n  }\n\n  private onMessage(event: IncomingServerMessageEvent): void {\n    const {\n      data,\n      ports,\n    } = event;\n\n    if (!data || !ports || !ports.length) {\n      return;\n    }\n\n    const port = ports[0];\n\n    if (this.messageHandler.canHandle(data.action)) {\n      this.messageHandler.handle(data.action, data.data)\n        .then(response => port.postMessage(response))\n        .catch(err => port.postMessage(postError(err)));\n    }\n  }\n\n  sendAction<T extends keyof ClientProtocol = keyof ClientProtocol>(\n    action: T,\n    data: ClientRequest<T>,\n    timeout?: number): Promise<ClientPostMessageEvent<T>> {\n    const message = { action, data };\n    return sendMessageRequest<T>(this.controller, message, timeout);\n  }\n\n  dispose(): void {\n    this.controller.removeEventListener('message', this.messageEventListener);\n  }\n\n  static create(messageHandler: MessageHandler, scriptURL: string = './sw.js'): ServiceMockerClient {\n    const mockClient = createClient(scriptURL);\n    const client = new ServiceMockerClient(mockClient, messageHandler);\n    return client;\n  }\n}\n","import { stringify, isFunction, MetaClass, Constructor, targetStore, getBaseClass } from '@tdm/core/tdm';\n\nimport { ClientResponse, ServerProtocol, ServerRequest } from '@tdm/service-mocker/shared';\nimport { ServiceMockerClient, MessageHandler } from '../client';\nimport { ClientBase } from '../client-base';\nimport { ClientMetadata, ClientMetadataArgs } from '../metadata';\n\nconst client = MetaClass.decorator(ClientMetadata, true, 'class');\n\nclass ContextMessageHandler implements MessageHandler  {\n\n  constructor(private instance: any, private handlersMap: Map<string, string>) { }\n\n  canHandle(name: keyof ServerProtocol): boolean {\n    return this.handlersMap.has(name);\n  }\n\n  handle<T extends keyof ServerProtocol>(action: T, data: ServerRequest<T>): Promise<ClientResponse<T>> {\n    const methodName = this.handlersMap.get(action);\n    return this.instance[methodName](data);\n  }\n}\n\nfunction isExtendingClientBase(target: Constructor<any>): boolean {\n  while (target) {\n    if (target === ClientBase) {\n      return true;\n    }\n    target = <any> getBaseClass(target);\n  }\n  return false;\n}\n\nexport function Client(metaArgs?: ClientMetadataArgs): <T extends Constructor<ClientBase>>(target: T) => T | void {\n  return <T extends Constructor<ClientBase>> (target: T) => {\n\n    if (!isExtendingClientBase(target)) {\n      throw new Error(`Class ${stringify(target)} decorated with \"@Client()\" must extend \"ClientBase\"`);\n    }\n\n    class WrappedClientMockerServer extends (target as T) { // tslint:disable-line:max-classes-per-file\n      constructor(...args: any[]) {\n        super(...args);\n        const clientMeta = targetStore.getMetaFor(target, ClientMetadata, true);\n        const serviceMockerClient = ServiceMockerClient\n          .create(new ContextMessageHandler(this, clientMeta.messageHandlers), clientMeta.scriptURL);\n\n        Object.defineProperty(this, '_smClient', { value: serviceMockerClient });\n        if (isFunction(this.init)) {\n          this.init();\n        }\n      }\n    }\n    targetStore.registerTarget(WrappedClientMockerServer);\n    targetStore.extend(target, WrappedClientMockerServer);\n    target = <any> client(metaArgs)(WrappedClientMockerServer) || WrappedClientMockerServer;\n    return target;\n  };\n}\n","export { Client } from './client';\nexport { OnMessage, OnMessageHandler, OnMessageHandlerDecorator } from './on-message';\n","import { MetaClass } from '@tdm/core/tdm';\nimport { ServerProtocol, ClientResponse, ServerRequest } from '@tdm/service-mocker/shared';\nimport { OnMessageMetadata } from '../metadata';\n\nconst onMessage = MetaClass.decorator(OnMessageMetadata, 'method');\n\nexport type OnMessageHandler<T extends keyof ServerProtocol>\n  = (data: ServerRequest<T>) => Promise<ClientResponse<T>>;\n\nexport type OnMessageHandlerDecorator = <T extends keyof ServerProtocol>(\n  target: Object,\n  propertyKey: T,\n  descriptor: TypedPropertyDescriptor<OnMessageHandler<T>>\n) => any;\n\nexport type OnMessageHandlerDecoratorLoose = <T extends keyof ServerProtocol>(\n  target: Object,\n  propertyKey: any,\n  descriptor: TypedPropertyDescriptor<OnMessageHandler<T>>\n) => any;\n\n/**\n * Declares a handler for an incoming message from the client.\n */\nexport function OnMessage(): OnMessageHandlerDecorator;\nexport function OnMessage<T extends keyof ServerProtocol>(metaArgs: T): OnMessageHandlerDecoratorLoose;\nexport function OnMessage<T extends keyof ServerProtocol>(metaArgs?: T): any {\n  if (!metaArgs) {\n    return (...args: any[]) => (<any> onMessage)(args[1])(args[0], args[1], args[2]);\n  } else {\n    return onMessage(metaArgs);\n  }\n}\n","/// <reference path=\"../../../shared/src/lib/service-worker\" />\n\nexport { ClientMetadataArgs } from './metadata';\nexport * from './decorator';\nexport { ClientBase } from './client-base';\n","import { targetStore, DecoratorInfo, MapExt, ModelMetadata, MetaClass, BaseMetadata, Constructor } from '@tdm/core/tdm';\n\nimport { OnMessageMetadata } from './on-message';\n\nexport interface ClientMetadataArgs {\n  scriptURL?: string;\n}\n\n@MetaClass<ClientMetadataArgs, ClientMetadata>({\n  single: true,\n  inherit: ModelMetadata,\n  allowOn: [ 'class' ]\n})\nexport class ClientMetadata extends BaseMetadata {\n  scriptURL: string;\n  messageHandlers = new Map<string, string>();\n\n  constructor(metaArgs: ClientMetadataArgs | undefined, info: DecoratorInfo, target: Constructor<any>) {\n    super(info);\n    if (metaArgs && metaArgs.scriptURL) {\n      this.scriptURL = metaArgs.scriptURL;\n    }\n\n    const clientMessage = targetStore.getMetaFor(target, OnMessageMetadata);\n    if (clientMessage) {\n      for (let [k, v] of MapExt.asKeyValArray(clientMessage)) {\n        this.messageHandlers.set(v.eventName, <any> k);\n      }\n    }\n  }\n}\n","export { ClientMetadata, ClientMetadataArgs } from './client';\nexport { OnMessageMetadata } from './on-message';\n","import { BaseMetadata, MetaClass, DecoratorInfo } from '@tdm/core/tdm';\nimport { ServerProtocol } from '@tdm/service-mocker/shared';\n\n@MetaClass<string, OnMessageMetadata>({\n  allowOn: ['member'],\n  extend: 'mergeMap'\n})\nexport class OnMessageMetadata extends BaseMetadata {\n  constructor(public eventName: keyof ServerProtocol, info: DecoratorInfo) {\n    super(info);\n  }\n}\n","/*\n       * Public API Surface of mylib\n       */\nexport * from './lib/index';\n","/// <reference path=\"./service-worker\" />\nexport * from './messaging';\n","\nexport interface ClientProtocol { }\n\nexport interface ServerProtocol { }\n\nexport interface MessageResponse<Req = any, Res = any> {\n  request: Req;\n  data: Res;\n}\n\nexport type ClientRequest<T extends keyof ClientProtocol = keyof ClientProtocol> = ClientProtocol[T]['request'];\nexport type ServerResponse<T extends keyof ClientProtocol = keyof ClientProtocol> = ClientProtocol[T]['response']; // tslint:disable-line\n\nexport type ServerRequest<T extends keyof ServerProtocol = keyof ServerProtocol> = ServerProtocol[T]['request'];\nexport type ClientResponse<T extends keyof ServerProtocol = keyof ServerProtocol> = ServerProtocol[T]['response']; // tslint:disable-line\n\nexport type ClientPostMessageEvent<T extends keyof ClientProtocol = keyof ClientProtocol>\n  = MessageResponse<ClientProtocol[T]['request'], ClientProtocol[T]['response']>;\n\nexport type ServerPostMessageEvent<T extends keyof ServerProtocol = keyof ServerProtocol>\n  = MessageResponse<ServerProtocol[T]['request'], ServerProtocol[T]['response']>;\n\nexport class ServiceWorkerMessageError<T> extends Error {\n  name = 'ServiceWorkerMessageError';\n  remoteError?: ServiceWorkerRemoteError;\n  request: T;\n\n  private constructor() {\n    super();\n  }\n\n  static create<T>(request: T, message: string, remoteError?: any): ServiceWorkerMessageError<T> {\n    // tslint:disable-next-line:no-use-before-declare\n    const err = new ServiceWorkerMessageError<T>();\n    Object.setPrototypeOf(err, ServiceWorkerMessageError.prototype);\n    err.request = request;\n    if (remoteError) {\n      err.remoteError = remoteError;\n      err.message = `${err.name}: ${message}\\n${remoteError.name}: ${remoteError.message}`;\n      if (remoteError.stack) {\n        err.stack = remoteError.stack;\n      }\n    } else {\n      err.message = message;\n    }\n    return err;\n  }\n}\n\nexport interface ServiceWorkerRemoteError {\n  name: string;\n  message: string;\n  stack?: any;\n}\n\nexport function postError(error: Error, withStack: boolean = true): { error: ServiceWorkerRemoteError } {\n  const e = {\n    error: {\n      name: error.name,\n      message: error.message\n    } as ServiceWorkerRemoteError\n  };\n  if (withStack) {\n    e.error.stack = error.stack;\n  }\n  return e;\n}\n\nexport function sendMessageRequest<T extends keyof ServerProtocol>(\n  target: Window | ServiceWorker | Client,\n  message: { action: T, data: ServerRequest<T> },\n  timeout?: number\n): Promise<ServerPostMessageEvent<T>>;\nexport function sendMessageRequest<T extends keyof ClientProtocol>(\n  target: Window | ServiceWorker | Client,\n  message: { action: T, data: ClientRequest<T> },\n  timeout?: number\n): Promise<ClientPostMessageEvent<T>>;\nexport function sendMessageRequest<T extends keyof (ServerProtocol | ClientProtocol)>(\n  target: Window | ServiceWorker | Client,\n  message: { action: T, data: ClientRequest<T> | ServerRequest<T> },\n  timeout = 3 * 1e3\n): Promise<ClientPostMessageEvent<T> | ServerPostMessageEvent<T>> {\n\n  const { port1, port2 } = new MessageChannel();\n\n  return new Promise((resolve, reject) => {\n    const timer = isFinite(timeout) && setTimeout(() => {\n      reject(ServiceWorkerMessageError.create(message.data, `Service worker message timeout.`));\n    }, timeout);\n\n    port1.onmessage = ({ data }) => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      // avoid high transient memory usage, see\n      // https://html.spec.whatwg.org/multipage/comms.html#ports-and-garbage-collection\n      port1.close();\n      port2.close();\n\n      if (data && data.error) {\n        reject(ServiceWorkerMessageError.create(message, `Service worker remote error.`, data.error));\n      } else {\n        resolve({ data, request: <any> message.data });\n      }\n    };\n\n    if (target === self.window) {\n      // posting message to self => legacy mode\n      // add `origin` param to `window.postMessage(message, targetOrigin, [transfer])`\n      target.postMessage(message, '*', [ port2 ]);\n    } else {\n      (target as ServiceWorker).postMessage(message, [ port2 ]);\n    }\n  });\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","'use strict';\n\nexports.__esModule = true;\nexports.createClient = createClient;\n\nvar _client = require('./modern/client');\n\nvar _client2 = require('./legacy/client');\n\n/**\n * Constructs a new Client instance with the given scriptURL\n *\n * @param  {string} scriptURL The location of your server script\n * @param  {Object} options   Initial options\n * @return {MockerClient}\n */\nfunction createClient(scriptURL) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options.forceLegacy) {\n    return new _client2.LegacyClient(scriptURL);\n  }\n\n  var useLegacy = isLegacyMode();\n\n  /* istanbul ignore if */\n  if (useLegacy) {\n    console.warn('Switching to legacy mode...');\n    return new _client2.LegacyClient(scriptURL);\n  }\n\n  return new _client.ModernClient(scriptURL);\n}\n\n/* istanbul ignore next */\nfunction isLegacyMode() {\n  if (!('serviceWorker' in navigator)) {\n    // tslint:disable-next-line max-line-length\n    console.warn('Service worker is not supported in your browser, please check: http://caniuse.com/#feat=serviceworkers');\n\n    return true;\n  }\n\n  if (location.protocol !== 'https:' && location.hostname !== 'localhost' && location.hostname !== '127.0.0.1') {\n    // tslint:disable-next-line max-line-length\n    console.warn('Service workers should be registered in secure pages, further information: https://github.com/w3c/ServiceWorker/blob/master/explainer.md#getting-started');\n\n    return true;\n  }\n\n  return false;\n}\n//# sourceMappingURL=index.js.map","'use strict';\n\nexports.__esModule = true;\nexports.LegacyClient = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _utils = require('../../utils/');\n\nvar _constants = require('../../constants/');\n\nvar _patchXhr = require('./patch-xhr');\n\nvar _patchFetch = require('./patch-fetch');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar clientLog = _utils.debug.scope('legacy');\nvar registrations = {};\n\nvar LegacyClient = exports.LegacyClient = function () {\n\n  /**\n   * Points to currently activated ServiceWorker object.\n   * Stays null when running in legacy mode.\n   *\n   * @readonly\n   * @type {null}\n   */\n\n  /**\n   * Indicates which mode current client is running on.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n  function LegacyClient(scriptURL) {\n    var _this = this;\n\n    _classCallCheck(this, LegacyClient);\n\n    this.isLegacy = true;\n    this.ready = null;\n    this.controller = null;\n    this._registration = null;\n\n    (0, _patchXhr.patchXHR)();\n    (0, _patchFetch.patchFetch)();\n\n    var promise = null;\n\n    // avoid duplications\n    if (registrations[scriptURL]) {\n      promise = registrations[scriptURL];\n    } else {\n      registrations[scriptURL] = promise = new Promise(function (resolve, reject) {\n        var script = document.createElement('script');\n        script.src = scriptURL;\n        script.onload = resolve;\n        script.onerror = reject;\n\n        document.body.appendChild(script);\n      });\n    }\n\n    /* istanbul ignore next */\n    this.ready = promise.then(function () {\n      return (0, _utils.sendMessageRequest)(window, {\n        action: _constants.ACTION.PING\n      });\n    }).then(function () {\n      clientLog.info('connection established');\n      return _this._registration;\n    }).catch(function (error) {\n      // `ready` should never be rejected\n      clientLog.error('bootstrap failed', error);\n    });\n  }\n\n  /**\n   * Update registration, this method has no effect in legacy mode\n   *\n   * @return {Promise<null>}\n   */\n\n\n  /**\n   * Defines whether a client has connected to mocker server.\n   * Resolves with `null` as there're actually no registrations\n   *\n   * @readonly\n   * @type {Promise<null>}\n   */\n\n\n  LegacyClient.prototype.update = function () {\n    var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt('return', Promise.resolve(this._registration));\n\n            case 1:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function update() {\n      return _ref.apply(this, arguments);\n    }\n\n    return update;\n  }();\n\n  /**\n   * Get current registration, resolved with `null` in legacy mode\n   *\n   * @return {Promise<null>}\n   */\n\n\n  LegacyClient.prototype.getRegistration = function () {\n    var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2() {\n      return _regenerator2.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt('return', Promise.resolve(this._registration));\n\n            case 1:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getRegistration() {\n      return _ref2.apply(this, arguments);\n    }\n\n    return getRegistration;\n  }();\n\n  /* istanbul ignore next */\n  /**\n   * Unregister mocker, this method has no effect in legacy mode\n   *\n   * @return {Promise<false>}\n   */\n\n\n  LegacyClient.prototype.unregister = function () {\n    var _ref3 = _asyncToGenerator(_regenerator2.default.mark(function _callee3() {\n      return _regenerator2.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _utils.debug.scope('legacy').warn('mocker in legacy mode can\\'t be unregistered');\n\n              return _context3.abrupt('return', false);\n\n            case 2:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function unregister() {\n      return _ref3.apply(this, arguments);\n    }\n\n    return unregister;\n  }();\n\n  return LegacyClient;\n}();\n//# sourceMappingURL=client.js.map","'use strict';\n\nexports.__esModule = true;\n/**\n * Create custom event\n *\n * @param  {string} name event name\n * @return {Event}\n */\n/* istanbul ignore next */\nfunction createEvent(name) {\n  try {\n    return new Event(name);\n  } catch (e) {\n    var event = document.createEvent('Event');\n    event.initEvent(name, false, false);\n    return event;\n  }\n}\n\n// Don't use `export function createEvent() {}`\n// because `istanbul ignore next` has issue with ES6 exports\n// <https://github.com/gotwarlost/istanbul/issues/762>\nexports.createEvent = createEvent;\n//# sourceMappingURL=create-event.js.map","'use strict';\n\nexports.__esModule = true;\nexports.dispatchFetchEvent = dispatchFetchEvent;\n\nvar _utils = require('../../utils/');\n\nvar _createEvent = require('./create-event');\n\nvar fetchEvents = [];\nvar addEventListener = self.addEventListener.bind(self);\n\n// handle fetch events ourselves\nself.addEventListener = function (type, listener, useCapture) {\n  if (type === 'fetch') {\n    fetchEvents.push(listener);\n  } else {\n    addEventListener(type, listener, useCapture);\n  }\n};\n\n/**\n * Dispatch fetch event on GlobalScope in legacy mode.\n * Resolved with `null` if `event.respondWith` isn't called.\n *\n * @param  {Request} request Request object\n * @return {Promise<Response>}\n */\nfunction dispatchFetchEvent(request) {\n  var fetchEvt = (0, _createEvent.createEvent)('fetch');\n  var deferred = new _utils.Defer();\n\n  fetchEvt.request = request;\n\n  fetchEvt.respondWith = function (response) {\n    if (deferred.done) {\n      // tslint:disable-next-line max-line-length\n      throw new Error('Failed to execute \\'respondWith\\' on \\'FetchEvent\\': The fetch event has already been responded to.');\n    }\n\n    deferred.resolve(response);\n  };\n\n  fetchEvents.forEach(function (listener) {\n    listener(fetchEvt);\n  });\n\n  // `event.respondWith` wasn't called\n  if (!deferred.done) {\n    deferred.resolve(null);\n  }\n\n  return deferred.promise;\n}\n//# sourceMappingURL=dispatch-fetch-event.js.map","'use strict';\n\nexports.__esModule = true;\nexports.patchFetch = patchFetch;\n\nvar _dispatchFetchEvent = require('./dispatch-fetch-event');\n\nfunction patchFetch() {\n  /* istanbul ignore if */\n  if (!self.fetch) {\n    throw new Error('fetch is required for legacy mode');\n  }\n\n  // don't patch polyfills\n  if (!isNativeFetch()) {\n    return;\n  }\n\n  // fetch should be called within Window context\n  var nativeFetch = self.fetch.bind(self);\n\n  function patchedFetch(input, init) {\n    var request = new Request(input, init);\n\n    return (0, _dispatchFetchEvent.dispatchFetchEvent)(request).then(function (response) {\n      if (response) {\n        // `event.respondWith` called\n        // resolve with mock response\n        return response;\n      } else {\n        // fetch real response\n        return nativeFetch(request);\n      }\n    });\n  }\n\n  // marked with `mockerPatched` symbol\n  patchedFetch.mockerPatched = true;\n  // keep a native reference\n  patchedFetch.native = nativeFetch;\n\n  self.fetch = patchedFetch;\n}\n\n/**\n * Check `self.fetch` is (possible) a native one or a polyfill\n *\n * @return {boolean}\n */\n/**\n * Patch native `fetch` interface\n *\n * Notes:\n * - Why we should patch native `fetch`:\n *   Although all the environments that support service worker will support fetch too,\n *   but there are still possiblities that cause mocker runs in legacy mode,\n *   for example, user starts a remote access with `http://192.168.1.129:3000`,\n *   mocker will bootstrap in legacy mode because service worker can only be regiestered\n *   in secure pages.\n *   In case of this situation, we should patch up native fetch with a custom fetch event.\n *\n * - Don't patch fetch polyfills that are implementing with `XMLHttpRequest`:\n *   Since we've patched up native `XMLHttpRequest`,\n *   patching a fetch polyfill may cause an infinite loop:\n *   [unhandled -> fetch -> xhr -> router(unhandled) -> fetch]\n *\n * - Native fetch should always be called within Window context.\n *\n * - If custom fetch event resolved with `null`, re-fetch with native fetch.\n */\n\nfunction isNativeFetch() {\n  var fetch = self.fetch;\n\n  /* eslint-disable no-multi-spaces */\n  return !fetch.mockerPatched && // haven't been patched\n  !fetch.polyfill && // github fetch polyfill\n  fetch.toString === Function.prototype.toString && // sometimes `toString` method is overrided to pretend it's native XD\n  /\\[native code\\]/.test(fetch.toString()); // fetch is overrided\n  /* eslint-enable no-multi-spaces */\n}\n//# sourceMappingURL=patch-fetch.js.map","'use strict';\n\nexports.__esModule = true;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Parse response with the specified `responseType`,\n * return `null` if any error occurs, see:\n * https://xhr.spec.whatwg.org/#the-response-attribute\n *\n * @async\n * @param  {Response}     response     Response object\n * @param  {string}       responseType XHR responseType\n * @return {Promise<any>}\n */\nvar parseResponse = function () {\n  var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2(response, responseType) {\n    var res, text, parser;\n    return _regenerator2.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            res = response.clone();\n            _context2.t0 = responseType;\n            _context2.next = _context2.t0 === '' ? 5 : _context2.t0 === 'text' ? 5 : _context2.t0 === 'json' ? 8 : _context2.t0 === 'blob' ? 11 : _context2.t0 === 'arraybuffer' ? 14 : _context2.t0 === 'document' ? 17 : 22;\n            break;\n\n          case 5:\n            _context2.next = 7;\n            return res.text();\n\n          case 7:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 8:\n            _context2.next = 10;\n            return res.json();\n\n          case 10:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 11:\n            _context2.next = 13;\n            return res.blob();\n\n          case 13:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 14:\n            _context2.next = 16;\n            return res.arrayBuffer();\n\n          case 16:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 17:\n            _context2.next = 19;\n            return res.text();\n\n          case 19:\n            text = _context2.sent;\n            parser = new DOMParser();\n            return _context2.abrupt('return', parser.parseFromString(text, getDocumentMIME(res)));\n\n          case 22:\n            _context2.next = 26;\n            break;\n\n          case 24:\n            _context2.prev = 24;\n            _context2.t1 = _context2['catch'](0);\n\n          case 26:\n            return _context2.abrupt('return', null);\n\n          case 27:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[0, 24]]);\n  }));\n\n  return function parseResponse(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n/**\n * Get MIME from 'content-type' header\n * @param  {Response} res Response object\n * @return {string}\n */\n\n\nexports.patchXHR = patchXHR;\n\nvar _createEvent = require('./create-event');\n\nvar _dispatchFetchEvent = require('./dispatch-fetch-event');\n\nvar _utils = require('../../utils/');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Patch native `XMLHttpRequest`\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Notes:\nhen and how to dispatch fetch event:\nttpRequest won't be sent until we call `xhr.send()`, so we should dispatch a\nfetch event when `xhr.send()` is invoked,\ny overriding `xhr.open()` method, we can get `request_method` and `request_url`,\ny overriding `xhr.setRequestHeader()`, we can get `request_headers`,\nreate a request instance with `request_method`, `request_url`, `request_headers`,\nand other options got from `this[xhrProp]` like `this.withCredentials` (will be\ndelegated to `this.nativeXHR[xhrProp]`).\nispatch fetch event with the request.\nf fetch event responds with a `Response`, parse it and dispatch `readystatechange`\nevent and progress events via `this.dispatchEvent()` (will be delegated to\n`this.nativeXHR.dispatchEvent()`).\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *   7. Or, re-send native requeust via `this.nativeXHR.send()`.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nbout events handling:\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *   1. Since we delegate all `XMLHttpRequest.prototype` methods to `this.nativeXHR`, there's\nno need to create an event emitter, simply calling `this.dispatchEvent()` and all\nregistered listeners will be invoked, including those are set by `instance#on[event]`.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *   2. Meanwhile, all the event handlers you registered on `ExtandableXHR` instance will actually be\nregistered on `this.nativeXHR`. So even if we re-send the native request, all the handlers will\nbe called properly.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction patchXHR() {\n  if (XMLHttpRequest.mockerPatched) {\n    return;\n  }\n\n  self.XMLHttpRequest = MockerXHR;\n}\n\n// only `readystatechange` event and progress events are need to be dispatched\nvar EVENTS_LIST = ['readystatechange', 'loadstart', 'progress', 'load', 'loadend'];\n\nvar ExtandableXHR = (0, _utils.extensify)(XMLHttpRequest);\n\nvar MockerXHR = function (_ExtandableXHR) {\n  _inherits(MockerXHR, _ExtandableXHR);\n\n  function MockerXHR() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MockerXHR);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _ExtandableXHR.call.apply(_ExtandableXHR, [this].concat(args))), _this), _this._requestHeaders = new Headers(), _this._responseHeaders = null, _this._responseMIME = undefined, _this._method = undefined, _this._url = undefined, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  // marked with `mockerPatched` symbol\n\n\n  // keep a native reference\n\n\n  // record request headers via `setRequestHeader` method\n\n\n  // save response headers for `getResponseHeader(s)` methods\n\n\n  // override response 'Content-Type' header via `overrideMimeType` method\n\n\n  // save request method and url via `open` method\n\n\n  MockerXHR.prototype.setRequestHeader = function setRequestHeader(header, value) {\n    _ExtandableXHR.prototype.setRequestHeader.call(this, header, value);\n    this._requestHeaders.append(header, value);\n  };\n\n  MockerXHR.prototype.getResponseHeader = function getResponseHeader(header) {\n    if (!this._responseHeaders) {\n      return _ExtandableXHR.prototype.getResponseHeader.call(this, header);\n    }\n\n    return this._responseHeaders.get(header);\n  };\n\n  MockerXHR.prototype.getAllResponseHeaders = function getAllResponseHeaders() {\n    if (!this._responseHeaders) {\n      return _ExtandableXHR.prototype.getAllResponseHeaders.call(this);\n    }\n\n    var results = [];\n\n    // https://xhr.spec.whatwg.org/#dom-xmlhttprequest-getallresponseheaders\n    var seperator = String.fromCharCode(0x3A) + String.fromCharCode(0x20);\n    var linebreaker = String.fromCharCode(0x0D) + String.fromCharCode(0x0A);\n\n    this._responseHeaders.forEach(function (value, name) {\n      results.push([name, value].join(seperator));\n    });\n\n    return results.join(linebreaker);\n  };\n\n  MockerXHR.prototype.overrideMimeType = function overrideMimeType(mime) {\n    /* istanbul ignore if */\n    if (!_ExtandableXHR.prototype.overrideMimeType) {\n      return;\n    }\n\n    _ExtandableXHR.prototype.overrideMimeType.call(this, mime);\n    this._responseMIME = mime;\n  };\n\n  MockerXHR.prototype.open = function open(method, url) {\n    var _ExtandableXHR$protot;\n\n    for (var _len2 = arguments.length, rest = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      rest[_key2 - 2] = arguments[_key2];\n    }\n\n    (_ExtandableXHR$protot = _ExtandableXHR.prototype.open).call.apply(_ExtandableXHR$protot, [this, method, url].concat(rest));\n    this._method = method;\n    this._url = url;\n  };\n\n  MockerXHR.prototype.send = function send(data) {\n    var _this2 = this;\n\n    if (this.readyState !== this.OPENED) {\n      throw new Error('Failed to execute \\'send\\' on \\'XMLHttpRequest\\': The object\\'s state must be OPENED.');\n    }\n\n    this._mockFetch(data).then(function (result) {\n      if (result) {\n        // `event.respondWith` called\n        // resolve with mock response\n        _this2._processResponse(result);\n      } else {\n        // send real XMLHttpRequest\n        _ExtandableXHR.prototype.send.call(_this2, data);\n      }\n    });\n  };\n\n  /**\n   * Mock fetch\n   * @private\n   * @param  {any}               data request body\n   * @return {Promise<Response>}\n   */\n\n\n  MockerXHR.prototype._mockFetch = function _mockFetch(data) {\n    // GET|HEAD requests cannot include body\n    // set body to `null` will raise a TypeMismatchError in IE Edge\n    var body = this._method === 'GET' || this._method === 'HEAD' ? undefined : data;\n\n    var credentials = this.withCredentials ? 'include' : 'omit';\n\n    var request = new Request(this._url, {\n      body: body,\n      credentials: credentials,\n      method: this._method,\n      headers: this._requestHeaders\n    });\n\n    return (0, _dispatchFetchEvent.dispatchFetchEvent)(request);\n  };\n\n  /**\n   * Process response object\n   *\n   * @private\n   * @param  {Response}      response Response object\n   */\n\n\n  MockerXHR.prototype._processResponse = function () {\n    var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee(response) {\n      var result;\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (this._responseMIME) {\n                // apply `overrideMimeType`\n                response.headers.set('content-type', this._responseMIME);\n              }\n\n              _context.next = 3;\n              return parseResponse(response, this.responseType);\n\n            case 3:\n              result = _context.sent;\n\n\n              this._responseHeaders = response.headers;\n\n              // pretend this request is DONE\n              this._setProperty('readyState', this.DONE);\n              this._setProperty('responseURL', response.url);\n              this._setProperty('status', response.status);\n              this._setProperty('statusText', response.statusText);\n              this._setProperty('response', result);\n\n              if (!this.responseType || this.responseType === 'text') {\n                this._setProperty('responseText', result);\n              }\n\n              if (this.responseType === 'document') {\n                this._setProperty('responseXML', result);\n              }\n\n              this._dispatchEvents();\n\n            case 13:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function _processResponse(_x) {\n      return _ref.apply(this, arguments);\n    }\n\n    return _processResponse;\n  }();\n\n  /**\n   * Assign property to self\n   * @private\n   * @param {string} name  property name\n   * @param {any}    value property value\n   */\n\n\n  MockerXHR.prototype._setProperty = function _setProperty(name, value) {\n    // in IE & Safari, these property are internally read-only on native XHR instance\n    // assign to patched XHR, as a trade-off\n    Object.defineProperty(this, name, {\n      value: value,\n      writable: false,\n      enumerable: true,\n      configurable: true\n    });\n  };\n\n  /**\n   * Dispatch XHR events\n   * @private\n   */\n\n\n  MockerXHR.prototype._dispatchEvents = function _dispatchEvents() {\n    var _this3 = this;\n\n    EVENTS_LIST.forEach(function (type) {\n      var event = (0, _createEvent.createEvent)(type);\n\n      if (type !== 'readystatechange') {\n        // progress event\n        event.total = event.loaded = 1;\n      }\n\n      // Caveat: `this` & `event.target` are still the native one\n      _this3.dispatchEvent(event);\n    });\n  };\n\n  return MockerXHR;\n}(ExtandableXHR);\n\nMockerXHR.mockerPatched = true;\nMockerXHR.native = XMLHttpRequest;\nfunction getDocumentMIME(res) {\n  var contentType = res.headers.get('content-type');\n\n  /* istanbul ignore if */\n  if (!contentType) {\n    return 'text/html';\n  }\n\n  // strip charset\n  return contentType.replace(/;.*/, '');\n}\n//# sourceMappingURL=patch-xhr.js.map","'use strict';\n\nexports.__esModule = true;\nexports.ModernClient = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _utils = require('../../utils/');\n\nvar _register = require('./register');\n\nvar _connect = require('./connect');\n\nvar _getNewestReg = require('./get-newest-reg');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ModernClient = exports.ModernClient = function () {\n\n  /**\n   * Defines whether a client has connected to mocker server.\n   *\n   * @readonly\n   * @type {Promise<ServiceWorkerRegistration>}\n   */\n  function ModernClient(scriptURL) {\n    var _this = this;\n\n    _classCallCheck(this, ModernClient);\n\n    this.isLegacy = false;\n    this.ready = null;\n    this.controller = null;\n\n    /* istanbul ignore next */\n    this.ready = this._init(scriptURL).then(function (registration) {\n      _this.controller = registration.active;\n      return registration;\n    }).catch(function (error) {\n      _utils.debug.error('mocker initialization failed: ', error);\n    });\n  }\n\n  /**\n   * Update the service worker registration immediately\n   *\n   * @return {Promise<ServiceWorkerRegistration>}\n   */\n\n\n  /**\n   * Points to currently activated ServiceWorker object.\n   *\n   * @readonly\n   * @type {ServiceWorker}\n   */\n\n  /**\n   * Indicates which mode current client is running on.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n\n\n  ModernClient.prototype.update = function () {\n    var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt('return', (0, _getNewestReg.getNewestReg)());\n\n            case 1:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function update() {\n      return _ref.apply(this, arguments);\n    }\n\n    return update;\n  }();\n\n  /**\n   * Get current service worker registration.\n   *\n   * @return {Promise<ServiceWorkerRegistration>}\n   */\n\n\n  ModernClient.prototype.getRegistration = function () {\n    var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2() {\n      return _regenerator2.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt('return', this.ready);\n\n            case 1:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getRegistration() {\n      return _ref2.apply(this, arguments);\n    }\n\n    return getRegistration;\n  }();\n\n  /* istanbul ignore next: don't unregister sw in tests */\n  /**\n   * Unregister current service worker registration,\n   * call this method will invoke `ServiceWorkerRegistration.unregister()` method when possible.\n   *\n   * @return {Promise<boolean>}\n   */\n\n\n  ModernClient.prototype.unregister = function () {\n    var _ref3 = _asyncToGenerator(_regenerator2.default.mark(function _callee3() {\n      var registration, result;\n      return _regenerator2.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.getRegistration();\n\n            case 2:\n              registration = _context3.sent;\n              _context3.next = 5;\n              return registration.unregister();\n\n            case 5:\n              result = _context3.sent;\n\n\n              if (!result) {\n                // tslint:disable-next-line max-line-length\n                _utils.debug.warn('this service worker has already been unregistered, you may need to close all relative tabs to remove it');\n              }\n\n              return _context3.abrupt('return', result);\n\n            case 8:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function unregister() {\n      return _ref3.apply(this, arguments);\n    }\n\n    return unregister;\n  }();\n\n  /**\n   * Init mocker\n   *\n   * @private\n   * @param  {string} scriptURL\n   * @return {Promise<ServiceWorkerRegistration>}\n   */\n\n\n  ModernClient.prototype._init = function () {\n    var _ref4 = _asyncToGenerator(_regenerator2.default.mark(function _callee4(scriptURL) {\n      var registration;\n      return _regenerator2.default.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return (0, _register.register)(scriptURL, {\n                scope: location.pathname\n              });\n\n            case 2:\n              registration = _context4.sent;\n\n\n              this._autoSyncClient();\n\n              return _context4.abrupt('return', registration);\n\n            case 5:\n            case 'end':\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function _init(_x) {\n      return _ref4.apply(this, arguments);\n    }\n\n    return _init;\n  }();\n\n  /**\n   * Synchronize mocker controller when sw controller changed\n   *\n   * @private\n   */\n\n\n  ModernClient.prototype._autoSyncClient = function _autoSyncClient() {\n    var _this2 = this;\n\n    var _navigator = navigator,\n        serviceWorker = _navigator.serviceWorker;\n\n\n    var updateLog = _utils.debug.scope('update');\n\n    /* istanbul ignore next: won't occur in tests */\n    serviceWorker.addEventListener('controllerchange', _asyncToGenerator(_regenerator2.default.mark(function _callee5() {\n      var registration;\n      return _regenerator2.default.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return (0, _connect.connect)(true);\n\n            case 3:\n              registration = _context5.sent;\n\n              _this2.controller = registration.active;\n\n              updateLog.color('crimson').warn('mocker updated, reload your requests to take effect');\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5['catch'](0);\n\n              updateLog.error('connecting to new service worker failed', _context5.t0);\n\n            case 11:\n            case 'end':\n              return _context5.stop();\n          }\n        }\n      }, _callee5, _this2, [[0, 8]]);\n    })));\n  };\n\n  return ModernClient;\n}();\n//# sourceMappingURL=client.js.map","'use strict';\n\nexports.__esModule = true;\nexports.connect = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Connect to service worker\n *\n * @param  {boolean} [skipUpdate=false] Set to `true` to bypass auto update\n * @return {Promise<ServiceWorkerRegistration>}\n */\nvar connect = exports.connect = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n    var skipUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var _navigator, serviceWorker, hasController, reg;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _navigator = navigator, serviceWorker = _navigator.serviceWorker;\n\n            // controller may be set when sw is ready\n\n            hasController = !!serviceWorker.controller;\n\n            // chrome will sometimes be hanging after reloading page\n            // delay all actions until sw is ready\n\n            _context.next = 4;\n            return serviceWorker.ready;\n\n          case 4:\n            if (!(!skipUpdate && hasController)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return (0, _getNewestReg.getNewestReg)();\n\n          case 7:\n            _context.t0 = _context.sent;\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.next = 12;\n            return serviceWorker.getRegistration();\n\n          case 12:\n            _context.t0 = _context.sent;\n\n          case 13:\n            reg = _context.t0;\n            return _context.abrupt('return', handshake(reg));\n\n          case 15:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function connect() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n/**\n * Establish service worker connection\n *\n * @param  {ServiceWorkerRegistration} registration\n * @return {Promise<ServiceWorkerRegistration>}\n */\n\n\nvar handshake = function () {\n  var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2(registration) {\n    var controller;\n    return _regenerator2.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            controller = registration.active;\n\n            /* istanbul ignore if */\n\n            if (controller) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw new Error('no active service worker registration is found');\n\n          case 3:\n            if (navigator.serviceWorker.controller) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 6;\n            return (0, _utils.sendMessageRequest)(controller, {\n              action: _constants.ACTION.REQUEST_CLAIM\n            });\n\n          case 6:\n            _context2.next = 8;\n            return (0, _utils.sendMessageRequest)(controller, {\n              action: _constants.ACTION.PING\n            });\n\n          case 8:\n\n            _utils.debug.scope('modern').info('connection established');\n\n            return _context2.abrupt('return', registration);\n\n          case 10:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function handshake(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _utils = require('../../utils/');\n\nvar _constants = require('../../constants/');\n\nvar _getNewestReg = require('./get-newest-reg');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n//# sourceMappingURL=connect.js.map","'use strict';\n\nexports.__esModule = true;\nexports.getNewestReg = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Get newest service worker registration\n *\n * @return {Promise<ServiceWorkerRegistration>}\n */\n/* istanbul ignore next: unable to test it on single run */\nvar getNewestReg = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n    var _navigator, serviceWorker, registration, newWorker;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _navigator = navigator, serviceWorker = _navigator.serviceWorker;\n\n\n            updateLog.color('darkorchid').info('checking for updates');\n\n            _context.next = 4;\n            return serviceWorker.getRegistration();\n\n          case 4:\n            registration = _context.sent;\n\n            if (registration) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('no active service worker registration is found');\n\n          case 7:\n            _context.next = 9;\n            return registration.update();\n\n          case 9:\n            newWorker = registration.installing || registration.waiting;\n\n            if (!newWorker) {\n              _context.next = 16;\n              break;\n            }\n\n            updateLog.info('installing updates');\n\n            // wait until worker is activated\n            _context.next = 14;\n            return (0, _utils.eventWaitUntil)(newWorker, 'statechange', function () {\n              return newWorker.state === 'activated';\n            });\n\n          case 14:\n            _context.next = 17;\n            break;\n\n          case 16:\n            updateLog.color('lightseagreen').info('already up-to-date');\n\n          case 17:\n            return _context.abrupt('return', registration);\n\n          case 18:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getNewestReg() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _utils = require('../../utils/');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar updateLog = _utils.debug.scope('update');exports.getNewestReg = getNewestReg;\n//# sourceMappingURL=get-newest-reg.js.map","'use strict';\n\nexports.__esModule = true;\nexports.register = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Register service worker\n *\n * @param  {string}                             scriptURL\n * @param  {ServiceWorkerRegisterOptions}       options\n * @return {Promise<ServiceWorkerRegistration>}\n */\nvar register = exports.register = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee(scriptURL, options) {\n    var _navigator, serviceWorker;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _navigator = navigator, serviceWorker = _navigator.serviceWorker;\n            _context.next = 3;\n            return serviceWorker.register(scriptURL, options);\n\n          case 3:\n            return _context.abrupt('return', (0, _connect.connect)());\n\n          case 4:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function register(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _connect = require('./connect');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n//# sourceMappingURL=register.js.map","'use strict';\n\nexports.__esModule = true;\nvar ACTION = {\n  PING: 'ping',\n  PONG: 'pong',\n  ESTABLISHED: 'established',\n  REQUEST_CLAIM: 'request_claim'\n};\n\nObject.keys(ACTION).forEach(function (prop) {\n  ACTION[prop] = '@mocker/' + ACTION[prop];\n});\n\nexports.ACTION = ACTION;\n//# sourceMappingURL=action.js.map","'use strict';\n\nexports.__esModule = true;\n\nvar _action = require('./action');\n\nObject.keys(_action).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _action[key];\n    }\n  });\n});\n//# sourceMappingURL=index.js.map","'use strict';\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar isIE = /Trident|Edge/.test(navigator.userAgent);\n\nvar defaultColor = 'dodgerblue';\n\nvar colorPresets = {\n  log: defaultColor,\n  info: defaultColor,\n  warn: 'goldenrod',\n  error: 'crimson'\n};\n\nvar PrefixedConsole = exports.PrefixedConsole = function () {\n  /**\n   * Logger namespace\n   *\n   * @private\n   * @type {string}\n   */\n  function PrefixedConsole() {\n    var namespace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'mocker';\n    var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : colorPresets.log;\n\n    _classCallCheck(this, PrefixedConsole);\n\n    this._namespace = 'mocker';\n    this._color = colorPresets.log;\n\n    this._namespace = namespace;\n    this._color = color;\n  }\n\n  /**\n   * Set logger color, returns new PrefixedConsole\n   *\n   * @param  {string} c Color string\n   * @return {PrefixedConsole}\n   */\n\n\n  /**\n   * Logger color\n   *\n   * @private\n   * @type {string}\n   */\n\n\n  PrefixedConsole.prototype.color = function color(c) {\n    return new PrefixedConsole(this._namespace, c);\n  };\n\n  /**\n   * Set logger namespace, returns new PrefixedConsole\n   *\n   * @param  {string} ns Namespace\n   * @return {PrefixedConsole}\n   */\n\n\n  PrefixedConsole.prototype.scope = function scope(ns) {\n    return new PrefixedConsole(this._namespace + ':' + ns, this._color);\n  };\n\n  return PrefixedConsole;\n}();\n\nvar debug = exports.debug = new PrefixedConsole();\n\n/* istanbul ignore else */\n// inherit console methods\nif (typeof Object.setPrototypeOf === 'function') {\n  Object.setPrototypeOf(PrefixedConsole.prototype, console);\n} else {\n  var desc = {};\n\n  Object.getOwnPropertyNames(PrefixedConsole.prototype).forEach(function (prop) {\n    desc[prop] = Object.getOwnPropertyDescriptor(PrefixedConsole.prototype, prop);\n  });\n\n  PrefixedConsole.prototype = Object.create(console, desc);\n}\n\n['log', 'info', 'warn', 'error'].forEach(function (method) {\n  PrefixedConsole.prototype[method] = function logger() {\n    var _console2;\n\n    var _namespace = this._namespace,\n        _color = this._color;\n\n    /* istanbul ignore if */\n\n    for (var _len = arguments.length, messages = Array(_len), _key = 0; _key < _len; _key++) {\n      messages[_key] = arguments[_key];\n    }\n\n    if (isIE) {\n      var _console;\n\n      return (_console = console)[method].apply(_console, ['[' + _namespace + ']'].concat(messages));\n    }\n\n    var head = '%c[' + _namespace + ']%c';\n\n    if (/%c/.test(messages[0])) {\n      head = head + ' ' + messages.shift();\n    }\n\n    var color = _color === defaultColor ? colorPresets[method] : _color;\n\n    (_console2 = console)[method].apply(_console2, [head, 'color: ' + color, 'color: #000'].concat(messages));\n  };\n});\n//# sourceMappingURL=debug.js.map","\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Defer =\n/**\n * Indicates whether this defer is end\n *\n * @type {boolean}\n */\nexports.Defer = function Defer() {\n  var _this = this;\n\n  _classCallCheck(this, Defer);\n\n  this.done = false;\n  this.promise = null;\n\n  this.promise = new Promise(function (resolve, reject) {\n    _this.resolve = function (result) {\n      resolve(result);\n      _this.done = true;\n    };\n\n    _this.reject = function (reason) {\n      reject(reason);\n      _this.done = true;\n    };\n  });\n}\n\n/**\n * Defer's promise object\n *\n * @readonly\n * @type {Promise<any>}\n */\n;\n//# sourceMappingURL=defer.js.map","\"use strict\";\n\nexports.__esModule = true;\nexports.eventWaitUntil = eventWaitUntil;\n/**\n * Comparer function\n *\n * @callback comparer\n * @param {Event} event Event object\n * @return {boolean}\n */\n\n/**\n * Wait until an event matches given conditions\n *\n * @param  {any}      target   Event target\n * @param  {string}   event    Event name\n * @param  {comparer} comparer Comparer function\n * @return {Promise<Event>}\n */\nfunction eventWaitUntil(target, event, comparer) {\n  return new Promise(function (resolve) {\n    target.addEventListener(event, function handler(evt) {\n      if (comparer(evt)) {\n        target.removeEventListener(event, handler);\n        resolve(evt);\n      }\n    });\n  });\n}\n//# sourceMappingURL=event-wait-until.js.map","'use strict';\n\nexports.__esModule = true;\nexports.extensify = extensify;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Make the un-extendable classes great again\n *\n * Notes:\n * - Main concepts:\n *   1. The best way to make another native class is to extend native class\n *      with overriding some methods. However, extending the native sometimes\n *      raises an error: <Failed to construct ${Native}: Please use the 'new' operator,\n *      this DOM object constructor cannot be called as a function.>\n *   2. So we should extend `Native` in some ways that are not constructing\n *      new instance with `Native.call(this)`:\n *      2.1. Look back to JavaScript inheritance, no matter which method we choose to\n *           use, we are almost doing the same thing: let the execution context of\n *           `SuperClass.prototype.method` be the instance of `SubClass`.\n *      1.2. Thus if we bind `Native.prototype.method` with a native instance,\n *           we can be free to invoke all methods in prototype! Then attaching these\n *           methods to the `Extendable.prototype`, the instances of `Extendable` will act\n *           as if they're real native instances!\n *\n * - Implementation of `Extendable`:\n *   1. Create a normal class with `this._native` pointing to a native instance,\n *   2. Iterate through the descriptors of `Native.prototype`:\n *      2.1. If the property is a primitive value, do nothing,\n *      2.2. If the property is an accessor, bind `get` and `set` with `this._native`,\n *      2.3. If the property is a function, bind it with `this._native`,\n *      2.4. Copy the descriptor to `Extendable.prototype`\n *   3. Iterate through the descriptors of `Native`, copy them to `Extendable` as\n *      static methods.\n */\n\n/**\n * Make un-extendable native classes extendable\n *\n * @param {AnyClass} Native Native class\n * @return {ExtendableAnyClass}\n */\nfunction extensify(Native) {\n  var Extendable = function Extendable() {\n    _classCallCheck(this, Extendable);\n\n    this._native = initNative.apply(undefined, arguments);\n\n    checkLack(this._native);\n  }\n  /**\n   * Refer to native object\n   *\n   * @private\n   * @type {AnyClass}\n   */\n  ;\n\n  function initNative() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 0) {\n      return new Native();\n    }\n\n    return new (Function.prototype.bind.apply(Native, [null].concat(args)))();\n  }\n\n  var checked = false;\n  /* istanbul ignore next: safari only */\n  function checkLack(instance) {\n    if (checked) {\n      return;\n    }\n\n    // safari 9- only have methods on `XMLHttpRequest.prototype`\n    // so we need copy properties from an instance\n\n    var _loop = function _loop(prop) {\n      if (!Extendable.prototype.hasOwnProperty(prop)) {\n        Object.defineProperty(Extendable.prototype, prop, {\n          get: function get() {\n            return this._native[prop];\n          },\n          set: function set(value) {\n            this._native[prop] = value;\n            return value;\n          },\n\n          enumerable: true,\n          configurable: true\n        });\n      }\n    };\n\n    for (var prop in instance) {\n      _loop(prop);\n    }\n  }\n\n  // copy all static properties\n  // safari 9- will include a \"prototype\" property on XMLHttpRequest\n  try {\n    Object.keys(Native).forEach(function (prop) {\n      Object.defineProperty(Extendable, prop, Object.getOwnPropertyDescriptor(Native, prop));\n    });\n  } catch (e) {}\n\n  // delegate all unset properties to `_native`\n  (function mapPrototypeMethods() {\n    var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Native.prototype;\n    var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Extendable.prototype;\n\n    if (source.constructor === Object) {\n      // exit recursion\n      return;\n    }\n\n    Object.keys(source).forEach(function (prop) {\n      /* istanbul ignore if */\n      if (target.hasOwnProperty(prop)) {\n        return;\n      }\n\n      var descriptor = Object.getOwnPropertyDescriptor(source, prop);\n\n      if (descriptor.get || descriptor.set) {\n        descriptor.get = function getNative() {\n          return this._native[prop];\n        };\n\n        descriptor.set = function setNative(value) {\n          this._native[prop] = value;\n          return value;\n        };\n      } else if (typeof descriptor.value === 'function') {\n        // method\n        var nativeFn = descriptor.value;\n        descriptor.value = function wrapped() {\n          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return nativeFn.apply(this._native, args);\n        };\n      }\n\n      // enable overriding\n      descriptor.configurable = true;\n\n      Object.defineProperty(target, prop, descriptor);\n    });\n\n    // recursively look-up\n    mapPrototypeMethods(Object.getPrototypeOf(source), target);\n  })();\n\n  return Extendable;\n}\n//# sourceMappingURL=extensify.js.map","'use strict';\n\nexports.__esModule = true;\n\nvar _debug = require('./debug');\n\nObject.keys(_debug).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _debug[key];\n    }\n  });\n});\n\nvar _defer = require('./defer');\n\nObject.keys(_defer).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _defer[key];\n    }\n  });\n});\n\nvar _extensify = require('./extensify');\n\nObject.keys(_extensify).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extensify[key];\n    }\n  });\n});\n\nvar _eventWaitUntil = require('./event-wait-until');\n\nObject.keys(_eventWaitUntil).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _eventWaitUntil[key];\n    }\n  });\n});\n\nvar _sendMessageRequest = require('./send-message-request');\n\nObject.keys(_sendMessageRequest).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _sendMessageRequest[key];\n    }\n  });\n});\n//# sourceMappingURL=index.js.map","'use strict';\n\nexports.__esModule = true;\nexports.sendMessageRequest = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Send message and get the response\n *\n * @param  {any}    target  Message target\n * @param  {any}    message Message body\n * @param  {number} timeout Messaging timeout\n * @return {Promise<any>} Resolves with response message\n */\nvar sendMessageRequest = exports.sendMessageRequest = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee(target, message) {\n    var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3 * 1e3;\n\n    var _ref2, port1, port2;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref2 = new MessageChannel(), port1 = _ref2.port1, port2 = _ref2.port2;\n            return _context.abrupt('return', new Promise(function (resolve, reject) {\n              var timer = isFinite(timeout) && setTimeout(function () {\n                reject(new Error('messaging timeout: ' + JSON.stringify(message)));\n              }, timeout);\n\n              port1.onmessage = function (_ref3) {\n                var data = _ref3.data;\n\n                if (timer) {\n                  clearTimeout(timer);\n                }\n\n                // avoid high transient memory usage, see\n                // https://html.spec.whatwg.org/multipage/comms.html#ports-and-garbage-collection\n                port1.close();\n                port2.close();\n\n                /* istanbul ignore else */\n                if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n                  data.request = message;\n                }\n\n                if (data && data.error) {\n                  reject(data);\n                } else {\n                  resolve(data);\n                }\n              };\n\n              if (target === self.window) {\n                // posting message to self => legacy mode\n                // add `origin` param to `window.postMessage(message, targetOrigin, [transfer])`\n                target.postMessage(message, '*', [port2]);\n              } else {\n                target.postMessage(message, [port2]);\n              }\n            }));\n\n          case 2:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function sendMessageRequest(_x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n//# sourceMappingURL=send-message-request.js.map","import { Client, ClientBase, OnMessage } from '@tdm/service-mocker/client';\nimport { ClientPostMessageEvent, ServerRequest, ClientResponse } from '@tdm/service-mocker/shared';\n\n@Client({\n  scriptURL: './sw.js'\n})\nexport class SWClient extends ClientBase {\n  @OnMessage()\n  installed(data: ServerRequest<'installed'>): Promise<ClientResponse<'installed'>> {\n    return <any> Promise.resolve(12);\n  }\n\n  restoreDB(): Promise<ClientPostMessageEvent<'restoreDb'>> {\n    return import(/* webpackChunkName: \"northwind\" */ './json-db/index')\n      .then( module => this.send('restoreDb', module.DB, 1000 * 60) );\n  }\n\n}\n","export * from './models';\nexport { SWClient } from './client';\n","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'categories/:id?'\n})\nclass $Category implements modelContract.Category {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  CategoryID: number;\n\n  @Prop()\n  CategoryName: string;\n\n  @Prop()\n  Description: string;\n\n  @Prop()\n  Picture: string;\n}\n\nexport const Category = ActiveRecord($Category);\nexport type Category = ActiveRecord<$Category>;\n","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, TypeOfActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'customers/:id?'\n})\nclass $Customer extends ActiveRecord() implements modelContract.Customer {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  CustomerID: string;\n\n  @Prop()\n  CompanyName: string;\n\n  @Prop()\n  ContactName: string;\n\n  @Prop()\n  ContactTitle: string;\n\n  @Prop()\n  Address: string;\n\n  @Prop()\n  City: string;\n\n  @Prop()\n  Region: string;\n\n  @Prop()\n  PostalCode: string;\n\n  @Prop()\n  Country: string;\n\n  @Prop()\n  Phone: string;\n\n  @Prop()\n  Fax: string;\n}\n\nexport const Customer: TypeOfActiveRecord<$Customer, typeof $Customer> = <any> $Customer;\nexport type Customer = ActiveRecord<$Customer>;\n","import { Identity, Prop, Constructor } from '@tdm/data';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'employeeTerritories/:id?'\n})\nclass $EmployeeTerritory implements modelContract.EmployeeTerritory {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  EmployeeTerritory: number;\n\n  @Prop()\n  EmployeeID: number;\n\n  @Prop()\n  TerritoryID: number;\n\n}\n\nexport const EmployeeTerritory = ActiveRecord($EmployeeTerritory);\nexport type EmployeeTerritory = ActiveRecord<$EmployeeTerritory>;\n\n/* When moving to TS 2.8+\nexport const EmployeeTerritory: TypeOfActiveRecord<typeof $EmployeeTerritory> = <any> $EmployeeTerritory;\nexport type EmployeeTerritory = InstanceType<typeof EmployeeTerritory>;\n*/\n","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'employees/:id?'\n})\nclass $Employee implements modelContract.Employee {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  EmployeeID: number;\n\n  @Prop()\n  LastName: string;\n\n  @Prop()\n  FirstName: string;\n\n  @Prop()\n  Title: string;\n\n  @Prop()\n  TitleOfCourtesy: string;\n\n  @Prop()\n  BirthDate: string;\n\n  @Prop()\n  HireDate: string;\n\n  @Prop()\n  Address: string;\n\n  @Prop()\n  City: string;\n\n  @Prop()\n  Region: string;\n\n  @Prop()\n  PostalCode: string;\n\n  @Prop()\n  Country: string;\n\n  @Prop()\n  HomePhone: string;\n\n  @Prop()\n  Extension: number;\n\n  @Prop()\n  Photo: any;\n\n  @Prop()\n  Notes: string;\n\n  @Prop()\n  ReportsTo: number;\n\n  @Prop()\n  PhotoPath: string;\n\n}\n\nexport const Employee = ActiveRecord($Employee);\nexport type Employee = ActiveRecord<$Employee>;\n\n/* When moving to TS 2.8+\nexport const Employee: TypeOfActiveRecord<typeof $Employee> = <any> $Employee;\nexport type Employee = InstanceType<typeof Employee>;\n*/\n","export * from './customer';\nexport * from './category';\nexport * from './employee';\nexport * from './employee-territory';\nexport * from './order';\nexport * from './order-detail';\nexport * from './product';\nexport * from './region';\nexport * from './shipper';\nexport * from './supplier';\nexport * from './territory';\n","import { Identity, Prop, Constructor } from '@tdm/data';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'orderDetails/:id?'\n})\nclass $OrderDetail implements modelContract.OrderDetail {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  OrderDetailID: string;\n\n  @Prop()\n  OrderID: number;\n\n  @Prop()\n  ProductID: string;\n\n  @Prop()\n  UnitPrice: string;\n\n  @Prop()\n  Quantity: string;\n\n  @Prop()\n  Discount: string;\n\n}\n\nexport const OrderDetail = ActiveRecord($OrderDetail);\nexport type OrderDetail = ActiveRecord<$OrderDetail>;\n\n/* When moving to TS 2.8+\nexport const OrderDetail: TypeOfActiveRecord<typeof $OrderDetail> = <any> $OrderDetail;\nexport type OrderDetail = InstanceType<typeof OrderDetail>;\n*/\n","import { Identity, Prop, Relation } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\nimport { Customer } from './customer';\n\n@HttpResource({\n  endpoint: 'orders/:id?'\n})\nclass $Order implements modelContract.Order {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  OrderID: number;\n\n  @Prop()\n  CustomerID: string;\n\n  @Prop()\n  @Relation({ foreignKey: 'CustomerID' })\n  Customer: Customer;\n\n  @Prop()\n  EmployeeID: number;\n\n  @Prop()\n  OrderDate: string;\n\n  @Prop()\n  RequiredDate: string;\n\n  @Prop()\n  ShippedDate: string;\n\n  @Prop()\n  ShipVia: number;\n\n  @Prop()\n  Freight: number;\n\n  @Prop()\n  ShipName: string;\n\n  @Prop()\n  ShipAddress: string;\n\n  @Prop()\n  ShipCity: string;\n\n  @Prop()\n  ShipRegion: string;\n\n  @Prop()\n  ShipPostalCode: string;\n\n  @Prop()\n  ShipCountry: string;\n\n}\n\nexport const Order = ActiveRecord($Order);\nexport type Order = ActiveRecord<$Order>;\n\n/* When moving to TS 2.8+\nexport const Order: TypeOfActiveRecord<typeof $Order> = <any> $Order;\nexport type Order = InstanceType<typeof Order>;\n*/\n","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'products/:id?'\n})\nclass $Product implements modelContract.Product {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  ProductID: number;\n\n  @Prop()\n  ProductName: string;\n\n  @Prop()\n  SupplierID: number;\n\n  @Prop()\n  CategoryID: number;\n\n  @Prop()\n  QuantityPerUnit: string;\n\n  @Prop()\n  UnitPrice: number;\n\n  @Prop()\n  UnitsInStock: number;\n\n  @Prop()\n  UnitsOnOrder: number;\n\n  @Prop()\n  ReorderLevel: number;\n\n  @Prop()\n  Discontinued: number;\n\n}\n\nexport const Product = ActiveRecord($Product);\nexport type Product = ActiveRecord<$Product>;\n\n/* When moving to TS 2.8+\nexport const Product: TypeOfActiveRecord<typeof $Product> = <any> $Product;\nexport type Product = InstanceType<typeof Product>;\n*/\n","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'regions/:id?'\n})\nclass $Region implements modelContract.Region {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  RegionID: number;\n\n  @Prop()\n  RegionDescription: string;\n\n}\n\nexport const Region = ActiveRecord($Region);\nexport type Region = ActiveRecord<$Region>;\n\n/* When moving to TS 2.8+\nexport const Region: TypeOfActiveRecord<typeof $Region> = <any> $Region;\nexport type Region = InstanceType<typeof Region>;\n*/\n","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'shippers/:id?'\n})\nclass $Shipper implements modelContract.Shipper {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  ShipperID: number;\n\n  @Prop()\n  CompanyName: string;\n\n  @Prop()\n  Phone: string;\n\n}\n\nexport const Shipper = ActiveRecord($Shipper);\nexport type Shipper = ActiveRecord<$Shipper>;\n\n/* When moving to TS 2.8+\nexport const Shipper: TypeOfActiveRecord<typeof $Shipper> = <any> $Shipper;\nexport type Shipper = InstanceType<typeof Shipper>;\n*/\n","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'suppliers/:id?'\n})\nclass $Supplier implements modelContract.Supplier {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  SupplierID: number;\n\n  @Prop()\n  CompanyName: string;\n\n  @Prop()\n  ContactName: string;\n\n  @Prop()\n  ContactTitle: string;\n\n  @Prop()\n  Address: string;\n\n  @Prop()\n  City: string;\n\n  @Prop()\n  Region: string;\n\n  @Prop()\n  PostalCode: string;\n\n  @Prop()\n  Country: string;\n\n  @Prop()\n  Phone: string;\n\n  @Prop()\n  Fax: string;\n\n  @Prop()\n  HomePage: string;\n\n}\n\nexport const Supplier = ActiveRecord($Supplier);\nexport type Supplier = ActiveRecord<$Supplier>;\n\n/* When moving to TS 2.8+\nexport const Supplier: TypeOfActiveRecord<typeof $Supplier> = <any> $Supplier;\nexport type Supplier = InstanceType<typeof Supplier>;\n*/\n","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'territories/:id?'\n})\nclass $Territory implements modelContract.Territory {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  TerritoryID: number;\n\n  @Prop()\n  TerritoryDescription: string;\n\n  @Prop()\n  RegionID: number;\n\n}\n\nexport const Territory = ActiveRecord($Territory);\nexport type Territory = ActiveRecord<$Territory>;\n\n/* When moving to TS 2.8+\nexport const Territory: TypeOfActiveRecord<typeof $Territory> = <any> $Territory;\nexport type Territory = InstanceType<typeof Territory>;\n*/\n"],"sourceRoot":""}