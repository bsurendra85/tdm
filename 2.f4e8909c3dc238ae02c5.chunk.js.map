{"version":3,"sources":["./src/demo/modules/@http/tutorial/5-options/options.component.ts","./src/demo/modules/@http/tutorial/3-creating-a-model/creating-a-model.component.ts","./node_modules/service-mocker/client/modern/get-newest-reg.js","./node_modules/service-mocker/client/legacy/create-event.js","./src/demo/modules/@http/tutorial/module.ts","./node_modules/service-mocker/client/modern/register.js","./node_modules/service-mocker/utils/debug.js","./node_modules/service-mocker/client/legacy/client.js","./node_modules/service-mocker/client/modern/client.js","./src/demo/modules/@http/client/models/product.ts","./src/demo/modules/@http/client/models/supplier.ts","./node_modules/service-mocker/utils/index.js","./src/@tdm/service-mocker/shared/src/messaging.ts","./src/@tdm/service-mocker/client/src/metadata/on-message.ts","./src/demo/modules/@http/ngx-http-app/ngx-http-app.component.ts","./src/demo/modules/@http/ngx-http-app/__tdm-code__.ts","./src/@tdm/service-mocker/client/src/client-base.ts","./src/demo/modules/@http/tutorial/1-introduction/introduction.component.html","./src/demo/modules/@http/client/models/order.ts","./node_modules/service-mocker/client/legacy/dispatch-fetch-event.js","./src/demo/modules/@http/client/models/employee-territory.ts","./src/@tdm/service-mocker/client/src/decorator/client.ts","./src/demo/modules/@http/client/models/territory.ts","./src/demo/modules/@http/client/models/customer.ts","./node_modules/service-mocker/constants/index.js","./src/demo/modules/@http/client/models/order-detail.ts","./node_modules/service-mocker/client/legacy/patch-fetch.js","./src/demo/modules/@http/client/models/region.ts","./node_modules/service-mocker/client/legacy/patch-xhr.js","./node_modules/service-mocker/client/modern/connect.js","./node_modules/regenerator-runtime/runtime.js","./node_modules/service-mocker/utils/event-wait-until.js","./node_modules/service-mocker/client/index.js","./src/demo/modules/@http/tutorial/5-resource-control/resource-control.component.html","./src/demo/modules/@http/tutorial/3-creating-a-model/creating-a-model.component.html","./src/demo/modules/@http/client/models/employee.ts","./src/demo/modules/@http/ngx-http-app/ngx-http-app.component.html","./node_modules/babel-runtime/regenerator/index.js","./node_modules/service-mocker/utils/defer.js","./node_modules/service-mocker/utils/extensify.js","./src/demo/modules/@http/tutorial/5-options/options.component.html","./src/demo/modules/@http/client/models/category.ts","./src/demo/modules/@http/tutorial/4-dao/dao.component.ts","./src/@tdm/service-mocker/client/src/decorator/on-message.ts","./src/demo/modules/@http/tutorial/1-introduction/introduction.component.ts","./node_modules/service-mocker/utils/send-message-request.js","./src/demo/modules/@http/tutorial/1-introduction/model.ts","./src/demo/modules/@http/tutorial/2-setup/setup.component.ts","./src/demo/modules/@http/module.ts","./src/@tdm/service-mocker/client/src/metadata/client.ts","./node_modules/regenerator-runtime/runtime-module.js","./src/demo/modules/@http/tutorial/4-dao/dao.component.html","./src/demo/modules/@http/tutorial/2-setup/setup.component.html","./node_modules/service-mocker/constants/action.js","./src/demo/modules/@http/client/client.ts","./src/demo/modules/@http/client/models/shipper.ts","./src/demo/modules/@http/tutorial/5-resource-control/resource-control.component.ts","./src/@tdm/service-mocker/client/src/client.ts"],"names":["OptionsComponent","ngDao","this","code","__webpack_require__","e","then","bind","prototype","click","get","__WEBPACK_IMPORTED_MODULE_1__client__","findById","urlParams","someQueryKey","c","console","log","tutorial","id","name","d","__webpack_exports__","CreatingAModelComponent","exports","__esModule","getNewestReg","undefined","_regenerator2","obj","default","_interopRequireDefault","_ref","fn","gen","apply","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","err","_asyncToGenerator","mark","_callee","_navigator","serviceWorker","registration","newWorker","wrap","_context","prev","next","navigator","updateLog","color","getRegistration","sent","Error","update","installing","waiting","_utils","eventWaitUntil","state","abrupt","stop","debug","scope","createEvent","Event","event","document","initEvent","isTutorial","TUTORIALS","__WEBPACK_IMPORTED_MODULE_1__1_introduction__","__WEBPACK_IMPORTED_MODULE_2__2_setup__","__WEBPACK_IMPORTED_MODULE_3__3_creating_a_model__","__WEBPACK_IMPORTED_MODULE_4__4_dao__","__WEBPACK_IMPORTED_MODULE_5__5_options__","__WEBPACK_IMPORTED_MODULE_6__5_resource_control__","NgxHttpTutorialsModule","tutorialService","_i","TUTORIALS_1","length","addTutorial","register","_connect","scriptURL","options","connect","_x","_x2","isIE","test","userAgent","colorPresets","warn","PrefixedConsole","namespace","instance","Constructor","TypeError","_classCallCheck","_namespace","_color","ns","Object","setPrototypeOf","desc","getOwnPropertyNames","forEach","prop","getOwnPropertyDescriptor","create","method","_console2","_len","messages","Array","_key","_console","concat","head","shift","LegacyClient","_constants","_patchXhr","_patchFetch","clientLog","registrations","_this","isLegacy","ready","controller","_registration","patchXHR","patchFetch","promise","script","createElement","src","onload","onerror","body","appendChild","sendMessageRequest","window","action","ACTION","PING","catch","_ref2","_callee2","_context2","unregister","_ref3","_callee3","_context3","ModernClient","_register","_getNewestReg","_init","active","result","_ref4","_callee4","_context4","location","pathname","_autoSyncClient","_this2","addEventListener","_callee5","_context5","t0","$Product","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__tdm_core__","__WEBPACK_IMPORTED_MODULE_2__tdm_ngx_http_client__","endpoint","$Supplier","_debug","keys","defineProperty","enumerable","_defer","_extensify","_eventWaitUntil","_sendMessageRequest","withStack","message","stack","target","timeout","_a","MessageChannel","port1","port2","timer","isFinite","setTimeout","ServiceWorkerMessageError","data","onmessage","clearTimeout","close","request","self","postMessage","_super","call","remoteError","OnMessageMetadata","eventName","__WEBPACK_IMPORTED_MODULE_1__tdm_core_tdm__","allowOn","extend","NgxHttpAppComponent","ngZone","features","filter","file","map","title","description","md","initClient","client","dispose","runOutsideAngular","__WEBPACK_IMPORTED_MODULE_1__http_client__","restoreDB","fetch","url","response","json","JSON","stringify","toString","module","lang","section","ClientBase","_smClient","send","sendAction","_l","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_3__shared_components_markdown_view_markdown_view_component_ngfactory__","__WEBPACK_IMPORTED_MODULE_4__shared_components_markdown_view_markdown_view_component__","__WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__","markdown","__WEBPACK_IMPORTED_MODULE_6__angular_common__","_ck","_v","_co","component","transform","$Order","dispatchFetchEvent","fetchEvt","_createEvent","deferred","Defer","respondWith","fetchEvents","listener","type","useCapture","push","$EmployeeTerritory","__WEBPACK_IMPORTED_MODULE_1__tdm_data__","metaArgs","__WEBPACK_IMPORTED_MODULE_3__client_base__","isExtendingClientBase","WrappedClientMockerServer","args","clientMeta","getMetaFor","__WEBPACK_IMPORTED_MODULE_4__metadata__","serviceMockerClient","__WEBPACK_IMPORTED_MODULE_2__client__","ContextMessageHandler","messageHandlers","init","registerTarget","decorator","handlersMap","canHandle","has","handle","methodName","$Territory","Customer","$Customer","_action","$OrderDetail","patchedFetch","input","Request","_dispatchFetchEvent","nativeFetch","mockerPatched","polyfill","Function","isNativeFetch","native","$Region","_possibleConstructorReturn","ReferenceError","parseResponse","responseType","res","text","parser","clone","blob","arrayBuffer","DOMParser","parseFromString","contentType","headers","replace","getDocumentMIME","t1","_x3","XMLHttpRequest","MockerXHR","EVENTS_LIST","_ExtandableXHR","_temp","_ret","_requestHeaders","Headers","_responseHeaders","_responseMIME","_method","_url","subClass","superClass","constructor","writable","configurable","__proto__","_inherits","setRequestHeader","header","append","getResponseHeader","getAllResponseHeaders","results","seperator","String","fromCharCode","linebreaker","join","overrideMimeType","mime","open","_ExtandableXHR$protot","_len2","rest","_key2","readyState","OPENED","_mockFetch","_processResponse","credentials","withCredentials","set","_setProperty","DONE","status","statusText","_dispatchEvents","_this3","total","loaded","dispatchEvent","extensify","handshake","hasController","reg","skipUpdate","REQUEST_CLAIM","global","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","iterator","returnMethod","record","tryCatch","GenStateSuspendedYield","resultName","nextLoc","_sent","dispatchException","ContinueSentinel","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AsyncIterator","invoke","hasOwn","__await","unwrapped","process","domain","previousPromise","callInvokeWithMethodAndArg","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","i","Op","hasOwnProperty","$Symbol","Symbol","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","displayName","isGeneratorFunction","genFun","ctor","awrap","async","iter","object","reverse","pop","skipTempReset","charAt","slice","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","comparer","handler","evt","removeEventListener","createClient","forceLegacy","_client2","protocol","hostname","_client","en","$event","ad","__WEBPACK_IMPORTED_MODULE_7__node_modules_angular_material_button_typings_index_ngfactory__","__WEBPACK_IMPORTED_MODULE_8__angular_material_button__","__WEBPACK_IMPORTED_MODULE_9__angular_cdk_platform__","__WEBPACK_IMPORTED_MODULE_10__angular_cdk_a11y__","disabled","$Employee","__WEBPACK_IMPORTED_MODULE_2__shared_components_package_welcome_package_welcome_component_ngfactory__","__WEBPACK_IMPORTED_MODULE_3__shared_components_package_welcome_package_welcome_component__","deps","buttonText","buttonLink","__WEBPACK_IMPORTED_MODULE_4__angular_flex_layout__","layout","align","flex","__WEBPACK_IMPORTED_MODULE_5__shared_components_markdown_view_markdown_view_component_ngfactory__","__WEBPACK_IMPORTED_MODULE_6__shared_components_markdown_view_markdown_view_component__","__WEBPACK_IMPORTED_MODULE_7__angular_platform_browser__","__WEBPACK_IMPORTED_MODULE_8__shared_components_feature_list_feature_list_component_ngfactory__","__WEBPACK_IMPORTED_MODULE_9__shared_components_feature_list_feature_list_component__","__WEBPACK_IMPORTED_MODULE_10__node_modules_angular_material_button_typings_index_ngfactory__","__WEBPACK_IMPORTED_MODULE_11__angular_material_button__","__WEBPACK_IMPORTED_MODULE_12__angular_cdk_platform__","__WEBPACK_IMPORTED_MODULE_13__angular_cdk_a11y__","_isServer","placeholder","required","readonly","_ariaDescribedby","errorState","reason","Native","Extendable","_native","checked","_loop","checkLack","mapPrototypeMethods","source","descriptor","nativeFn","$Category","DaoComponent","onMessage","__WEBPACK_IMPORTED_MODULE_0__tdm_core_tdm__","__WEBPACK_IMPORTED_MODULE_1__metadata__","IntroductionComponent","model","__WEBPACK_IMPORTED_MODULE_0__model__","_typeof","label","ɵ1","UIDeveloper","__WEBPACK_IMPORTED_MODULE_3__tdm_ngx_dynamic_forms__","render","vType","validators","__WEBPACK_IMPORTED_MODULE_1__angular_forms__","compose","min","max","Date","getFullYear","ɵ0","__WEBPACK_IMPORTED_MODULE_2__tdm_core__","SetupComponent","NgxHttpAppModule","ClientMetadata","Map","clientMessage","__WEBPACK_IMPORTED_MODULE_2__on_message__","asKeyValArray","_b","single","inherit","g","hadRuntime","indexOf","oldRuntime","PONG","ESTABLISHED","SWClient","installed","DB","__WEBPACK_IMPORTED_MODULE_1__tdm_service_mocker_client__","$Shipper","ResourceControlComponent","__WEBPACK_IMPORTED_MODULE_0__tdm_data__","events$","subscribe","ServiceMockerClient","mockClient","messageHandler","messageEventListener","ports","port","__WEBPACK_IMPORTED_MODULE_1__shared_src_messaging__","__WEBPACK_IMPORTED_MODULE_0_service_mocker_client__"],"mappings":"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","file":"2.f4e8909c3dc238ae02c5.chunk.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NgDAO } from '@tdm/ngx-http-client';\n\nimport { Customer } from '../../client';\n\n@Component({\n  selector: 'ngx-http-options',\n  templateUrl: './options.component.html',\n  styleUrls: [ './options.component.scss' ],\n})\nexport class OptionsComponent {\n  constructor(private ngDao: NgDAO) { }\n\n  click() {\n    this.ngDao.get(Customer).findById('ALFKI', { /* SPECIFIC OPTIONS */\n      urlParams: {\n        someQueryKey: 'someQueryValue'\n      }\n    })\n      .then( c => {\n        console.log(c);\n      });\n  }\n\n  /* @tdm-ignore:* */\n  code: any = System.import(/* webpackChunkName: \"NgxHttpOptionsComponent\" */ './__tdm-code__.ts'); // tslint:disable-line\n  static tutorial = {\n    id: 'options',\n    name: 'Options'\n  };\n  /* @tdm-ignore:* */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/5-options/options.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-http-creating-a-model',\n  templateUrl: './creating-a-model.component.html',\n  styleUrls: [ './creating-a-model.component.scss' ],\n})\nexport class CreatingAModelComponent {\n  /* @tdm-ignore:* */\n  code: any = System.import(/* webpackChunkName: \"NgxHttpCreatingAModelComponent\" */ './__tdm-code__.ts'); // tslint:disable-line\n  static tutorial = {\n    id: 'creating-a-model',\n    name: 'Creating A Model'\n  };\n  /* @tdm-ignore:* */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/3-creating-a-model/creating-a-model.component.ts","'use strict';\n\nexports.__esModule = true;\nexports.getNewestReg = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Get newest service worker registration\n *\n * @return {Promise<ServiceWorkerRegistration>}\n */\n/* istanbul ignore next: unable to test it on single run */\nvar getNewestReg = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n    var _navigator, serviceWorker, registration, newWorker;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _navigator = navigator, serviceWorker = _navigator.serviceWorker;\n\n\n            updateLog.color('darkorchid').info('checking for updates');\n\n            _context.next = 4;\n            return serviceWorker.getRegistration();\n\n          case 4:\n            registration = _context.sent;\n\n            if (registration) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('no active service worker registration is found');\n\n          case 7:\n            _context.next = 9;\n            return registration.update();\n\n          case 9:\n            newWorker = registration.installing || registration.waiting;\n\n            if (!newWorker) {\n              _context.next = 16;\n              break;\n            }\n\n            updateLog.info('installing updates');\n\n            // wait until worker is activated\n            _context.next = 14;\n            return (0, _utils.eventWaitUntil)(newWorker, 'statechange', function () {\n              return newWorker.state === 'activated';\n            });\n\n          case 14:\n            _context.next = 17;\n            break;\n\n          case 16:\n            updateLog.color('lightseagreen').info('already up-to-date');\n\n          case 17:\n            return _context.abrupt('return', registration);\n\n          case 18:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getNewestReg() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _utils = require('../../utils/');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar updateLog = _utils.debug.scope('update');exports.getNewestReg = getNewestReg;\n//# sourceMappingURL=get-newest-reg.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/modern/get-newest-reg.js\n// module id = 0eeZ\n// module chunks = 2","'use strict';\n\nexports.__esModule = true;\n/**\n * Create custom event\n *\n * @param  {string} name event name\n * @return {Event}\n */\n/* istanbul ignore next */\nfunction createEvent(name) {\n  try {\n    return new Event(name);\n  } catch (e) {\n    var event = document.createEvent('Event');\n    event.initEvent(name, false, false);\n    return event;\n  }\n}\n\n// Don't use `export function createEvent() {}`\n// because `istanbul ignore next` has issue with ES6 exports\n// <https://github.com/gotwarlost/istanbul/issues/762>\nexports.createEvent = createEvent;\n//# sourceMappingURL=create-event.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/legacy/create-event.js\n// module id = 0jhs\n// module chunks = 2","import { NgModule } from '@angular/core';\n\nimport { SharedModule, TutorialService, TutoriableComponent } from '@shared';\n\nimport { IntroductionComponent } from './1-introduction';\nimport { SetupComponent } from './2-setup';\nimport { CreatingAModelComponent } from './3-creating-a-model';\nimport { DaoComponent } from './4-dao';\nimport { OptionsComponent } from './5-options';\nimport { ResourceControlComponent } from './5-resource-control';\n\nconst TUTORIALS: Array<TutoriableComponent<any>> = [\n  IntroductionComponent,\n  SetupComponent,\n  CreatingAModelComponent,\n  DaoComponent,\n  OptionsComponent,\n  ResourceControlComponent\n];\n\nconst COMPONENTS = [\n  TUTORIALS\n];\n\nfunction isTutorial(value: any): value is TutoriableComponent<any> {\n  return !!(value.tutorial && value.tutorial.name && value.tutorial.id);\n}\n\n@NgModule({\n  declarations: [ COMPONENTS ],\n  imports: [\n    SharedModule\n  ],\n  providers: [ TutorialService ],\n  exports: [ COMPONENTS ],\n  entryComponents: [\n    TUTORIALS\n  ]\n})\nexport class NgxHttpTutorialsModule {\n  constructor(tutorialService: TutorialService) {\n    for ( let c of TUTORIALS ) {\n      if ( isTutorial(c) ) {\n        tutorialService.addTutorial(c);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/module.ts","'use strict';\n\nexports.__esModule = true;\nexports.register = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Register service worker\n *\n * @param  {string}                             scriptURL\n * @param  {ServiceWorkerRegisterOptions}       options\n * @return {Promise<ServiceWorkerRegistration>}\n */\nvar register = exports.register = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee(scriptURL, options) {\n    var _navigator, serviceWorker;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _navigator = navigator, serviceWorker = _navigator.serviceWorker;\n            _context.next = 3;\n            return serviceWorker.register(scriptURL, options);\n\n          case 3:\n            return _context.abrupt('return', (0, _connect.connect)());\n\n          case 4:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function register(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _connect = require('./connect');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n//# sourceMappingURL=register.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/modern/register.js\n// module id = 0y6h\n// module chunks = 2","'use strict';\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar isIE = /Trident|Edge/.test(navigator.userAgent);\n\nvar defaultColor = 'dodgerblue';\n\nvar colorPresets = {\n  log: defaultColor,\n  info: defaultColor,\n  warn: 'goldenrod',\n  error: 'crimson'\n};\n\nvar PrefixedConsole = exports.PrefixedConsole = function () {\n  /**\n   * Logger namespace\n   *\n   * @private\n   * @type {string}\n   */\n  function PrefixedConsole() {\n    var namespace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'mocker';\n    var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : colorPresets.log;\n\n    _classCallCheck(this, PrefixedConsole);\n\n    this._namespace = 'mocker';\n    this._color = colorPresets.log;\n\n    this._namespace = namespace;\n    this._color = color;\n  }\n\n  /**\n   * Set logger color, returns new PrefixedConsole\n   *\n   * @param  {string} c Color string\n   * @return {PrefixedConsole}\n   */\n\n\n  /**\n   * Logger color\n   *\n   * @private\n   * @type {string}\n   */\n\n\n  PrefixedConsole.prototype.color = function color(c) {\n    return new PrefixedConsole(this._namespace, c);\n  };\n\n  /**\n   * Set logger namespace, returns new PrefixedConsole\n   *\n   * @param  {string} ns Namespace\n   * @return {PrefixedConsole}\n   */\n\n\n  PrefixedConsole.prototype.scope = function scope(ns) {\n    return new PrefixedConsole(this._namespace + ':' + ns, this._color);\n  };\n\n  return PrefixedConsole;\n}();\n\nvar debug = exports.debug = new PrefixedConsole();\n\n/* istanbul ignore else */\n// inherit console methods\nif (typeof Object.setPrototypeOf === 'function') {\n  Object.setPrototypeOf(PrefixedConsole.prototype, console);\n} else {\n  var desc = {};\n\n  Object.getOwnPropertyNames(PrefixedConsole.prototype).forEach(function (prop) {\n    desc[prop] = Object.getOwnPropertyDescriptor(PrefixedConsole.prototype, prop);\n  });\n\n  PrefixedConsole.prototype = Object.create(console, desc);\n}\n\n['log', 'info', 'warn', 'error'].forEach(function (method) {\n  PrefixedConsole.prototype[method] = function logger() {\n    var _console2;\n\n    var _namespace = this._namespace,\n        _color = this._color;\n\n    /* istanbul ignore if */\n\n    for (var _len = arguments.length, messages = Array(_len), _key = 0; _key < _len; _key++) {\n      messages[_key] = arguments[_key];\n    }\n\n    if (isIE) {\n      var _console;\n\n      return (_console = console)[method].apply(_console, ['[' + _namespace + ']'].concat(messages));\n    }\n\n    var head = '%c[' + _namespace + ']%c';\n\n    if (/%c/.test(messages[0])) {\n      head = head + ' ' + messages.shift();\n    }\n\n    var color = _color === defaultColor ? colorPresets[method] : _color;\n\n    (_console2 = console)[method].apply(_console2, [head, 'color: ' + color, 'color: #000'].concat(messages));\n  };\n});\n//# sourceMappingURL=debug.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/debug.js\n// module id = 1ZRj\n// module chunks = 2","'use strict';\n\nexports.__esModule = true;\nexports.LegacyClient = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _utils = require('../../utils/');\n\nvar _constants = require('../../constants/');\n\nvar _patchXhr = require('./patch-xhr');\n\nvar _patchFetch = require('./patch-fetch');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar clientLog = _utils.debug.scope('legacy');\nvar registrations = {};\n\nvar LegacyClient = exports.LegacyClient = function () {\n\n  /**\n   * Points to currently activated ServiceWorker object.\n   * Stays null when running in legacy mode.\n   *\n   * @readonly\n   * @type {null}\n   */\n\n  /**\n   * Indicates which mode current client is running on.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n  function LegacyClient(scriptURL) {\n    var _this = this;\n\n    _classCallCheck(this, LegacyClient);\n\n    this.isLegacy = true;\n    this.ready = null;\n    this.controller = null;\n    this._registration = null;\n\n    (0, _patchXhr.patchXHR)();\n    (0, _patchFetch.patchFetch)();\n\n    var promise = null;\n\n    // avoid duplications\n    if (registrations[scriptURL]) {\n      promise = registrations[scriptURL];\n    } else {\n      registrations[scriptURL] = promise = new Promise(function (resolve, reject) {\n        var script = document.createElement('script');\n        script.src = scriptURL;\n        script.onload = resolve;\n        script.onerror = reject;\n\n        document.body.appendChild(script);\n      });\n    }\n\n    /* istanbul ignore next */\n    this.ready = promise.then(function () {\n      return (0, _utils.sendMessageRequest)(window, {\n        action: _constants.ACTION.PING\n      });\n    }).then(function () {\n      clientLog.info('connection established');\n      return _this._registration;\n    }).catch(function (error) {\n      // `ready` should never be rejected\n      clientLog.error('bootstrap failed', error);\n    });\n  }\n\n  /**\n   * Update registration, this method has no effect in legacy mode\n   *\n   * @return {Promise<null>}\n   */\n\n\n  /**\n   * Defines whether a client has connected to mocker server.\n   * Resolves with `null` as there're actually no registrations\n   *\n   * @readonly\n   * @type {Promise<null>}\n   */\n\n\n  LegacyClient.prototype.update = function () {\n    var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt('return', Promise.resolve(this._registration));\n\n            case 1:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function update() {\n      return _ref.apply(this, arguments);\n    }\n\n    return update;\n  }();\n\n  /**\n   * Get current registration, resolved with `null` in legacy mode\n   *\n   * @return {Promise<null>}\n   */\n\n\n  LegacyClient.prototype.getRegistration = function () {\n    var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2() {\n      return _regenerator2.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt('return', Promise.resolve(this._registration));\n\n            case 1:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getRegistration() {\n      return _ref2.apply(this, arguments);\n    }\n\n    return getRegistration;\n  }();\n\n  /* istanbul ignore next */\n  /**\n   * Unregister mocker, this method has no effect in legacy mode\n   *\n   * @return {Promise<false>}\n   */\n\n\n  LegacyClient.prototype.unregister = function () {\n    var _ref3 = _asyncToGenerator(_regenerator2.default.mark(function _callee3() {\n      return _regenerator2.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _utils.debug.scope('legacy').warn('mocker in legacy mode can\\'t be unregistered');\n\n              return _context3.abrupt('return', false);\n\n            case 2:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function unregister() {\n      return _ref3.apply(this, arguments);\n    }\n\n    return unregister;\n  }();\n\n  return LegacyClient;\n}();\n//# sourceMappingURL=client.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/legacy/client.js\n// module id = 21Xv\n// module chunks = 2","'use strict';\n\nexports.__esModule = true;\nexports.ModernClient = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _utils = require('../../utils/');\n\nvar _register = require('./register');\n\nvar _connect = require('./connect');\n\nvar _getNewestReg = require('./get-newest-reg');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ModernClient = exports.ModernClient = function () {\n\n  /**\n   * Defines whether a client has connected to mocker server.\n   *\n   * @readonly\n   * @type {Promise<ServiceWorkerRegistration>}\n   */\n  function ModernClient(scriptURL) {\n    var _this = this;\n\n    _classCallCheck(this, ModernClient);\n\n    this.isLegacy = false;\n    this.ready = null;\n    this.controller = null;\n\n    /* istanbul ignore next */\n    this.ready = this._init(scriptURL).then(function (registration) {\n      _this.controller = registration.active;\n      return registration;\n    }).catch(function (error) {\n      _utils.debug.error('mocker initialization failed: ', error);\n    });\n  }\n\n  /**\n   * Update the service worker registration immediately\n   *\n   * @return {Promise<ServiceWorkerRegistration>}\n   */\n\n\n  /**\n   * Points to currently activated ServiceWorker object.\n   *\n   * @readonly\n   * @type {ServiceWorker}\n   */\n\n  /**\n   * Indicates which mode current client is running on.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n\n\n  ModernClient.prototype.update = function () {\n    var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt('return', (0, _getNewestReg.getNewestReg)());\n\n            case 1:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function update() {\n      return _ref.apply(this, arguments);\n    }\n\n    return update;\n  }();\n\n  /**\n   * Get current service worker registration.\n   *\n   * @return {Promise<ServiceWorkerRegistration>}\n   */\n\n\n  ModernClient.prototype.getRegistration = function () {\n    var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2() {\n      return _regenerator2.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt('return', this.ready);\n\n            case 1:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getRegistration() {\n      return _ref2.apply(this, arguments);\n    }\n\n    return getRegistration;\n  }();\n\n  /* istanbul ignore next: don't unregister sw in tests */\n  /**\n   * Unregister current service worker registration,\n   * call this method will invoke `ServiceWorkerRegistration.unregister()` method when possible.\n   *\n   * @return {Promise<boolean>}\n   */\n\n\n  ModernClient.prototype.unregister = function () {\n    var _ref3 = _asyncToGenerator(_regenerator2.default.mark(function _callee3() {\n      var registration, result;\n      return _regenerator2.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.getRegistration();\n\n            case 2:\n              registration = _context3.sent;\n              _context3.next = 5;\n              return registration.unregister();\n\n            case 5:\n              result = _context3.sent;\n\n\n              if (!result) {\n                // tslint:disable-next-line max-line-length\n                _utils.debug.warn('this service worker has already been unregistered, you may need to close all relative tabs to remove it');\n              }\n\n              return _context3.abrupt('return', result);\n\n            case 8:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function unregister() {\n      return _ref3.apply(this, arguments);\n    }\n\n    return unregister;\n  }();\n\n  /**\n   * Init mocker\n   *\n   * @private\n   * @param  {string} scriptURL\n   * @return {Promise<ServiceWorkerRegistration>}\n   */\n\n\n  ModernClient.prototype._init = function () {\n    var _ref4 = _asyncToGenerator(_regenerator2.default.mark(function _callee4(scriptURL) {\n      var registration;\n      return _regenerator2.default.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return (0, _register.register)(scriptURL, {\n                scope: location.pathname\n              });\n\n            case 2:\n              registration = _context4.sent;\n\n\n              this._autoSyncClient();\n\n              return _context4.abrupt('return', registration);\n\n            case 5:\n            case 'end':\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function _init(_x) {\n      return _ref4.apply(this, arguments);\n    }\n\n    return _init;\n  }();\n\n  /**\n   * Synchronize mocker controller when sw controller changed\n   *\n   * @private\n   */\n\n\n  ModernClient.prototype._autoSyncClient = function _autoSyncClient() {\n    var _this2 = this;\n\n    var _navigator = navigator,\n        serviceWorker = _navigator.serviceWorker;\n\n\n    var updateLog = _utils.debug.scope('update');\n\n    /* istanbul ignore next: won't occur in tests */\n    serviceWorker.addEventListener('controllerchange', _asyncToGenerator(_regenerator2.default.mark(function _callee5() {\n      var registration;\n      return _regenerator2.default.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return (0, _connect.connect)(true);\n\n            case 3:\n              registration = _context5.sent;\n\n              _this2.controller = registration.active;\n\n              updateLog.color('crimson').warn('mocker updated, reload your requests to take effect');\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5['catch'](0);\n\n              updateLog.error('connecting to new service worker failed', _context5.t0);\n\n            case 11:\n            case 'end':\n              return _context5.stop();\n          }\n        }\n      }, _callee5, _this2, [[0, 8]]);\n    })));\n  };\n\n  return ModernClient;\n}();\n//# sourceMappingURL=client.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/modern/client.js\n// module id = 2bYr\n// module chunks = 2","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'products/:id?'\n})\nclass $Product implements modelContract.Product {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  ProductID: number;\n\n  @Prop()\n  ProductName: string;\n\n  @Prop()\n  SupplierID: number;\n\n  @Prop()\n  CategoryID: number;\n\n  @Prop()\n  QuantityPerUnit: string;\n\n  @Prop()\n  UnitPrice: number;\n\n  @Prop()\n  UnitsInStock: number;\n\n  @Prop()\n  UnitsOnOrder: number;\n\n  @Prop()\n  ReorderLevel: number;\n\n  @Prop()\n  Discontinued: number;\n\n}\n\nexport const Product = ActiveRecord($Product);\nexport type Product = ActiveRecord<$Product>;\n\n/* When moving to TS 2.8+\nexport const Product: TypeOfActiveRecord<typeof $Product> = <any> $Product;\nexport type Product = InstanceType<typeof Product>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/models/product.ts","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'suppliers/:id?'\n})\nclass $Supplier implements modelContract.Supplier {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  SupplierID: number;\n\n  @Prop()\n  CompanyName: string;\n\n  @Prop()\n  ContactName: string;\n\n  @Prop()\n  ContactTitle: string;\n\n  @Prop()\n  Address: string;\n\n  @Prop()\n  City: string;\n\n  @Prop()\n  Region: string;\n\n  @Prop()\n  PostalCode: string;\n\n  @Prop()\n  Country: string;\n\n  @Prop()\n  Phone: string;\n\n  @Prop()\n  Fax: string;\n\n  @Prop()\n  HomePage: string;\n\n}\n\nexport const Supplier = ActiveRecord($Supplier);\nexport type Supplier = ActiveRecord<$Supplier>;\n\n/* When moving to TS 2.8+\nexport const Supplier: TypeOfActiveRecord<typeof $Supplier> = <any> $Supplier;\nexport type Supplier = InstanceType<typeof Supplier>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/models/supplier.ts","'use strict';\n\nexports.__esModule = true;\n\nvar _debug = require('./debug');\n\nObject.keys(_debug).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _debug[key];\n    }\n  });\n});\n\nvar _defer = require('./defer');\n\nObject.keys(_defer).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _defer[key];\n    }\n  });\n});\n\nvar _extensify = require('./extensify');\n\nObject.keys(_extensify).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extensify[key];\n    }\n  });\n});\n\nvar _eventWaitUntil = require('./event-wait-until');\n\nObject.keys(_eventWaitUntil).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _eventWaitUntil[key];\n    }\n  });\n});\n\nvar _sendMessageRequest = require('./send-message-request');\n\nObject.keys(_sendMessageRequest).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _sendMessageRequest[key];\n    }\n  });\n});\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/index.js\n// module id = 6DF8\n// module chunks = 2","\nexport interface ClientProtocol { }\n\nexport interface ServerProtocol { }\n\nexport interface MessageResponse<Req = any, Res = any> {\n  request: Req;\n  data: Res;\n}\n\nexport type ClientRequest<T extends keyof ClientProtocol = keyof ClientProtocol> = ClientProtocol[T]['request'];\nexport type ServerResponse<T extends keyof ClientProtocol = keyof ClientProtocol> = ClientProtocol[T]['response']; // tslint:disable-line\n\nexport type ServerRequest<T extends keyof ServerProtocol = keyof ServerProtocol> = ServerProtocol[T]['request'];\nexport type ClientResponse<T extends keyof ServerProtocol = keyof ServerProtocol> = ServerProtocol[T]['response']; // tslint:disable-line\n\nexport type ClientPostMessageEvent<T extends keyof ClientProtocol = keyof ClientProtocol>\n  = MessageResponse<ClientProtocol[T]['request'], ClientProtocol[T]['response']>;\n\nexport type ServerPostMessageEvent<T extends keyof ServerProtocol = keyof ServerProtocol>\n  = MessageResponse<ServerProtocol[T]['request'], ServerProtocol[T]['response']>;\n\nexport class ServiceWorkerMessageError<T> extends Error {\n  name = 'ServiceWorkerMessageError';\n  remoteError?: ServiceWorkerRemoteError;\n  request: T;\n\n  private constructor() {\n    super();\n  }\n\n  static create<T>(request: T, message: string, remoteError?: any): ServiceWorkerMessageError<T> {\n    // tslint:disable-next-line:no-use-before-declare\n    const err = new ServiceWorkerMessageError<T>();\n    Object.setPrototypeOf(err, ServiceWorkerMessageError.prototype);\n    err.request = request;\n    if (remoteError) {\n      err.remoteError = remoteError;\n      err.message = `${err.name}: ${message}\\n${remoteError.name}: ${remoteError.message}`;\n      if (remoteError.stack) {\n        err.stack = remoteError.stack;\n      }\n    } else {\n      err.message = message;\n    }\n    return err;\n  }\n}\n\nexport interface ServiceWorkerRemoteError {\n  name: string;\n  message: string;\n  stack?: any;\n}\n\nexport function postError(error: Error, withStack: boolean = true): { error: ServiceWorkerRemoteError } {\n  const e = {\n    error: {\n      name: error.name,\n      message: error.message\n    } as ServiceWorkerRemoteError\n  };\n  if (withStack) {\n    e.error.stack = error.stack;\n  }\n  return e;\n}\n\nexport function sendMessageRequest<T extends keyof ServerProtocol>(\n  target: Window | ServiceWorker | Client,\n  message: { action: T, data: ServerRequest<T> },\n  timeout?: number\n): Promise<ServerPostMessageEvent<T>>;\nexport function sendMessageRequest<T extends keyof ClientProtocol>(\n  target: Window | ServiceWorker | Client,\n  message: { action: T, data: ClientRequest<T> },\n  timeout?: number\n): Promise<ClientPostMessageEvent<T>>;\nexport function sendMessageRequest<T extends keyof (ServerProtocol | ClientProtocol)>(\n  target: Window | ServiceWorker | Client,\n  message: { action: T, data: ClientRequest<T> | ServerRequest<T> },\n  timeout = 3 * 1e3\n): Promise<ClientPostMessageEvent<T> | ServerPostMessageEvent<T>> {\n\n  const { port1, port2 } = new MessageChannel();\n\n  return new Promise((resolve, reject) => {\n    const timer = isFinite(timeout) && setTimeout(() => {\n      reject(ServiceWorkerMessageError.create(message.data, `Service worker message timeout.`));\n    }, timeout);\n\n    port1.onmessage = ({ data }) => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      // avoid high transient memory usage, see\n      // https://html.spec.whatwg.org/multipage/comms.html#ports-and-garbage-collection\n      port1.close();\n      port2.close();\n\n      if (data && data.error) {\n        reject(ServiceWorkerMessageError.create(message, `Service worker remote error.`, data.error));\n      } else {\n        resolve({ data, request: <any> message.data });\n      }\n    };\n\n    if (target === self.window) {\n      // posting message to self => legacy mode\n      // add `origin` param to `window.postMessage(message, targetOrigin, [transfer])`\n      target.postMessage(message, '*', [ port2 ]);\n    } else {\n      (target as ServiceWorker).postMessage(message, [ port2 ]);\n    }\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/shared/src/messaging.ts","import { BaseMetadata, MetaClass, DecoratorInfo } from '@tdm/core/tdm';\nimport { ServerProtocol } from '../../../shared/src/index';\n\n@MetaClass<string, OnMessageMetadata>({\n  allowOn: ['member'],\n  extend: 'mergeMap'\n})\nexport class OnMessageMetadata extends BaseMetadata {\n  constructor(public eventName: keyof ServerProtocol, info: DecoratorInfo) {\n    super(info);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/metadata/on-message.ts","import { Component, NgZone } from '@angular/core';\nimport { TdmFeatureListItem } from '@shared';\n\nimport { SWClient } from '@http/client';\n\n@Component({\n  selector: 'ngx-http-app',\n  styleUrls: [ './ngx-http-app.component.scss' ],\n  templateUrl: './ngx-http-app.component.html'\n})\nexport class NgxHttpAppComponent {\n  code: any = require('./__tdm-code__.ts');\n  features: TdmFeatureListItem[] = this.code\n    .filter( c => c.file === 'FEATURES.md')\n    .map( c => {\n      return {\n        title: c.title,\n        description: c.code,\n        md: true\n      };\n    });\n\n  private client: SWClient;\n\n  constructor(private ngZone: NgZone) { }\n\n  initClient() {\n    if (this.client) {\n      this.client.dispose();\n    }\n    this.ngZone.runOutsideAngular(() => {\n      const client = this.client = new SWClient();\n      client.ready\n        .then( () => console.log('CLIENT CREATED') )\n        .catch( err => console.error(err) );\n    });\n  }\n\n  restoreDB() {\n    if (this.client) {\n      this.client.restoreDB()\n        .then(data => console.log('DB RESTORED') )\n        .catch( err => console.error(err) );\n    }\n  }\n\n  fetch(url: string, method: string = 'GET') {\n    fetch(url, { method })\n      .then( response => response.json() )\n      .then( response => {\n        console.log(`URL: ${url}, METHOD: ${method}, RESPONSE: ${JSON.stringify(response, null, 2)}`);\n      })\n      .catch( err => {\n        console.log(`URL: ${url}, METHOD: ${method}, ERR: ${err.toString()}`);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/ngx-http-app/ngx-http-app.component.ts","module.exports = [{\"file\":\"FEATURES.md\",\"lang\":\"md\",\"section\":\"DAO\",\"code\":\"<p>Supports Data Access Object pattern out of the box</p>\\n\",\"title\":\"DAO\"},{\"file\":\"FEATURES.md\",\"lang\":\"md\",\"section\":\"ActiveRecord\",\"code\":\"<p>Support&#39;s Active Record (opt-in, via plugin) with full type support for models.</p>\\n\",\"title\":\"Active Record\"},{\"file\":\"FEATURES.md\",\"lang\":\"md\",\"section\":\"RXJS\",\"code\":\"<p>Support&#39;s RXJS streams (opt-in, via plugin)</p>\\n\",\"title\":\"RXJS\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/demo/modules/@http/ngx-http-app/__tdm-code__.ts\n// module id = 9DA8\n// module chunks = 2","import { ClientProtocol, ClientRequest, ClientPostMessageEvent } from '../../shared/src/index';\nimport { ServiceMockerClient } from './client';\n\nexport abstract class ClientBase {\n  get ready(): Promise<void> {\n    return this._smClient.ready;\n  }\n\n  private _smClient: ServiceMockerClient;\n\n  /**\n   * A lifecycle hook fired when the client inits\n   */\n  init?(): void;\n\n  dispose(): void {\n    this._smClient.dispose();\n  }\n\n  send<T extends keyof ClientProtocol>(action: T,\n                                       data: ClientRequest<T>,\n                                       timeout?: number): Promise<ClientPostMessageEvent<T>> {\n    return this._smClient.sendAction(action, data, timeout);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/client-base.ts","<tdm-markdown-view [markdown]=\"code | async | tdmCode:[{file: 'README.md'}]:true\"></tdm-markdown-view>\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/1-introduction/introduction.component.html","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'orders/:id?'\n})\nclass $Order implements modelContract.Order {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  OrderID: number;\n\n  @Prop()\n  CustomerID: string;\n\n  @Prop()\n  EmployeeID: number;\n\n  @Prop()\n  OrderDate: string;\n\n  @Prop()\n  RequiredDate: string;\n\n  @Prop()\n  ShippedDate: string;\n\n  @Prop()\n  ShipVia: number;\n\n  @Prop()\n  Freight: number;\n\n  @Prop()\n  ShipName: string;\n\n  @Prop()\n  ShipAddress: string;\n\n  @Prop()\n  ShipCity: string;\n\n  @Prop()\n  ShipRegion: string;\n\n  @Prop()\n  ShipPostalCode: string;\n\n  @Prop()\n  ShipCountry: string;\n\n}\n\nexport const Order = ActiveRecord($Order);\nexport type Order = ActiveRecord<$Order>;\n\n/* When moving to TS 2.8+\nexport const Order: TypeOfActiveRecord<typeof $Order> = <any> $Order;\nexport type Order = InstanceType<typeof Order>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/models/order.ts","'use strict';\n\nexports.__esModule = true;\nexports.dispatchFetchEvent = dispatchFetchEvent;\n\nvar _utils = require('../../utils/');\n\nvar _createEvent = require('./create-event');\n\nvar fetchEvents = [];\nvar addEventListener = self.addEventListener.bind(self);\n\n// handle fetch events ourselves\nself.addEventListener = function (type, listener, useCapture) {\n  if (type === 'fetch') {\n    fetchEvents.push(listener);\n  } else {\n    addEventListener(type, listener, useCapture);\n  }\n};\n\n/**\n * Dispatch fetch event on GlobalScope in legacy mode.\n * Resolved with `null` if `event.respondWith` isn't called.\n *\n * @param  {Request} request Request object\n * @return {Promise<Response>}\n */\nfunction dispatchFetchEvent(request) {\n  var fetchEvt = (0, _createEvent.createEvent)('fetch');\n  var deferred = new _utils.Defer();\n\n  fetchEvt.request = request;\n\n  fetchEvt.respondWith = function (response) {\n    if (deferred.done) {\n      // tslint:disable-next-line max-line-length\n      throw new Error('Failed to execute \\'respondWith\\' on \\'FetchEvent\\': The fetch event has already been responded to.');\n    }\n\n    deferred.resolve(response);\n  };\n\n  fetchEvents.forEach(function (listener) {\n    listener(fetchEvt);\n  });\n\n  // `event.respondWith` wasn't called\n  if (!deferred.done) {\n    deferred.resolve(null);\n  }\n\n  return deferred.promise;\n}\n//# sourceMappingURL=dispatch-fetch-event.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/legacy/dispatch-fetch-event.js\n// module id = K6Tf\n// module chunks = 2","import { Identity, Prop, Constructor } from '@tdm/data';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'employeeTerritories/:id?'\n})\nclass $EmployeeTerritory implements modelContract.EmployeeTerritory {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  EmployeeTerritory: number;\n\n  @Prop()\n  EmployeeID: number;\n\n  @Prop()\n  TerritoryID: number;\n\n}\n\nexport const EmployeeTerritory = ActiveRecord($EmployeeTerritory);\nexport type EmployeeTerritory = ActiveRecord<$EmployeeTerritory>;\n\n/* When moving to TS 2.8+\nexport const EmployeeTerritory: TypeOfActiveRecord<typeof $EmployeeTerritory> = <any> $EmployeeTerritory;\nexport type EmployeeTerritory = InstanceType<typeof EmployeeTerritory>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/models/employee-territory.ts","import { stringify, isFunction, MetaClass, Constructor, targetStore, getBaseClass } from '@tdm/core/tdm';\n\nimport { ClientResponse, ServerProtocol, ServerRequest } from '../../../shared/src/index';\nimport { ServiceMockerClient, MessageHandler } from '../client';\nimport { ClientBase } from '../client-base';\nimport { ClientMetadata, ClientMetadataArgs } from '../metadata';\n\nconst client = MetaClass.decorator(ClientMetadata, true, 'class');\n\nclass ContextMessageHandler implements MessageHandler  {\n\n  constructor(private instance: any, private handlersMap: Map<string, string>) { }\n\n  canHandle(name: keyof ServerProtocol): boolean {\n    return this.handlersMap.has(name);\n  }\n\n  handle<T extends keyof ServerProtocol>(action: T, data: ServerRequest<T>): Promise<ClientResponse<T>> {\n    const methodName = this.handlersMap.get(action);\n    return this.instance[methodName](data);\n  }\n}\n\nfunction isExtendingClientBase(target: Constructor<any>): boolean {\n  while (target) {\n    if (target === ClientBase) {\n      return true;\n    }\n    target = <any> getBaseClass(target);\n  }\n  return false;\n}\n\nexport function Client(metaArgs?: ClientMetadataArgs): <T extends Constructor<ClientBase>>(target: T) => T | void {\n  return <T extends Constructor<ClientBase>> (target: T) => {\n\n    if (!isExtendingClientBase(target)) {\n      throw new Error(`Class ${stringify(target)} decorated with \"@Client()\" must extend \"ClientBase\"`);\n    }\n\n    class WrappedClientMockerServer extends (target as T) { // tslint:disable-line:max-classes-per-file\n      constructor(...args: any[]) {\n        super(...args);\n        const clientMeta = targetStore.getMetaFor(target, ClientMetadata, true);\n        const serviceMockerClient = ServiceMockerClient\n          .create(new ContextMessageHandler(this, clientMeta.messageHandlers), clientMeta.scriptURL);\n\n        Object.defineProperty(this, '_smClient', { value: serviceMockerClient });\n        if (isFunction(this.init)) {\n          this.init();\n        }\n      }\n    }\n    targetStore.registerTarget(WrappedClientMockerServer);\n    targetStore.extend(target, WrappedClientMockerServer);\n    target = <any> client(metaArgs)(WrappedClientMockerServer) || WrappedClientMockerServer;\n    return target;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/decorator/client.ts","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'territories/:id?'\n})\nclass $Territory implements modelContract.Territory {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  TerritoryID: number;\n\n  @Prop()\n  TerritoryDescription: string;\n\n  @Prop()\n  RegionID: number;\n\n}\n\nexport const Territory = ActiveRecord($Territory);\nexport type Territory = ActiveRecord<$Territory>;\n\n/* When moving to TS 2.8+\nexport const Territory: TypeOfActiveRecord<typeof $Territory> = <any> $Territory;\nexport type Territory = InstanceType<typeof Territory>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/models/territory.ts","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, TypeOfActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'customers/:id?'\n})\nclass $Customer extends ActiveRecord() implements modelContract.Customer {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  CustomerID: string;\n\n  @Prop()\n  CompanyName: string;\n\n  @Prop()\n  ContactName: string;\n\n  @Prop()\n  ContactTitle: string;\n\n  @Prop()\n  Address: string;\n\n  @Prop()\n  City: string;\n\n  @Prop()\n  Region: string;\n\n  @Prop()\n  PostalCode: string;\n\n  @Prop()\n  Country: string;\n\n  @Prop()\n  Phone: string;\n\n  @Prop()\n  Fax: string;\n}\n\nexport const Customer: TypeOfActiveRecord<$Customer, typeof $Customer> = <any> $Customer;\nexport type Customer = ActiveRecord<$Customer>;\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/models/customer.ts","'use strict';\n\nexports.__esModule = true;\n\nvar _action = require('./action');\n\nObject.keys(_action).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _action[key];\n    }\n  });\n});\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/constants/index.js\n// module id = NWEN\n// module chunks = 2","import { Identity, Prop, Constructor } from '@tdm/data';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'orderDetails/:id?'\n})\nclass $OrderDetail implements modelContract.OrderDetail {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  OrderDetailID: string;\n\n  @Prop()\n  OrderID: number;\n\n  @Prop()\n  ProductID: string;\n\n  @Prop()\n  UnitPrice: string;\n\n  @Prop()\n  Quantity: string;\n\n  @Prop()\n  Discount: string;\n\n}\n\nexport const OrderDetail = ActiveRecord($OrderDetail);\nexport type OrderDetail = ActiveRecord<$OrderDetail>;\n\n/* When moving to TS 2.8+\nexport const OrderDetail: TypeOfActiveRecord<typeof $OrderDetail> = <any> $OrderDetail;\nexport type OrderDetail = InstanceType<typeof OrderDetail>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/models/order-detail.ts","'use strict';\n\nexports.__esModule = true;\nexports.patchFetch = patchFetch;\n\nvar _dispatchFetchEvent = require('./dispatch-fetch-event');\n\nfunction patchFetch() {\n  /* istanbul ignore if */\n  if (!self.fetch) {\n    throw new Error('fetch is required for legacy mode');\n  }\n\n  // don't patch polyfills\n  if (!isNativeFetch()) {\n    return;\n  }\n\n  // fetch should be called within Window context\n  var nativeFetch = self.fetch.bind(self);\n\n  function patchedFetch(input, init) {\n    var request = new Request(input, init);\n\n    return (0, _dispatchFetchEvent.dispatchFetchEvent)(request).then(function (response) {\n      if (response) {\n        // `event.respondWith` called\n        // resolve with mock response\n        return response;\n      } else {\n        // fetch real response\n        return nativeFetch(request);\n      }\n    });\n  }\n\n  // marked with `mockerPatched` symbol\n  patchedFetch.mockerPatched = true;\n  // keep a native reference\n  patchedFetch.native = nativeFetch;\n\n  self.fetch = patchedFetch;\n}\n\n/**\n * Check `self.fetch` is (possible) a native one or a polyfill\n *\n * @return {boolean}\n */\n/**\n * Patch native `fetch` interface\n *\n * Notes:\n * - Why we should patch native `fetch`:\n *   Although all the environments that support service worker will support fetch too,\n *   but there are still possiblities that cause mocker runs in legacy mode,\n *   for example, user starts a remote access with `http://192.168.1.129:3000`,\n *   mocker will bootstrap in legacy mode because service worker can only be regiestered\n *   in secure pages.\n *   In case of this situation, we should patch up native fetch with a custom fetch event.\n *\n * - Don't patch fetch polyfills that are implementing with `XMLHttpRequest`:\n *   Since we've patched up native `XMLHttpRequest`,\n *   patching a fetch polyfill may cause an infinite loop:\n *   [unhandled -> fetch -> xhr -> router(unhandled) -> fetch]\n *\n * - Native fetch should always be called within Window context.\n *\n * - If custom fetch event resolved with `null`, re-fetch with native fetch.\n */\n\nfunction isNativeFetch() {\n  var fetch = self.fetch;\n\n  /* eslint-disable no-multi-spaces */\n  return !fetch.mockerPatched && // haven't been patched\n  !fetch.polyfill && // github fetch polyfill\n  fetch.toString === Function.prototype.toString && // sometimes `toString` method is overrided to pretend it's native XD\n  /\\[native code\\]/.test(fetch.toString()); // fetch is overrided\n  /* eslint-enable no-multi-spaces */\n}\n//# sourceMappingURL=patch-fetch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/legacy/patch-fetch.js\n// module id = QR+e\n// module chunks = 2","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'regions/:id?'\n})\nclass $Region implements modelContract.Region {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  RegionID: number;\n\n  @Prop()\n  RegionDescription: string;\n\n}\n\nexport const Region = ActiveRecord($Region);\nexport type Region = ActiveRecord<$Region>;\n\n/* When moving to TS 2.8+\nexport const Region: TypeOfActiveRecord<typeof $Region> = <any> $Region;\nexport type Region = InstanceType<typeof Region>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/models/region.ts","'use strict';\n\nexports.__esModule = true;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Parse response with the specified `responseType`,\n * return `null` if any error occurs, see:\n * https://xhr.spec.whatwg.org/#the-response-attribute\n *\n * @async\n * @param  {Response}     response     Response object\n * @param  {string}       responseType XHR responseType\n * @return {Promise<any>}\n */\nvar parseResponse = function () {\n  var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2(response, responseType) {\n    var res, text, parser;\n    return _regenerator2.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            res = response.clone();\n            _context2.t0 = responseType;\n            _context2.next = _context2.t0 === '' ? 5 : _context2.t0 === 'text' ? 5 : _context2.t0 === 'json' ? 8 : _context2.t0 === 'blob' ? 11 : _context2.t0 === 'arraybuffer' ? 14 : _context2.t0 === 'document' ? 17 : 22;\n            break;\n\n          case 5:\n            _context2.next = 7;\n            return res.text();\n\n          case 7:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 8:\n            _context2.next = 10;\n            return res.json();\n\n          case 10:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 11:\n            _context2.next = 13;\n            return res.blob();\n\n          case 13:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 14:\n            _context2.next = 16;\n            return res.arrayBuffer();\n\n          case 16:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 17:\n            _context2.next = 19;\n            return res.text();\n\n          case 19:\n            text = _context2.sent;\n            parser = new DOMParser();\n            return _context2.abrupt('return', parser.parseFromString(text, getDocumentMIME(res)));\n\n          case 22:\n            _context2.next = 26;\n            break;\n\n          case 24:\n            _context2.prev = 24;\n            _context2.t1 = _context2['catch'](0);\n\n          case 26:\n            return _context2.abrupt('return', null);\n\n          case 27:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[0, 24]]);\n  }));\n\n  return function parseResponse(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n/**\n * Get MIME from 'content-type' header\n * @param  {Response} res Response object\n * @return {string}\n */\n\n\nexports.patchXHR = patchXHR;\n\nvar _createEvent = require('./create-event');\n\nvar _dispatchFetchEvent = require('./dispatch-fetch-event');\n\nvar _utils = require('../../utils/');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Patch native `XMLHttpRequest`\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Notes:\nhen and how to dispatch fetch event:\nttpRequest won't be sent until we call `xhr.send()`, so we should dispatch a\nfetch event when `xhr.send()` is invoked,\ny overriding `xhr.open()` method, we can get `request_method` and `request_url`,\ny overriding `xhr.setRequestHeader()`, we can get `request_headers`,\nreate a request instance with `request_method`, `request_url`, `request_headers`,\nand other options got from `this[xhrProp]` like `this.withCredentials` (will be\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *      delegated to `this.nativeXHR[xhrProp]`).\nispatch fetch event with the request.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *   6. If fetch event responds with a `Response`, parse it and dispatch `readystatechange`\nevent and progress events via `this.dispatchEvent()` (will be delegated to\n`this.nativeXHR.dispatchEvent()`).\nr, re-send native requeust via `this.nativeXHR.send()`.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nbout events handling:\nince we delegate all `XMLHttpRequest.prototype` methods to `this.nativeXHR`, there's\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *   no need to create an event emitter, simply calling `this.dispatchEvent()` and all\nregistered listeners will be invoked, including those are set by `instance#on[event]`.\neanwhile, all the event handlers you registered on `ExtandableXHR` instance will actually be\nregistered on `this.nativeXHR`. So even if we re-send the native request, all the handlers will\nbe called properly.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction patchXHR() {\n  if (XMLHttpRequest.mockerPatched) {\n    return;\n  }\n\n  self.XMLHttpRequest = MockerXHR;\n}\n\n// only `readystatechange` event and progress events are need to be dispatched\nvar EVENTS_LIST = ['readystatechange', 'loadstart', 'progress', 'load', 'loadend'];\n\nvar ExtandableXHR = (0, _utils.extensify)(XMLHttpRequest);\n\nvar MockerXHR = function (_ExtandableXHR) {\n  _inherits(MockerXHR, _ExtandableXHR);\n\n  function MockerXHR() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MockerXHR);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _ExtandableXHR.call.apply(_ExtandableXHR, [this].concat(args))), _this), _this._requestHeaders = new Headers(), _this._responseHeaders = null, _this._responseMIME = undefined, _this._method = undefined, _this._url = undefined, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  // marked with `mockerPatched` symbol\n\n\n  // keep a native reference\n\n\n  // record request headers via `setRequestHeader` method\n\n\n  // save response headers for `getResponseHeader(s)` methods\n\n\n  // override response 'Content-Type' header via `overrideMimeType` method\n\n\n  // save request method and url via `open` method\n\n\n  MockerXHR.prototype.setRequestHeader = function setRequestHeader(header, value) {\n    _ExtandableXHR.prototype.setRequestHeader.call(this, header, value);\n    this._requestHeaders.append(header, value);\n  };\n\n  MockerXHR.prototype.getResponseHeader = function getResponseHeader(header) {\n    if (!this._responseHeaders) {\n      return _ExtandableXHR.prototype.getResponseHeader.call(this, header);\n    }\n\n    return this._responseHeaders.get(header);\n  };\n\n  MockerXHR.prototype.getAllResponseHeaders = function getAllResponseHeaders() {\n    if (!this._responseHeaders) {\n      return _ExtandableXHR.prototype.getAllResponseHeaders.call(this);\n    }\n\n    var results = [];\n\n    // https://xhr.spec.whatwg.org/#dom-xmlhttprequest-getallresponseheaders\n    var seperator = String.fromCharCode(0x3A) + String.fromCharCode(0x20);\n    var linebreaker = String.fromCharCode(0x0D) + String.fromCharCode(0x0A);\n\n    this._responseHeaders.forEach(function (value, name) {\n      results.push([name, value].join(seperator));\n    });\n\n    return results.join(linebreaker);\n  };\n\n  MockerXHR.prototype.overrideMimeType = function overrideMimeType(mime) {\n    /* istanbul ignore if */\n    if (!_ExtandableXHR.prototype.overrideMimeType) {\n      return;\n    }\n\n    _ExtandableXHR.prototype.overrideMimeType.call(this, mime);\n    this._responseMIME = mime;\n  };\n\n  MockerXHR.prototype.open = function open(method, url) {\n    var _ExtandableXHR$protot;\n\n    for (var _len2 = arguments.length, rest = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      rest[_key2 - 2] = arguments[_key2];\n    }\n\n    (_ExtandableXHR$protot = _ExtandableXHR.prototype.open).call.apply(_ExtandableXHR$protot, [this, method, url].concat(rest));\n    this._method = method;\n    this._url = url;\n  };\n\n  MockerXHR.prototype.send = function send(data) {\n    var _this2 = this;\n\n    if (this.readyState !== this.OPENED) {\n      throw new Error('Failed to execute \\'send\\' on \\'XMLHttpRequest\\': The object\\'s state must be OPENED.');\n    }\n\n    this._mockFetch(data).then(function (result) {\n      if (result) {\n        // `event.respondWith` called\n        // resolve with mock response\n        _this2._processResponse(result);\n      } else {\n        // send real XMLHttpRequest\n        _ExtandableXHR.prototype.send.call(_this2, data);\n      }\n    });\n  };\n\n  /**\n   * Mock fetch\n   * @private\n   * @param  {any}               data request body\n   * @return {Promise<Response>}\n   */\n\n\n  MockerXHR.prototype._mockFetch = function _mockFetch(data) {\n    // GET|HEAD requests cannot include body\n    // set body to `null` will raise a TypeMismatchError in IE Edge\n    var body = this._method === 'GET' || this._method === 'HEAD' ? undefined : data;\n\n    var credentials = this.withCredentials ? 'include' : 'omit';\n\n    var request = new Request(this._url, {\n      body: body,\n      credentials: credentials,\n      method: this._method,\n      headers: this._requestHeaders\n    });\n\n    return (0, _dispatchFetchEvent.dispatchFetchEvent)(request);\n  };\n\n  /**\n   * Process response object\n   *\n   * @private\n   * @param  {Response}      response Response object\n   */\n\n\n  MockerXHR.prototype._processResponse = function () {\n    var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee(response) {\n      var result;\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (this._responseMIME) {\n                // apply `overrideMimeType`\n                response.headers.set('content-type', this._responseMIME);\n              }\n\n              _context.next = 3;\n              return parseResponse(response, this.responseType);\n\n            case 3:\n              result = _context.sent;\n\n\n              this._responseHeaders = response.headers;\n\n              // pretend this request is DONE\n              this._setProperty('readyState', this.DONE);\n              this._setProperty('responseURL', response.url);\n              this._setProperty('status', response.status);\n              this._setProperty('statusText', response.statusText);\n              this._setProperty('response', result);\n\n              if (!this.responseType || this.responseType === 'text') {\n                this._setProperty('responseText', result);\n              }\n\n              if (this.responseType === 'document') {\n                this._setProperty('responseXML', result);\n              }\n\n              this._dispatchEvents();\n\n            case 13:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function _processResponse(_x) {\n      return _ref.apply(this, arguments);\n    }\n\n    return _processResponse;\n  }();\n\n  /**\n   * Assign property to self\n   * @private\n   * @param {string} name  property name\n   * @param {any}    value property value\n   */\n\n\n  MockerXHR.prototype._setProperty = function _setProperty(name, value) {\n    // in IE & Safari, these property are internally read-only on native XHR instance\n    // assign to patched XHR, as a trade-off\n    Object.defineProperty(this, name, {\n      value: value,\n      writable: false,\n      enumerable: true,\n      configurable: true\n    });\n  };\n\n  /**\n   * Dispatch XHR events\n   * @private\n   */\n\n\n  MockerXHR.prototype._dispatchEvents = function _dispatchEvents() {\n    var _this3 = this;\n\n    EVENTS_LIST.forEach(function (type) {\n      var event = (0, _createEvent.createEvent)(type);\n\n      if (type !== 'readystatechange') {\n        // progress event\n        event.total = event.loaded = 1;\n      }\n\n      // Caveat: `this` & `event.target` are still the native one\n      _this3.dispatchEvent(event);\n    });\n  };\n\n  return MockerXHR;\n}(ExtandableXHR);\n\nMockerXHR.mockerPatched = true;\nMockerXHR.native = XMLHttpRequest;\nfunction getDocumentMIME(res) {\n  var contentType = res.headers.get('content-type');\n\n  /* istanbul ignore if */\n  if (!contentType) {\n    return 'text/html';\n  }\n\n  // strip charset\n  return contentType.replace(/;.*/, '');\n}\n//# sourceMappingURL=patch-xhr.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/legacy/patch-xhr.js\n// module id = R344\n// module chunks = 2","'use strict';\n\nexports.__esModule = true;\nexports.connect = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\n/**\n * Connect to service worker\n *\n * @param  {boolean} [skipUpdate=false] Set to `true` to bypass auto update\n * @return {Promise<ServiceWorkerRegistration>}\n */\nvar connect = exports.connect = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n    var skipUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var _navigator, serviceWorker, hasController, reg;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _navigator = navigator, serviceWorker = _navigator.serviceWorker;\n\n            // controller may be set when sw is ready\n\n            hasController = !!serviceWorker.controller;\n\n            // chrome will sometimes be hanging after reloading page\n            // delay all actions until sw is ready\n\n            _context.next = 4;\n            return serviceWorker.ready;\n\n          case 4:\n            if (!(!skipUpdate && hasController)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return (0, _getNewestReg.getNewestReg)();\n\n          case 7:\n            _context.t0 = _context.sent;\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.next = 12;\n            return serviceWorker.getRegistration();\n\n          case 12:\n            _context.t0 = _context.sent;\n\n          case 13:\n            reg = _context.t0;\n            return _context.abrupt('return', handshake(reg));\n\n          case 15:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function connect() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n/**\n * Establish service worker connection\n *\n * @param  {ServiceWorkerRegistration} registration\n * @return {Promise<ServiceWorkerRegistration>}\n */\n\n\nvar handshake = function () {\n  var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2(registration) {\n    var controller;\n    return _regenerator2.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            controller = registration.active;\n\n            /* istanbul ignore if */\n\n            if (controller) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw new Error('no active service worker registration is found');\n\n          case 3:\n            if (navigator.serviceWorker.controller) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 6;\n            return (0, _utils.sendMessageRequest)(controller, {\n              action: _constants.ACTION.REQUEST_CLAIM\n            });\n\n          case 6:\n            _context2.next = 8;\n            return (0, _utils.sendMessageRequest)(controller, {\n              action: _constants.ACTION.PING\n            });\n\n          case 8:\n\n            _utils.debug.scope('modern').info('connection established');\n\n            return _context2.abrupt('return', registration);\n\n          case 10:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function handshake(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _utils = require('../../utils/');\n\nvar _constants = require('../../constants/');\n\nvar _getNewestReg = require('./get-newest-reg');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n//# sourceMappingURL=connect.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/modern/connect.js\n// module id = SB5n\n// module chunks = 2","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = arg;\n\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = SldL\n// module chunks = 2","\"use strict\";\n\nexports.__esModule = true;\nexports.eventWaitUntil = eventWaitUntil;\n/**\n * Comparer function\n *\n * @callback comparer\n * @param {Event} event Event object\n * @return {boolean}\n */\n\n/**\n * Wait until an event matches given conditions\n *\n * @param  {any}      target   Event target\n * @param  {string}   event    Event name\n * @param  {comparer} comparer Comparer function\n * @return {Promise<Event>}\n */\nfunction eventWaitUntil(target, event, comparer) {\n  return new Promise(function (resolve) {\n    target.addEventListener(event, function handler(evt) {\n      if (comparer(evt)) {\n        target.removeEventListener(event, handler);\n        resolve(evt);\n      }\n    });\n  });\n}\n//# sourceMappingURL=event-wait-until.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/event-wait-until.js\n// module id = VroV\n// module chunks = 2","'use strict';\n\nexports.__esModule = true;\nexports.createClient = createClient;\n\nvar _client = require('./modern/client');\n\nvar _client2 = require('./legacy/client');\n\n/**\n * Constructs a new Client instance with the given scriptURL\n *\n * @param  {string} scriptURL The location of your server script\n * @param  {Object} options   Initial options\n * @return {MockerClient}\n */\nfunction createClient(scriptURL) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options.forceLegacy) {\n    return new _client2.LegacyClient(scriptURL);\n  }\n\n  var useLegacy = isLegacyMode();\n\n  /* istanbul ignore if */\n  if (useLegacy) {\n    console.warn('Switching to legacy mode...');\n    return new _client2.LegacyClient(scriptURL);\n  }\n\n  return new _client.ModernClient(scriptURL);\n}\n\n/* istanbul ignore next */\nfunction isLegacyMode() {\n  if (!('serviceWorker' in navigator)) {\n    // tslint:disable-next-line max-line-length\n    console.warn('Service worker is not supported in your browser, please check: http://caniuse.com/#feat=serviceworkers');\n\n    return true;\n  }\n\n  if (location.protocol !== 'https:' && location.hostname !== 'localhost' && location.hostname !== '127.0.0.1') {\n    // tslint:disable-next-line max-line-length\n    console.warn('Service workers should be registered in secure pages, further information: https://github.com/w3c/ServiceWorker/blob/master/explainer.md#getting-started');\n\n    return true;\n  }\n\n  return false;\n}\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/client/index.js\n// module id = WrD7\n// module chunks = 2","<tdm-markdown-view [markdown]=\"code | async | tdmCode:[{file: 'README.md'}]:true\"></tdm-markdown-view>\n<button mat-button (click)=\"click()\">Get Customer</button>\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/5-resource-control/resource-control.component.html","<tdm-markdown-view [markdown]=\"code | async | tdmCode:[{file: 'README.md'}]:true\"></tdm-markdown-view>\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/3-creating-a-model/creating-a-model.component.html","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'employees/:id?'\n})\nclass $Employee implements modelContract.Employee {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  EmployeeID: number;\n\n  @Prop()\n  LastName: string;\n\n  @Prop()\n  FirstName: string;\n\n  @Prop()\n  Title: string;\n\n  @Prop()\n  TitleOfCourtesy: string;\n\n  @Prop()\n  BirthDate: string;\n\n  @Prop()\n  HireDate: string;\n\n  @Prop()\n  Address: string;\n\n  @Prop()\n  City: string;\n\n  @Prop()\n  Region: string;\n\n  @Prop()\n  PostalCode: string;\n\n  @Prop()\n  Country: string;\n\n  @Prop()\n  HomePhone: string;\n\n  @Prop()\n  Extension: number;\n\n  @Prop()\n  Photo: any;\n\n  @Prop()\n  Notes: string;\n\n  @Prop()\n  ReportsTo: number;\n\n  @Prop()\n  PhotoPath: string;\n\n}\n\nexport const Employee = ActiveRecord($Employee);\nexport type Employee = ActiveRecord<$Employee>;\n\n/* When moving to TS 2.8+\nexport const Employee: TypeOfActiveRecord<typeof $Employee> = <any> $Employee;\nexport type Employee = InstanceType<typeof Employee>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/models/employee.ts","<tdm-package-welcome title=\"Http Resource\"\n                     description=\"A metadata driven, DAO and Active Record library for angular. Powerful, typed, robust.\"\n                     buttonText=\"TUTORIAL >>\"\n                     buttonLink=\"./tutorial/introduction\"\n                     name=\"ngx-http-client\"\n                     [deps]=\"['tixin', 'core', 'data']\">\n</tdm-package-welcome>\n<div class=\"tdm-page\">\n  <div class=\"tdm-page-content\">\n    <div>\n      <div fxLayout fxLayoutAlign=\"center center\" fxLayoutWrap=\"wrap\">\n        <div fxFlex=\"100%\" class=\"center-text\">\n          <h1>DOCUMENTATION WIP</h1>\n          <div class=\"tldr-header\">\n            <p>From a model to xhr HTTP calls using angular's http client.</p>\n            <p>HTTP Resource is simple and intuitive, providing a basic not intrusive interface to start with.\n              Setup your models for quick CRUD operations in no time and invoke HTTP calls using a Data Access Object.</p>\n            <p>HTTP Resource is also highly extensible (via plugins), opt-in for Active Record pattern plugin and/or the\n            resource control plugin to enjoy the full power of angular.</p>\n          </div>\n        </div>\n      </div>\n\n      <tdm-markdown-view><h1 class=\"center-text\">Features</h1></tdm-markdown-view>\n      <tdm-feature-list [features]=\"features\"></tdm-feature-list>\n    </div>\n  </div>\n</div>\n\n<button mat-button (click)=\"initClient()\">INIT</button>\n<br>\n<button mat-button (click)=\"restoreDB()\">RESTORE</button>\n<br>\n<br>\n<input matInput type=\"text\" #input />\n<button mat-button (click)=\"fetch(input.value, 'GET')\">FETCG</button>\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/ngx-http-app/ngx-http-app.component.html","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = Xxa5\n// module chunks = 2","\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Defer =\n/**\n * Indicates whether this defer is end\n *\n * @type {boolean}\n */\nexports.Defer = function Defer() {\n  var _this = this;\n\n  _classCallCheck(this, Defer);\n\n  this.done = false;\n  this.promise = null;\n\n  this.promise = new Promise(function (resolve, reject) {\n    _this.resolve = function (result) {\n      resolve(result);\n      _this.done = true;\n    };\n\n    _this.reject = function (reason) {\n      reject(reason);\n      _this.done = true;\n    };\n  });\n}\n\n/**\n * Defer's promise object\n *\n * @readonly\n * @type {Promise<any>}\n */\n;\n//# sourceMappingURL=defer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/defer.js\n// module id = Y6aT\n// module chunks = 2","'use strict';\n\nexports.__esModule = true;\nexports.extensify = extensify;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Make the un-extendable classes great again\n *\n * Notes:\n * - Main concepts:\n *   1. The best way to make another native class is to extend native class\n *      with overriding some methods. However, extending the native sometimes\n *      raises an error: <Failed to construct ${Native}: Please use the 'new' operator,\n *      this DOM object constructor cannot be called as a function.>\n *   2. So we should extend `Native` in some ways that are not constructing\n *      new instance with `Native.call(this)`:\n *      2.1. Look back to JavaScript inheritance, no matter which method we choose to\n *           use, we are almost doing the same thing: let the execution context of\n *           `SuperClass.prototype.method` be the instance of `SubClass`.\n *      1.2. Thus if we bind `Native.prototype.method` with a native instance,\n *           we can be free to invoke all methods in prototype! Then attaching these\n *           methods to the `Extendable.prototype`, the instances of `Extendable` will act\n *           as if they're real native instances!\n *\n * - Implementation of `Extendable`:\n *   1. Create a normal class with `this._native` pointing to a native instance,\n *   2. Iterate through the descriptors of `Native.prototype`:\n *      2.1. If the property is a primitive value, do nothing,\n *      2.2. If the property is an accessor, bind `get` and `set` with `this._native`,\n *      2.3. If the property is a function, bind it with `this._native`,\n *      2.4. Copy the descriptor to `Extendable.prototype`\n *   3. Iterate through the descriptors of `Native`, copy them to `Extendable` as\n *      static methods.\n */\n\n/**\n * Make un-extendable native classes extendable\n *\n * @param {AnyClass} Native Native class\n * @return {ExtendableAnyClass}\n */\nfunction extensify(Native) {\n  var Extendable = function Extendable() {\n    _classCallCheck(this, Extendable);\n\n    this._native = initNative.apply(undefined, arguments);\n\n    checkLack(this._native);\n  }\n  /**\n   * Refer to native object\n   *\n   * @private\n   * @type {AnyClass}\n   */\n  ;\n\n  function initNative() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 0) {\n      return new Native();\n    }\n\n    return new (Function.prototype.bind.apply(Native, [null].concat(args)))();\n  }\n\n  var checked = false;\n  /* istanbul ignore next: safari only */\n  function checkLack(instance) {\n    if (checked) {\n      return;\n    }\n\n    // safari 9- only have methods on `XMLHttpRequest.prototype`\n    // so we need copy properties from an instance\n\n    var _loop = function _loop(prop) {\n      if (!Extendable.prototype.hasOwnProperty(prop)) {\n        Object.defineProperty(Extendable.prototype, prop, {\n          get: function get() {\n            return this._native[prop];\n          },\n          set: function set(value) {\n            this._native[prop] = value;\n            return value;\n          },\n\n          enumerable: true,\n          configurable: true\n        });\n      }\n    };\n\n    for (var prop in instance) {\n      _loop(prop);\n    }\n  }\n\n  // copy all static properties\n  // safari 9- will include a \"prototype\" property on XMLHttpRequest\n  try {\n    Object.keys(Native).forEach(function (prop) {\n      Object.defineProperty(Extendable, prop, Object.getOwnPropertyDescriptor(Native, prop));\n    });\n  } catch (e) {}\n\n  // delegate all unset properties to `_native`\n  (function mapPrototypeMethods() {\n    var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Native.prototype;\n    var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Extendable.prototype;\n\n    if (source.constructor === Object) {\n      // exit recursion\n      return;\n    }\n\n    Object.keys(source).forEach(function (prop) {\n      /* istanbul ignore if */\n      if (target.hasOwnProperty(prop)) {\n        return;\n      }\n\n      var descriptor = Object.getOwnPropertyDescriptor(source, prop);\n\n      if (descriptor.get || descriptor.set) {\n        descriptor.get = function getNative() {\n          return this._native[prop];\n        };\n\n        descriptor.set = function setNative(value) {\n          this._native[prop] = value;\n          return value;\n        };\n      } else if (typeof descriptor.value === 'function') {\n        // method\n        var nativeFn = descriptor.value;\n        descriptor.value = function wrapped() {\n          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return nativeFn.apply(this._native, args);\n        };\n      }\n\n      // enable overriding\n      descriptor.configurable = true;\n\n      Object.defineProperty(target, prop, descriptor);\n    });\n\n    // recursively look-up\n    mapPrototypeMethods(Object.getPrototypeOf(source), target);\n  })();\n\n  return Extendable;\n}\n//# sourceMappingURL=extensify.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/extensify.js\n// module id = Z0+4\n// module chunks = 2","<tdm-markdown-view [markdown]=\"code | async | tdmCode:[{file: 'README.md'}]:true\"></tdm-markdown-view>\n<button mat-button (click)=\"click()\">Get Customer</button>\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/5-options/options.component.html","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'categories/:id?'\n})\nclass $Category implements modelContract.Category {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  CategoryID: number;\n\n  @Prop()\n  CategoryName: string;\n\n  @Prop()\n  Description: string;\n\n  @Prop()\n  Picture: string;\n}\n\nexport const Category = ActiveRecord($Category);\nexport type Category = ActiveRecord<$Category>;\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/models/category.ts","import { Component } from '@angular/core';\nimport { NgDAO } from '@tdm/ngx-http-client';\n\nimport { Customer } from '../../client';\n\n@Component({\n  selector: 'ngx-http-dao',\n  templateUrl: './dao.component.html',\n  styleUrls: [ './dao.component.scss' ],\n})\nexport class DaoComponent {\n  constructor(private ngDao: NgDAO) { }\n\n  click() {\n    this.ngDao.get(Customer).findById('ALFKI')\n      .then( c => {\n        console.log(c);\n      });\n  }\n\n  /* @tdm-ignore:* */\n  code: any = System.import(/* webpackChunkName: \"NgxHttpDaoComponent\" */ './__tdm-code__.ts'); // tslint:disable-line\n  static tutorial = {\n    id: 'dao',\n    name: 'DAO'\n  };\n  /* @tdm-ignore:* */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/4-dao/dao.component.ts","import { MetaClass } from '@tdm/core/tdm';\nimport { ServerProtocol, ClientResponse, ServerRequest } from '../../../shared/src/index';\nimport { OnMessageMetadata } from '../metadata';\n\nconst onMessage = MetaClass.decorator(OnMessageMetadata, 'method');\n\nexport type OnMessageHandler<T extends keyof ServerProtocol>\n  = (data: ServerRequest<T>) => Promise<ClientResponse<T>>;\n\nexport type OnMessageHandlerDecorator = <T extends keyof ServerProtocol>(\n  target: Object,\n  propertyKey: T,\n  descriptor: TypedPropertyDescriptor<OnMessageHandler<T>>\n) => any;\n\nexport type OnMessageHandlerDecoratorLoose = <T extends keyof ServerProtocol>(\n  target: Object,\n  propertyKey: any,\n  descriptor: TypedPropertyDescriptor<OnMessageHandler<T>>\n) => any;\n\n/**\n * Declares a handler for an incoming message from the client.\n */\nexport function OnMessage(): OnMessageHandlerDecorator;\nexport function OnMessage<T extends keyof ServerProtocol>(metaArgs: T): OnMessageHandlerDecoratorLoose;\nexport function OnMessage<T extends keyof ServerProtocol>(metaArgs?: T): any {\n  if (!metaArgs) {\n    return (...args: any[]) => (<any> onMessage)(args[1])(args[0], args[1], args[2]);\n  } else {\n    return onMessage(metaArgs);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/decorator/on-message.ts","import { Component } from '@angular/core';\nimport { UIDeveloper } from './model';\n\n@Component({\n  selector: 'ngx-http-introduction',\n  templateUrl: './introduction.component.html',\n  styleUrls: [ './introduction.component.scss' ]\n})\nexport class IntroductionComponent {\n  model = new UIDeveloper();\n  /* @tdm-ignore:* */\n  code: any = System.import(/* webpackChunkName: \"NgxHttpIntroductionComponent\" */ './__tdm-code__.ts'); // tslint:disable-line\n  static tutorial = {\n    id: 'introduction',\n    name: 'Introduction'\n  };\n  /* @tdm-ignore:* */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/1-introduction/introduction.component.ts","'use strict';\n\nexports.__esModule = true;\nexports.sendMessageRequest = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Send message and get the response\n *\n * @param  {any}    target  Message target\n * @param  {any}    message Message body\n * @param  {number} timeout Messaging timeout\n * @return {Promise<any>} Resolves with response message\n */\nvar sendMessageRequest = exports.sendMessageRequest = function () {\n  var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee(target, message) {\n    var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3 * 1e3;\n\n    var _ref2, port1, port2;\n\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref2 = new MessageChannel(), port1 = _ref2.port1, port2 = _ref2.port2;\n            return _context.abrupt('return', new Promise(function (resolve, reject) {\n              var timer = isFinite(timeout) && setTimeout(function () {\n                reject(new Error('messaging timeout: ' + JSON.stringify(message)));\n              }, timeout);\n\n              port1.onmessage = function (_ref3) {\n                var data = _ref3.data;\n\n                if (timer) {\n                  clearTimeout(timer);\n                }\n\n                // avoid high transient memory usage, see\n                // https://html.spec.whatwg.org/multipage/comms.html#ports-and-garbage-collection\n                port1.close();\n                port2.close();\n\n                /* istanbul ignore else */\n                if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n                  data.request = message;\n                }\n\n                if (data && data.error) {\n                  reject(data);\n                } else {\n                  resolve(data);\n                }\n              };\n\n              if (target === self.window) {\n                // posting message to self => legacy mode\n                // add `origin` param to `window.postMessage(message, targetOrigin, [transfer])`\n                target.postMessage(message, '*', [port2]);\n              } else {\n                target.postMessage(message, [port2]);\n              }\n            }));\n\n          case 2:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function sendMessageRequest(_x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n//# sourceMappingURL=send-message-request.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/utils/send-message-request.js\n// module id = fYBT\n// module chunks = 2","/* @tdm-example:DEMO-2 */\nimport { Validators } from '@angular/forms';\nimport { Model } from '@tdm/core';\nimport { FormModel, FormProp } from '@tdm/ngx-dynamic-forms';\n\n@Model()\n@FormModel()\n/* @tdm-example:DEMO-1 */\nexport class UIDeveloper {\n  /* @tdm-ignore:DEMO-1 */\n  @FormProp({\n    required: true,\n    render: {\n      vType: 'text',\n      label: 'Developer Name'\n    }\n  })\n  /* @tdm-ignore:DEMO-1 */\n  name: string;\n\n  /* @tdm-ignore:DEMO-1 */\n  @FormProp({\n    required: true,\n    render: {\n      vType: 'number',\n      label: 'Year Of Birth'\n    },\n    validators: Validators.compose([Validators.min(1900), Validators.max(new Date().getFullYear())])\n  })\n  /* @tdm-ignore:DEMO-1 */\n  yearOfBirth: number;\n\n  /* @tdm-ignore:DEMO-1 */\n  @FormProp({\n    required: true,\n    render: {\n      vType: 'radio',\n      label: 'Gender',\n      data: {\n        options: [\n          { value: 'male', label: 'MALE' },\n          { value: 'female', label: 'FEMALE' },\n          { value: 'other', label: 'OTHER' },\n        ]\n      }\n    }\n  })\n  /* @tdm-ignore:DEMO-1 */\n  gender: 'male' | 'female' | 'other';\n\n  /* @tdm-ignore:DEMO-1 */\n  @FormProp({\n    render: {\n      vType: 'select',\n      label: 'Framework',\n      data: {\n        options: [\n          { value: 'angular' },\n          { value: 'react' },\n          { value: 'vue' },\n          { value: 'ember' },\n          { value: 'knockout' },\n          { value: 'other' }\n        ]\n      }\n    }\n  })\n  /* @tdm-ignore:DEMO-1 */\n  framework: 'angular' | 'react' | 'vue' | 'ember' | 'knockout' | 'other';\n}\n/* @tdm-example:DEMO-1 */\n/* @tdm-example:DEMO-2 */\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/1-introduction/model.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-http-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: [ './setup.component.scss' ]\n})\nexport class SetupComponent {\n  /* @tdm-ignore:* */\n  code: any = System.import(/* webpackChunkName: \"NgxHttpSetupComponent\" */ './__tdm-code__.ts'); // tslint:disable-line\n  static tutorial = {\n    id: 'setup',\n    name: 'Setup'\n  };\n  /* @tdm-ignore:* */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/2-setup/setup.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from '@shared';\n\nimport { NgxHttpExamplesModule } from './examples';\nimport { NgxHttpAppComponent } from './ngx-http-app';\nimport { ExamplePageComponent } from './example-page';\nimport { NgxHttpTutorialsModule } from './tutorial';\nimport { ROUTES } from './routes';\n\n@NgModule({\n  declarations: [ NgxHttpAppComponent, ExamplePageComponent ],\n  imports: [\n    SharedModule,\n    // NgxHttpExamplesModule,\n    NgxHttpTutorialsModule,\n    RouterModule.forChild(ROUTES)\n  ]\n})\nexport class NgxHttpAppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/module.ts","import { targetStore, DecoratorInfo, MapExt, ModelMetadata, MetaClass, BaseMetadata, Constructor } from '@tdm/core/tdm';\n\nimport { OnMessageMetadata } from './on-message';\n\nexport interface ClientMetadataArgs {\n  scriptURL?: string;\n}\n\n@MetaClass<ClientMetadataArgs, ClientMetadata>({\n  single: true,\n  inherit: ModelMetadata,\n  allowOn: [ 'class' ]\n})\nexport class ClientMetadata extends BaseMetadata {\n  scriptURL: string;\n  messageHandlers = new Map<string, string>();\n\n  constructor(metaArgs: ClientMetadataArgs | undefined, info: DecoratorInfo, target: Constructor<any>) {\n    super(info);\n    if (metaArgs && metaArgs.scriptURL) {\n      this.scriptURL = metaArgs.scriptURL;\n    }\n\n    const clientMessage = targetStore.getMetaFor(target, OnMessageMetadata);\n    if (clientMessage) {\n      for (let [k, v] of MapExt.asKeyValArray(clientMessage)) {\n        this.messageHandlers.set(v.eventName, <any> k);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/metadata/client.ts","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = jyFz\n// module chunks = 2","<tdm-markdown-view [markdown]=\"code | async | tdmCode:[{file: 'README.md'}]:true\"></tdm-markdown-view>\n<button mat-button (click)=\"click()\">Get Customer</button>\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/4-dao/dao.component.html","<tdm-markdown-view [markdown]=\"code | async | tdmCode:[{file: 'README.md'}]:true\"></tdm-markdown-view>\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/2-setup/setup.component.html","'use strict';\n\nexports.__esModule = true;\nvar ACTION = {\n  PING: 'ping',\n  PONG: 'pong',\n  ESTABLISHED: 'established',\n  REQUEST_CLAIM: 'request_claim'\n};\n\nObject.keys(ACTION).forEach(function (prop) {\n  ACTION[prop] = '@mocker/' + ACTION[prop];\n});\n\nexports.ACTION = ACTION;\n//# sourceMappingURL=action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/service-mocker/constants/action.js\n// module id = sgJX\n// module chunks = 2","import { Client, ClientBase, OnMessage } from '@tdm/service-mocker/client';\nimport { ClientPostMessageEvent, ServerRequest, ClientResponse } from '@tdm/service-mocker/shared';\n\n@Client({\n  scriptURL: './sw.js'\n})\nexport class SWClient extends ClientBase {\n  @OnMessage()\n  installed(data: ServerRequest<'installed'>): Promise<ClientResponse<'installed'>> {\n    return <any> Promise.resolve(12);\n  }\n\n  restoreDB(): Promise<ClientPostMessageEvent<'restoreDb'>> {\n    return System.import(/* webpackChunkName: \"northwind\" */ './json-db/index')\n      .then( module => this.send('restoreDb', module.DB, 1000 * 60) );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/client.ts","import { Identity, Prop } from '@tdm/core';\nimport { ActiveRecord, HttpResource, UrlParam } from '@tdm/ngx-http-client';\nimport * as modelContract from '../../server/shared-models';\n\n@HttpResource({\n  endpoint: 'shippers/:id?'\n})\nclass $Shipper implements modelContract.Shipper {\n  @Identity()\n  @UrlParam('id')\n  @Prop()\n  ShipperID: number;\n\n  @Prop()\n  CompanyName: string;\n\n  @Prop()\n  Phone: string;\n\n}\n\nexport const Shipper = ActiveRecord($Shipper);\nexport type Shipper = ActiveRecord<$Shipper>;\n\n/* When moving to TS 2.8+\nexport const Shipper: TypeOfActiveRecord<typeof $Shipper> = <any> $Shipper;\nexport type Shipper = InstanceType<typeof Shipper>;\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/client/models/shipper.ts","import { Component } from '@angular/core';\nimport { ResourceControl, isResourceEvent } from '@tdm/data';\nimport { NgDAO } from '@tdm/ngx-http-client';\n\nimport { Customer } from '../../client';\n\n@Component({\n  selector: 'ngx-http-resource-control',\n  templateUrl: './resource-control.component.html',\n  styleUrls: [ './resource-control.component.scss' ],\n})\nexport class ResourceControlComponent {\n  constructor(private ngDao: NgDAO) { }\n\n  click() {\n    const promise = this.ngDao.get(Customer).findById('ALFKI');\n    promise.then( c => console.log(c) );\n\n    const rc = ResourceControl.get(promise);\n    rc.events$.subscribe(event => {\n      if (isResourceEvent('ActionError', event)) {\n        console.error(event.error);\n      } else {\n        console.log(event.type);\n      }\n    });\n  }\n\n  /* @tdm-ignore:* */\n  code: any = System.import(/* webpackChunkName: \"NgxHttpDaoComponent\" */ './__tdm-code__.ts'); // tslint:disable-line\n  static tutorial = {\n    id: 'resource-control',\n    name: 'Resource Control'\n  };\n  /* @tdm-ignore:* */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@http/tutorial/5-resource-control/resource-control.component.ts","import { createClient, MockerClient } from 'service-mocker/client';\nimport {\n  postError,\n  sendMessageRequest,\n  ServerProtocol,\n  ServerRequest,\n  ClientResponse,\n  ClientProtocol,\n  ClientRequest,\n  ClientPostMessageEvent\n} from '../../shared/src/messaging';\n\ninterface IncomingServerMessageEvent<T extends keyof ServerProtocol = keyof ServerProtocol> extends MessageEvent {\n  data: {\n    action: T;\n    data: ServerRequest<T>\n  };\n}\n\nexport interface MessageHandler {\n  canHandle(name: keyof ServerProtocol): boolean;\n  handle<T extends keyof ServerProtocol>(action: T, data: ServerRequest<T>): Promise<ClientResponse<T>>;\n}\n\nexport class ServiceMockerClient {\n  ready: Promise<void>;\n\n  private controller: ServiceWorker;\n  private messageEventListener = (event: IncomingServerMessageEvent) => this.onMessage(event);\n\n  private constructor(private mockClient: MockerClient, private messageHandler: MessageHandler) {\n    this.ready = this.mockClient.ready.then( registration => {\n      this.controller = registration.active;\n      this.controller.addEventListener('message', this.messageEventListener );\n    });\n  }\n\n  private onMessage(event: IncomingServerMessageEvent): void {\n    const {\n      data,\n      ports,\n    } = event;\n\n    if (!data || !ports || !ports.length) {\n      return;\n    }\n\n    const port = ports[0];\n\n    if (this.messageHandler.canHandle(data.action)) {\n      this.messageHandler.handle(data.action, data.data)\n        .then(response => port.postMessage(response))\n        .catch(err => port.postMessage(postError(err)));\n    }\n  }\n\n  sendAction<T extends keyof ClientProtocol = keyof ClientProtocol>(\n    action: T,\n    data: ClientRequest<T>,\n    timeout?: number): Promise<ClientPostMessageEvent<T>> {\n    const message = { action, data };\n    return sendMessageRequest<T>(this.controller, message, timeout);\n  }\n\n  dispose(): void {\n    this.controller.removeEventListener('message', this.messageEventListener);\n  }\n\n  static create(messageHandler: MessageHandler, scriptURL: string = './sw.js'): ServiceMockerClient {\n    const mockClient = createClient(scriptURL);\n    const client = new ServiceMockerClient(mockClient, messageHandler);\n    return client;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/service-mocker/client/src/client.ts"],"sourceRoot":"webpack:///"}