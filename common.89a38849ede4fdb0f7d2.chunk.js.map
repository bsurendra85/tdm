{"version":3,"sources":["./src/demo/modules/@shared/data-source/data-source.directive.ts","./node_modules/@angular/material/table/typings/index.d.ts.MatTable.html","./node_modules/@angular/material/table/typings/index.d.ts.MatHeaderRow.html","./node_modules/@angular/material/table/typings/index.d.ts.MatRow.html","./src/demo/modules/@shared/data-source/pagination.ts","./node_modules/@angular/material/radio/typings/index.d.ts.MatRadioButton.html","./src/demo/modules/@shared/components/code-view/code-view.component.ts","./src/demo/modules/@shared/data-source/data-source-container.ts","./src/demo/modules/@shared/data-source/filtering.ts","./src/demo/modules/@shared/data-source/sorting.ts","./src/@tdm/ngx-http-client/src/active-record/ar-mixin.ts","./src/@tdm/ngx-http-client/src/active-record/http-active-record.ts","./node_modules/@angular/material/icon/typings/index.d.ts.MatIcon.html","./node_modules/@angular/material/form-field/typings/index.d.ts.MatFormField.html","./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabGroup.html","./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabBody.html","./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabHeader.html","./node_modules/@angular/material/tabs/typings/index.d.ts.MatTab.html","./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabNav.html","./src/demo/modules/@shared/cdk-detail-row.directive.ts","./node_modules/@angular/material/core/typings/index.d.ts.MatOption.html","./node_modules/@angular/material/core/typings/index.d.ts.MatOptgroup.html"],"names":["DataSourceDirective","this","ghost","Object","defineProperty","prototype","_dataSource","value","sync","buffer","__WEBPACK_IMPORTED_MODULE_0__angular_cdk_coercion__","usePagination","_l","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_4__angular_cdk_table__","Paginator","_total","_perPage","_page","_totalPages","onChange$","__WEBPACK_IMPORTED_MODULE_0_rxjs_BehaviorSubject__","page","onChange","asObservable","Error","changes","perPage","prev","calcPages","next","setPage","total","start","Math","min","canMove","p","totalPages","hasNext","hasPrev","move","nextPage","prevPage","reset","emitOnChange","ceil","__WEBPACK_IMPORTED_MODULE_8__angular_material_core__","__WEBPACK_IMPORTED_MODULE_4__angular_cdk_platform__","trigger","centered","disabled","_v","en","$event","ad","_co","component","_ck","_isRippleDisabled","inputId","unbounded","checked","name","required","ariaLabel","ariaLabelledby","labelPosition","__webpack_require__","d","__webpack_exports__","TdmCodeViewComponent","emptySort","column","order","data_source_container_DataSourceContainer","_super","DataSourceContainer","initialData","keepAlive","_this","call","_pagination","pagination","_selection","collections_es5","_renderedData","_rawData$","BehaviorSubject","_filter$","undefined","_sort$","_sourceChanged$","Subject","updateSource","onSourceChanged","_filteredData$","combineLatest","pipe","operators","rawData","filter","length","props_1","properties","keys","type","value_1","v","value_2","some","f","filteredData","sort","_filteredData","sortFn","data","prop","slice","a","b","isNaN","onDataChanged","map","tslib_es6","refresh","setFilter","_i","arguments","aggregateMode","Array","isArray","subscribe","dispose","updateRawData","gc","local","unsubscribe","disconnect","cv","connect","viewChange","result","view","displayData","range","rangeStart","max","rangeEnd","end","i","selection","clear","coll","concat","table_es5","ARMixin","model","mixins","assertPlugin","tdm","registerTarget","markMixins","apply","src_core","http_active_record_HttpActiveRecord","tixin","tMeta","getTargetMeta","hasModel","build","ctx","options","serialize","ɵ1","HttpActiveRecord","decorators","method","metadata","Post","validation","pre","ɵ0","Get","Put","Delete","http_dao","query","findById","find","create","update","remove","ActiveRecordCollection","View_MatFormField_3","__WEBPACK_IMPORTED_MODULE_2__angular_common__","ngIf","hideRequiredMarker","_control","id","empty","_shouldAlwaysFloat","color","placeholder","_subscriptAnimationState","_hintLabelId","hintLabel","View_MatFormField_7","View_MatFormField_1","View_MatFormField_2","View_MatFormField_4","ngSwitch","View_MatFormField_5","ngSwitchCase","View_MatFormField_6","_prefixChildren","_hasPlaceholder","_suffixChildren","_getDisplayedMessages","View_MatTabGroup_3","__WEBPACK_IMPORTED_MODULE_8__angular_cdk_portal__","portal","parent","context","$implicit","templateLabel","textLabel","__WEBPACK_IMPORTED_MODULE_7__angular_material_core__","__WEBPACK_IMPORTED_MODULE_1__angular_material_tabs__","View_MatTabGroup_2","View_MatTabGroup_4","disableRipple","_getTabLabelId","index","_getTabIndex","_getTabContentId","selectedIndex","View_MatTabBody_0","RenderType_MatTabBody","__WEBPACK_IMPORTED_MODULE_3__angular_cdk_bidi__","_content","position","origin","_onCentering","_onCentered","content","View_MatTabHeader_0","RenderType_MatTabHeader","__WEBPACK_IMPORTED_MODULE_6__angular_cdk_scrolling__","selectFocusedIndex","indexFocused","_labelWrappers","View_MatTabGroup_1","ngForOf","View_MatTabGroup_5","_tabs","_showPaginationControls","_getLayoutDirection","View_MatTabBody_1","_position","__WEBPACK_IMPORTED_MODULE_5__angular_cdk_observers__","event","_disableScrollBefore","_disableScrollAfter","View_MatTab_1","CdkDetailRowDirective","vcRef","opened","row","tRef","onClick","toggle","render","createEmbeddedView","View_MatPseudoCheckbox_0","RenderType_MatPseudoCheckbox","__WEBPACK_IMPORTED_MODULE_1__angular_material_core__","state","selected","View_MatOption_1","__WEBPACK_IMPORTED_MODULE_3__angular_common__","multiple","_getHostElement","_labelId","label"],"mappings":"sGAKAA,aAAA,oBAAAA,IAuCUC,KAAAC,SAcV,OA/CEC,OAAAC,eAAIJ,EAAAK,UAAA,kBAAJ,WAA2C,OAAOJ,KAAKK,iBACvD,SAAwBC,GACtBN,KAAKK,YAAcC,EACnBN,KAAKO,wCAGPL,OAAAC,eAAIJ,EAAAK,UAAA,cAAJ,WAAuB,OAAOJ,KAAKC,MAAMO,YACzC,SAAoBF,GAClBN,KAAKC,MAAMO,OAASN,OAAAO,EAAA,EAAAP,CAAqBI,GACzCN,KAAKO,wCAOPL,OAAAC,eAAIJ,EAAAK,UAAA,kBAAJ,WAA4B,OAAOJ,KAAKC,MAAMS,mBAC9C,SAAwBJ,GACtBN,KAAKC,MAAMS,cAAgBR,OAAAO,EAAA,EAAAP,CAAsBI,GACjDN,KAAKO,wCAQPL,OAAAC,eAAIJ,EAAAK,UAAA,UAAJ,WACE,OAAOJ,KAAKK,6CAONN,EAAAK,UAAAG,KAAR,WACMP,KAAKK,cAC0B,iBAAtBL,KAAKC,MAAMO,SACpBR,KAAKK,YAAYG,OAASR,KAAKC,MAAMO,QAGC,kBAA7BR,KAAKC,MAAMS,gBACpBV,KAAKK,YAAYK,cAAgBV,KAAKC,MAAMS,iBAKpDX,EArDA,4JCJEY,MAAAC,EAAA,gEAAAA,EAAA,sBAAAC,EAAA,GAAAD,EAAA,gBACAD,MAAAC,EAAA,gEAAAA,EAAA,sBAAAC,EAAA,GAAAD,EAAA,gBAA6B,0CCF/BD,MAAAC,EAAA,gEAAAA,EAAA,mBAAAC,EAAA,GAAAD,EAAA,gBAA4B,0CCA5BD,MAAAC,EAAA,gEAAAA,EAAA,mBAAAC,EAAA,GAAAD,EAAA,gBAA4B,uqECS5BE,EAAA,WA6EE,SAAAA,IALQd,KAAAe,OAAiB,EACjBf,KAAAgB,SAAmB,GACnBhB,KAAAiB,MAAgB,EAChBjB,KAAAkB,YAAsB,EAG5BlB,KAAKmB,UAAY,IAAIC,EAAA,GAAuCC,MAAO,KAAM,KACzErB,KAAKsB,SAAWtB,KAAKmB,UAAUI,eAsCnC,OAnHErB,OAAAC,eAAIW,EAAAV,UAAA,eAAJ,WAAwB,OAAOJ,KAAKgB,cACpC,SAAYV,GACV,GAAIA,EAAQ,EACV,MAAM,IAAIkB,MAAM,4BAA4BlB,GAG9C,GAAIN,KAAKgB,WAAaV,EAAO,CAC3B,IAAMmB,GAAkCC,SAAU1B,KAAKgB,SAAUhB,KAAKgB,SAAWV,IAE3EqB,EAAO3B,KAAKiB,MAClBjB,KAAK4B,YACDD,IAAS3B,KAAKiB,QAChBQ,EAAQJ,MAAQM,EAAM3B,KAAKiB,QAG7BjB,KAAKmB,UAAUU,KAAKJ,qCASxBvB,OAAAC,eAAIW,EAAAV,UAAA,YAAJ,WAAqB,OAAOJ,KAAKiB,WACjC,SAASX,GACP,GAAIA,EAAQ,GAAKA,EAAQN,KAAKkB,YAC5B,MAAM,IAAIM,MAAM,sBAAsBlB,GAGpCN,KAAKiB,QAAUX,GACjBN,KAAK8B,QAAQxB,GAAO,oCAIxBJ,OAAAC,eAAIW,EAAAV,UAAA,aAAJ,WAAsB,OAAOJ,KAAKe,YAClC,SAAUT,GACR,GAAIA,EAAQ,EACV,MAAM,IAAIkB,MAAM,4BAA4BlB,GAG9C,GAAIN,KAAKe,SAAWT,EAAO,CACzB,IAAMmB,GAAkCM,OAAQ/B,KAAKe,OAAQf,KAAKe,OAAST,IAErEqB,EAAO3B,KAAKiB,MAClBjB,KAAK4B,YACDD,IAAS3B,KAAKiB,QAChBQ,EAAQJ,MAAQM,EAAM3B,KAAKiB,QAG7BjB,KAAKmB,UAAUU,KAAKJ,qCAQxBvB,OAAAC,eAAIW,EAAAV,UAAA,kBAAJ,WACE,OAAOJ,KAAKkB,6CAGdhB,OAAAC,eAAIW,EAAAV,UAAA,aAAJ,WACE,IAAM4B,GAAShC,KAAKqB,KAAO,GAAKrB,KAAK0B,QACrC,OAAQM,EAAOC,KAAKC,IAAIlC,KAAKe,OAAQiB,EAAQhC,KAAK0B,2CAgBpDZ,EAAAV,UAAA+B,QAAA,SAAQ7B,GACN,IAAM8B,EAAIpC,KAAKiB,MAAQX,EACvB,OAAO8B,GAAK,GAAKA,GAAKpC,KAAKqC,YAE7BvB,EAAAV,UAAAkC,QAAA,WAAqB,OAAOtC,KAAKmC,QAAQ,IACzCrB,EAAAV,UAAAmC,QAAA,WAAqB,OAAOvC,KAAKmC,SAAS,IAE1CrB,EAAAV,UAAAoC,KAAA,SAAKlC,GAAuBN,KAAKqB,KAAOrB,KAAKiB,MAAQX,GACrDQ,EAAAV,UAAAqC,SAAA,WAAmBzC,KAAKwC,KAAK,IAC7B1B,EAAAV,UAAAsC,SAAA,WAAmB1C,KAAKwC,MAAM,IAG9B1B,EAAAV,UAAAuC,MAAA,WACE3C,KAAKqB,KAAO,GAGJP,EAAAV,UAAA0B,QAAV,SAAkBxB,EAAesC,GAC/B,IAAMjB,EAAO3B,KAAKiB,MAClBjB,KAAKiB,MAAQX,EACTsC,GACF5C,KAAKmB,UAAUU,MAAMR,MAAOM,EAAMrB,MAS5BQ,EAAAV,UAAAwB,UAAV,WACE5B,KAAKkB,YAAce,KAAKY,KAAK7C,KAAKe,OAASf,KAAK0B,SAC5C1B,KAAKkB,YAAc,GAAKlB,KAAKiB,MAAQjB,KAAKkB,aAC5ClB,KAAK8B,QAAQ9B,KAAKkB,aAAa,IAGrCJ,EArHA,yICTAH,MAAAC,EAAA,yGAA2DD,MAAAC,EAAA,wFAAiCD,MAAAC,EAAA,2FAA0CD,MAAAC,EAAA,2FAA0CD,MAAAC,EAAA,8IAAAA,EAAA,uBAAAkC,EAAA,GAAAlC,EAAA,EAAAA,EAAA,EAAAmC,EAAA,KAAAD,EAAA,KAAAE,SAAA,aAAAC,UAAA,cAAAC,UAAA,sBAAqJvC,MAAAC,EAAA,+QAAAuC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,EAAAC,EAAAJ,EAAiTK,UAAjT,MAA+O,WAAAJ,mCAAkC,UAAAA,kCAAjRE,GAAA,aAAiT3C,MAAAC,EAAA,2HAAgGD,MAAAC,EAAA,mFAA2BD,MAAAC,EAAA,uBAAaA,EAAA,aAAY,SAAA6C,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAA1lBC,EAAAN,EAAA,IAAyCvC,EAAA,IAAAuC,EAAA,IAAqE,EAA1CI,EAAyCG,sBAAA,SAAAD,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAA7RC,EAAAN,EAAA,IAAOI,EAAoBI,SAAqJF,EAAAN,EAAA,IAAAvC,EAAA,IAAAuC,EAAA,GAAAS,WAAqJH,EAAAN,EAAA,IAAuEI,EAAcI,QAACJ,EAAmBM,QAACN,EAAqBL,SAACK,EAAkBO,KAACP,EAAqBQ,SAACR,EAA6BS,UAACT,EAAuCU,gBAAmER,EAAAN,EAAA,IAAqC,UAAAI,EAAAW,42FCS3pBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAA,EAAA,oLCMA,IAAMC,GAA+BC,OAAQ,KAAMC,MAAO,OAE1DC,EAAA,SAAAC,GAiGE,SAAAC,EAAYC,EAA+CC,GAA3D,IAAAC,EACEJ,EAAAK,KAAAhF,OAAOA,YAxFT+E,EAAArE,eAAyB,EAOzBqE,EAAAvE,OAAiB,GAyDPuE,EAAAE,YAAc,IAAIC,EAAA,EAClBH,EAAAI,WAAa,IAAIC,EAAA,GAAkB,MACnCL,EAAAM,iBACAN,EAAAO,UAAY,IAAIC,EAAA,MAEhBR,EAAAS,SAAW,IAAID,EAAA,OAAkCE,GACjDV,EAAAW,OAAS,IAAIH,EAAA,GAAmCf,OAAQ,KAAMC,MAAO,QAIvEM,EAAAY,gBAAiC,IAAIC,EAAA,EAgBhB,kBAAhBf,EACTC,EAAYD,EACHA,GACTE,EAAKc,aAAahB,GAEpBE,EAAKD,UAAYA,EAEjBC,EAAKe,gBAAkBf,EAAKY,gBAAgBpE,eAG5CwD,EAAKgB,eAAiB7F,OAAA8F,EAAA,EAAA9F,EAAe6E,EAAKO,UAAWP,EAAKS,WACvDS,KACC/F,OAAAgG,EAAA,EAAAhG,CAAK,WAAM,OC1Gb,SAAoBiG,EAAcC,GACtC,IAAKA,IAAWD,GAA8B,IAAnBA,EAAQE,OACjC,OAAOF,EAEP,IAAMG,EAAQF,EAAOG,WACjBH,EAAOG,WACPrG,OAAOsG,KAAKL,EAAQ,IAGxB,GAAoB,cAAhBC,EAAOK,KAAsB,CAC/B,IAAMC,EAAkCN,EAAOA,OAC/C,OAAOD,EAAQC,OAAQ,SAAAO,GAAK,OAAAD,EAAMC,EAAGL,KAChC,GAAqB,UAAhBF,EAAOK,KAAmB,CACpC,IAAMG,EAAQR,EAAOA,OACrB,OAAOD,EAAQC,OAAQ,SAAAO,GAAK,OAAAL,EAAMO,KAAM,SAAAC,GAAK,OAAAH,EAAEG,KAAOF,MAI1D,OAAOT,EDwFUC,CAAOrB,EAAKO,UAAUhF,MAAOyE,EAAKqB,UAC7ClG,OAAAgG,EAAA,EAAAhG,CAAK,SAAA6G,GACChC,EAAKrE,gBACPqE,EAAKG,WAAWnD,MAAQgF,EAAaV,OACrCtB,EAAKG,WAAW7D,KAAO0F,EAAaV,OAAS,EAAI,EAAI,KAGzDnG,OAAAgG,EAAA,EAAAhG,CAAc6E,EAAKW,OAAQ,SAACqB,EAAcC,GACxC,OAQOjC,EAAKkC,cARPD,GAAuB,KAAfA,EAAKvC,OAIoB,mBAAhBuC,EAAKE,OACvBF,EAAKE,OE5Ib,SAAsBF,EAAwBG,GAClD,IAAIC,EAAOJ,EAAKxC,OAChB,OAAK4C,EAEED,EAAKE,QAAQL,KAAK,SAACM,EAAGC,GAK3B,QAHaC,OAAOF,EAAEF,IAASE,EAAEF,IAASE,EAAEF,KAC/BI,OAAOD,EAAEH,IAASG,EAAEH,IAASG,EAAEH,KAEjB,EAAI,IAAqB,QAAfJ,EAAKvC,MAAkB,GAAK,KAPjD0C,IF6I0BH,EAAMD,GAPZA,KAUpChC,EAAK0C,cAAgB1C,EAAKgB,eAAe2B,IAAK,SAAAZ,QAkGlD,OArOkDa,EAAA,EAAA/C,EAAAD,GAsChDzE,OAAAC,eAAIyE,EAAAxE,UAAA,YAAJ,WACE,OAAOJ,KAAK0F,OAAOpF,WAErB,SAAS0G,GACPhH,KAAK0F,OAAO7D,KAAKmF,oCAGnB9G,OAAAC,eAAIyE,EAAAxE,UAAA,oBAAJ,WACE,OAAOJ,KAAKiH,+CAGd/G,OAAAC,eAAIyE,EAAAxE,UAAA,cAAJ,WACE,OAAOJ,KAAKwF,SAASlF,uCAIvBJ,OAAAC,eAAIyE,EAAAxE,UAAA,cAAJ,WACE,OAAOJ,KAAKsF,UAAUhF,MAAM+F,wCAG9BnG,OAAAC,eAAIyE,EAAAxE,UAAA,cAAJ,WACE,OAAOJ,KAAKsF,UAAUhF,uCAGxBJ,OAAAC,eAAIyE,EAAAxE,UAAA,kBAAJ,WACE,OAAOJ,KAAKiF,6CAOd/E,OAAAC,eAAIyE,EAAAxE,UAAA,iBAAJ,WACE,OAAOJ,KAAKmF,4CAgEdP,EAAAxE,UAAAwH,QAAA,WACE5H,KAAKsF,UAAUzD,KAAK7B,KAAKsF,UAAUhF,QAGrCsE,EAAAxE,UAAAyH,UAAA,SAAUvH,OAA8B,IAAAiG,KAAAuB,EAAA,EAAAA,EAAAC,UAAA1B,OAAAyB,IAAAvB,EAAAuB,EAAA,GAAAC,UAAAD,GACtC9H,KAAKwF,SAAS3D,UC/IC4D,ID+IiBnF,OC9I9BmF,GAEAc,WD4IqCA,EC5IdF,OAAS,ED4IKE,OC5IYd,EACjDgB,KAAuB,mBD2IOnG,EC3IM,YAAc,QAClD8F,OD0I8B9F,KAYlCsE,EAAAxE,UAAAyF,aAAA,SAAasB,EAA6Ba,GAA1C,IAAAjD,EAAA/E,UAA0C,IAAAgI,OAAA,GAEnCC,MAAMC,QAAQf,IAAwD,mBAAvCA,EAAyBgB,YAC3DhB,MAGFnH,KAAKoI,SAAQ,GAETH,MAAMC,QAAQf,GAChBnH,KAAKqI,cAAclB,EAAMa,GAEzBhI,KAAKsI,GAAKnB,EAAKgB,UAAW,SAAA/D,GAAM,OAAAW,EAAKsD,cAAcjE,EAAG4D,MAI1DpD,EAAAxE,UAAAgI,QAAA,SAAQG,GACFvI,KAAKsI,KACPtI,KAAKsI,GAAGE,cACRxI,KAAKsI,QAAK7C,GAEP8C,GACHvI,KAAK2F,gBAAgB6C,eAIzB5D,EAAAxE,UAAAqI,WAAA,SAAWC,IACc,IAAnB1I,KAAK8E,WACP9E,KAAKoI,WAITxD,EAAAxE,UAAAuI,QAAA,SAAQD,GAAR,IAAA3D,EAAA/E,KACE,OAAOE,OAAA8F,EAAA,EAAA9F,CAAcwI,EAAGE,WAAY5I,KAAK+F,eAAgB/F,KAAKiF,YAAY3D,UACvE2E,KACC/F,OAAAgG,EAAA,EAAAhG,CAAI,SAAC2I,GACE,IAAAC,EAAAD,EAAA,GAAME,EAAAF,EAAA,GAEX,GAAI9D,EAAKrE,eAAiBqE,EAAKE,YAAYlD,QAAUgH,EAAY1C,OAE/D,OADAtB,EAAKE,YAAYlD,MAAQgH,EAAY1C,OAC9BtB,EAAKM,cAKd,GAAIN,EAAKrE,cAAe,CACtB,IAAMsI,EAAQjE,EAAKG,WAAW8D,MAC9BD,EAAcA,EAAY1B,MAAM2B,EAAM,GAAIA,EAAM,IAGlDjE,EAAKM,cAAcgB,OAAS0C,EAAY1C,OAKxC,IAAK,IAHC4C,EAAahH,KAAKiH,IAAI,EAAGJ,EAAK9G,MAAQ+C,EAAKvE,QAC3C2I,EAAWlH,KAAKC,IAAI6G,EAAY1C,OAAQyC,EAAKM,IAAMrE,EAAKvE,QAErD6I,EAAIJ,EAAYI,EAAIF,EAAUE,IACrCtE,EAAKM,cAAcgE,GAAKN,EAAYM,GAGtC,OAAOtE,EAAKM,kBAMVT,EAAAxE,UAAAiI,cAAV,SAAwBlB,EAAWa,GACjChI,KAAKsJ,UAAUC,QACfvJ,KAAKgH,KAAOzC,EAEZ,IAAMiF,GAA8B,IAAlBxB,GAA2BC,MAAMC,QAAQlI,KAAKsF,UAAUhF,OACjEN,KAAKsF,UAAUhF,MAAKmJ,OAAKtC,GAC9BA,EAAKE,QAITrH,KAAKsF,UAAUzD,KAAK2H,GACpBxJ,KAAK2F,gBAAgB9D,QAEzB+C,EArOA,CAAkD8E,EAAA,sCGE5C,SAAAC,EAAsDC,OAAmC,IAAAC,KAAA/B,EAAA,EAAAA,EAAAC,UAAA1B,OAAAyB,IAAA+B,EAAA/B,EAAA,GAAAC,UAAAD,GAC7FX,EAAA,EAAQ2C,aAAa,gBAEhBF,IACHA,EAAa,cAGfG,EAAA,EAAYC,eAAeJ,GAS3BzC,EAAA,EAAM8C,WAAUC,MAAhB/C,EAAA,GAAiByC,EAAOO,EAAA,EAAaC,GAAgBX,OAAKI,IAG1D,IAAMhB,EAAUwB,EAAA,EAAaH,WAAA,GAACN,EAAOQ,GAAgBX,OAAKI,IAEpDS,EAAQP,EAAA,EAAYQ,cAAc1B,GAKxC,OAJIyB,EAAME,UACRF,EAAMV,QAAQa,OAAM,GAGf5B,kHCjCA,SAAC6B,EAAyCC,GAE7C,OADAD,EAAIvD,KAAOuD,EAAIE,YACRD,GACRE,EAaI,SAACH,EAAyCC,GAE7C,OADAD,EAAIvD,KAAOuD,EAAIE,YACRD,GAtBbP,EAAA,oBAAAU,KAoDA,OA3CEnD,EAAA,GARCzH,OAAA6K,EAAA,EAAA7K,EACC8K,OAAQC,EAAA,EAAqBC,KAC7BC,WAAY,OACZC,IAAGC,+DAWL1D,EAAA,GAJCzH,OAAA6K,EAAA,EAAA7K,EACC8K,OAAQC,EAAA,EAAqBK,IAC7BH,WAAY,yEAYdxD,EAAA,GARCzH,OAAA6K,EAAA,EAAA7K,EACC8K,OAAQC,EAAA,EAAqBM,IAC7BJ,WAAY,OACZC,IAAGP,+DAWLlD,EAAA,GAJCzH,OAAA6K,EAAA,EAAA7K,EACC8K,OAAQC,EAAA,EAAqBO,OAC7BL,WAAY,oEAKdxD,EAAA,GADC8D,EAAA,EAAeC,qDAKhB/D,EAAA,GADC8D,EAAA,EAAeE,2DAIhBhE,EAAA,GADC8D,EAAA,EAAeG,mDAKhBjE,EAAA,GADC8D,EAAA,EAAeI,uDAIhBlE,EAAA,GADC8D,EAAA,EAAeK,uDAIhBnE,EAAA,GADC8D,EAAA,EAAeM,uDAElBjB,EApDA,GAsDakB,EAAyB7E,EAAA,ucC9DtCvG,EAAA,aAAY,o7BCAwLD,MAAAC,EAAA,0GAAmFA,EAAA,aAAiC,0CAAgmBD,MAAAC,EAAA,oJAA0ID,MAAAC,EAAA,qBAAC,0CAA9jBD,MAAAC,EAAA,qQAAwWA,EAAA,aAAkDD,MAAAC,EAAA,uBAAyBD,MAAAC,EAAA,8BAAAqL,IAAArL,EAAA,mBAAAsL,EAAA,GAAAtL,EAAA,GAAAA,EAAA,KAAAuL,MAAA,kBAA0I,SAAA1I,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAA1IC,EAAAN,EAAA,KAAyFI,EAAA6I,oBAAA7I,EAAgD8I,SAAAtI,WAAA,SAAAN,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAA5jBC,EAAAN,EAAA,IAAgEI,EAAwB8I,SAAAC,GAAC/I,EAA8B8I,SAAAC,GAAC/I,EAAA8I,SAAAE,QAAAhJ,EAAyDiJ,mBAACjJ,EAAA8I,SAAAE,QAAAhJ,EAAoEiJ,mBAAC,UAAAjJ,EAAAkJ,MAAuC,QAAAlJ,EAAAkJ,OAA4HhJ,EAAAN,EAAA,IAAAI,EAAA8I,SAAAK,8CAAgM/L,MAAAC,EAAA,0GAAmFA,EAAA,aAAiC,0CAAyVD,MAAAC,EAAA,kFAA8EA,EAAA,aAA+B,cAAA6C,EAAAN,GAA7GM,EAAAN,EAAA,IAA6GA,EAAAK,UAAhCmJ,2DAA2LhM,MAAAC,EAAA,qFAA4DD,MAAAC,EAAA,sBAAa,cAAA6C,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAAzEC,EAAAN,EAAA,IAAuBI,EAAmBqJ,cAAkBnJ,EAAAN,EAAA,IAAAI,EAAAsJ,4CAApMlM,MAAAC,EAAA,iJAAwID,MAAAC,EAAA,8BAAAkM,IAAAlM,EAAA,mBAAAsL,EAAA,GAAAtL,EAAA,GAAAA,EAAA,KAAAuL,MAAA,iBAA+EvL,EAAA,aAA8DD,MAAAC,EAAA,oHAAoEA,EAAA,aAA2C,SAAA6C,EAAAN,GAA5PM,EAAAN,EAAA,IAA4PA,EAAAK,UAAtOqJ,YAAA,SAAApJ,EAAAN,GAA9JM,EAAAN,EAAA,IAA8JA,EAAAK,UAAvBmJ,kLAAnxDhM,MAAAC,EAAA,8GAAsDD,MAAAC,EAAA,uIAAAuC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,EAAAC,EAAAJ,EAA8IK,UAA9I,MAAqE,UAAAJ,6EAArEE,GAAA,aAA8I3C,MAAAC,EAAA,8BAAAmM,IAAAnM,EAAA,mBAAAsL,EAAA,GAAAtL,EAAA,GAAAA,EAAA,KAAAuL,MAAA,kBAAuIxL,MAAAC,EAAA,wGAAkDA,EAAA,aAAyBD,MAAAC,EAAA,sIAA+ED,MAAAC,EAAA,8BAAAoM,IAAApM,EAAA,oBAAAsL,EAAA,GAAAtL,EAAA,GAAAA,EAAA,KAAAuL,MAAA,kBAA0lBxL,MAAAC,EAAA,8BAAAqM,IAAArM,EAAA,oBAAAsL,EAAA,GAAAtL,EAAA,GAAAA,EAAA,KAAAuL,MAAA,kBAA6IxL,MAAAC,EAAA,qIAAqED,MAAAC,EAAA,oJAA4ID,MAAAC,EAAA,iIAAAA,EAAA,oBAAAsL,EAAA,MAAAgB,UAAA,sBAA+GvM,MAAAC,EAAA,8BAAAuM,IAAAvM,EAAA,qBAAAsL,EAAA,GAAAtL,EAAA,GAAAA,EAAA,GAAAsL,EAAA,IAAAkB,cAAA,0BAAgIzM,MAAAC,EAAA,8BAAAyM,IAAAzM,EAAA,qBAAAsL,EAAA,GAAAtL,EAAA,GAAAA,EAAA,GAAAsL,EAAA,IAAAkB,cAAA,0BAAwI,SAAA3J,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAAhlDC,EAAAN,EAAA,IAAoDI,EAA8B+J,gBAAAjH,QAA+M5C,EAAAN,EAAA,KAA8UI,EAAyBgK,mBAAmP9J,EAAAN,EAAA,KAAoDI,EAA8BiK,gBAAAnH,QAA4Q5C,EAAAN,EAAA,KAA0EI,EAAoCkK,yBAAChK,EAAAN,EAAA,KAAK,SAA2HM,EAAAN,EAAA,KAAgE,SAAsB,SAAAM,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAAjdC,EAAAN,EAAA,KAAqD,UAAAI,EAAAkJ,MAAuC,QAAAlJ,EAAAkJ,k/LCAzuB9L,MAAAC,EAAA,8BAAA8M,IAAA9M,EAAA,oBAAA+M,EAAA,GAAA/M,EAAA,EAAAA,EAAA,KAAAgN,QAAA,oBAAmDjN,MAAAC,EAAA,8BAAA6C,EAAAN,GAAnDM,EAAAN,EAAA,IAAaA,EAAqC0K,OAAAC,QAAAC,UAAAC,gBAAA,qCAAsErN,MAAAC,EAAA,oCAAA6C,EAAAN,GAAAM,EAAAN,EAAA,IAAAA,EAAA0K,OAAAC,QAAAC,UAAAE,4CAA5kBtN,MAAAC,EAAA,4TAAAuC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAAkY,UAAAF,WAAlYD,EAA4aK,kFAA5aF,GAAA,YAAA1C,EAAA,oBAAAsN,EAAA,GAAAtN,EAAA,EAAAA,EAAA,EAAAmC,EAAA,KAAAmL,EAAA,KAAAhL,UAAA,qBAAAtC,EAAA,sBAAAuN,EAAA,GAAAvN,EAAA,IAAAsC,UAAA,sBAA4avC,MAAAC,EAAA,8BAAAwN,IAAAxN,EAAA,mBAAAsL,EAAA,GAAAtL,EAAA,GAAAA,EAAA,KAAAuL,MAAA,kBAAuHxL,MAAAC,EAAA,8BAAAyN,IAAAzN,EAAA,mBAAAsL,EAAA,GAAAtL,EAAA,GAAAA,EAAA,KAAAuL,MAAA,kBAAyC,SAAA1I,EAAAN,GAA5kBM,EAAAN,EAAA,IAA8UA,EAAA2K,QAAAC,UAAA7K,UAA8PC,EAAAK,UAA3M8K,eAAjY7K,EAAAN,EAAA,IAAoTA,EAAyB2K,QAAAC,UAAA7K,UAA+FO,EAAAN,EAAA,IAAaA,EAA0B2K,QAAAC,UAAAC,eAAgFvK,EAAAN,EAAA,KAAaA,EAA2B2K,QAAAC,UAAAC,gBAAA,SAAAvK,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAA3kBC,EAAAN,EAAA,IAA6GI,EAAAgL,eAAApL,EAAwB2K,QAAAU,OAACjL,EAAAkL,aAAAtL,EAAA2K,QAAAC,UAAA5K,EAAsC2K,QAAAU,OAACjL,EAAAmL,iBAAAvL,EAA0C2K,QAAAU,OAACjL,EAAAoL,eAAAxL,EAAyC2K,QAAAU,MAACjL,EAAAoL,eAAAxL,EAAiD2K,QAAAU,MAAnT5N,EAAA,IAAAuC,EAAA,GAAAS,UAAAhD,EAAA,IAAAuC,EAAA,GAAAD,2CAAorBvC,MAAAC,EAAA,4MAAAuC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,EAAAC,EAAAJ,EAAsWK,UAAtW,MAAsQ,gBAAAJ,+CAA8C,iBAAAA,6CAApTE,GAAAsL,EAAAC,IAAAjO,EAAA,oBAAAuN,EAAA,GAAAvN,EAAA,KAAAkO,EAAA,KAAAC,UAAA,cAAAC,UAAA,cAAAC,QAAA,cAAAC,aAAA,eAAAC,YAAA,iBAAsW,SAAA1L,EAAAN,GAAtWM,EAAAN,EAAA,IAA8LA,EAAuB2K,QAAAC,UAAAqB,QAACjM,EAAyB2K,QAAAC,UAAAiB,SAAC7L,EAAqB2K,QAAAC,UAAAkB,SAAA,SAAAxL,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAArQC,EAAAN,EAAA,IAAuEI,EAAAmL,iBAAAvL,EAA0B2K,QAAAU,OAACjL,EAAAgL,eAAApL,EAA0C2K,QAAAU,OAACjL,EAAAoL,eAAAxL,EAAgD2K,QAAAU,+EAAjiC7N,MAAAC,EAAA,qNAAAuC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,EAAAC,EAAAJ,EAAgLK,UAAhL,MAA2F,iBAAAJ,kCAAuC,uBAAAA,mCAAlIE,GAAA+L,EAAAC,IAAA1O,EAAA,kCAAAuN,EAAA,GAAAvN,EAAA,EAAAA,EAAA,EAAA2O,EAAA,KAAAT,EAAA,KAAAR,eAAA,mBAAAK,eAAA,qBAAAa,mBAAA,qBAAAC,aAAA,iBAAA7O,EAAA,iBAAA8O,eAAA,KAAgL/O,MAAAC,EAAA,2BAAA+O,IAAA/O,EAAA,oBAAAsL,EAAA,GAAAtL,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAgP,SAAA,qBAAkoBjP,MAAAC,EAAA,iHAAkDD,MAAAC,EAAA,8BAAAiP,IAAAjP,EAAA,oBAAAsL,EAAA,GAAAtL,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAgP,SAAA,qBAAsW,SAAAnM,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAA1sCC,EAAAN,EAAA,IAA2DI,EAA+B+K,cAA/D/K,EAA+BoL,eAAsHlL,EAAAN,EAAA,IAAoEI,EAAwCuM,OAAwkBrM,EAAAN,EAAA,IAA8BI,EAAwCuM,QAAA,SAAArM,EAAAN,GAA16BM,EAAAN,EAAA,IAAAvC,EAAA,IAAAuC,EAAA,GAAA4M,wBAAA,OAAAnP,EAAA,IAAAuC,EAAA,GAAA6M,+HCAArP,MAAAC,EAAA,qKAAAuC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,EAAAC,EAAAJ,EAAqLK,UAArL,MAAuE,wBAAAJ,2CAAuD,uBAAAA,4CAA9HE,GAAA,aAAqL3C,MAAAC,EAAA,8BAAAqP,IAAArP,EAAA,oBAAAuN,EAAA,GAAAvN,EAAA,EAAAA,EAAA,GAAAuN,EAAA,wBAAA1K,EAAAN,GAAAM,EAAAN,EAAA,MAA4B,SAAAM,EAAAN,GAAjNM,EAAAN,EAAA,IAAiNA,EAAAK,UAA3I0M,oJCAtEvP,MAAAC,EAAA,kRAAAuC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAAqP,UAAAF,WAArPD,EAAuRK,sCAAvRF,GAAA,YAAA1C,EAAA,oBAAAsN,EAAA,GAAAtN,EAAA,EAAAA,EAAA,EAAAmC,EAAA,KAAAmL,EAAA,KAAAhL,UAAA,sBAAuRvC,MAAAC,EAAA,sGAA2DD,MAAAC,EAAA,2HAAAuC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAAuD,YAAAF,WAAvDD,EAA0FK,gCAA1FF,GAAA,aAA0F3C,MAAAC,EAAA,oIAAAuC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAAkD,sBAAAF,WAAlDD,EAA4FK,kCAA5FF,GAAA,YAAA1C,EAAA,qBAAAuP,EAAA,GAAAA,EAAA,EAAAvP,EAAA,EAAAA,EAAA,SAAAwP,MAAA,uBAA4FzP,MAAAC,EAAA,kFAA4BA,EAAA,aAA+BD,MAAAC,EAAA,wFAAAA,EAAA,uBAAAuN,EAAA,GAAAvN,EAAA,EAAAA,EAAA,eAAuCD,MAAAC,EAAA,kRAAAuC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAAkP,UAAAF,WAAlPD,EAAmRK,qCAAnRF,GAAA,YAAA1C,EAAA,qBAAAsN,EAAA,GAAAtN,EAAA,EAAAA,EAAA,EAAAmC,EAAA,KAAAmL,EAAA,KAAAhL,UAAA,sBAAmRvC,MAAAC,EAAA,uGAA+C,SAAA6C,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAA56BC,EAAAN,EAAA,IAAuHI,EAAA8M,sBAAA9M,EAA2D+K,eAAwb7K,EAAAN,EAAA,KAAsHI,EAAA+M,qBAAA/M,EAA0D+K,gBAAA,SAAA7K,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAA1xBC,EAAAN,EAAA,IAAmLI,EAAiE8M,qBAApPzP,EAAA,IAAAuC,EAAA,GAAAS,WAA0mBH,EAAAN,EAAA,KAAiLI,EAAgE+M,oBAAjP1P,EAAA,IAAAuC,EAAA,IAAAS,2CCA7lBhD,EAAA,aAAYD,MAAAC,EAAA,+FAAzBD,MAAAC,EAAA,0BAAA2P,KAAa,yECAb5P,MAAAC,EAAA,iGAAAuC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAA2B,sBAAAF,WAA3BD,EAAgEK,6BAAhEF,GAAA,YAAA1C,EAAA,qBAAAuP,EAAA,GAAAA,EAAA,EAAAvP,EAAA,EAAAA,EAAA,SAAAwP,MAAA,sBAAgExP,EAAA,aAAyBD,MAAAC,EAAA,uFAAAA,EAAA,sBAAAuN,EAAA,GAAAvN,EAAA,EAAAA,EAAA,eAAa,s3PCEtG4P,EAAA,WA6BE,SAAAA,EAAmBC,GAAAzQ,KAAAyQ,QAsBrB,OA3CEvQ,OAAAC,eACIqQ,EAAApQ,UAAA,gBADJ,WAEE,OAAOJ,KAAK0Q,wCAGdxQ,OAAAC,eACIqQ,EAAApQ,UAAA,oBADJ,SACiBE,GACXA,IAAUN,KAAK2Q,MACjB3Q,KAAK2Q,IAAMrQ,oCAKfJ,OAAAC,eACIqQ,EAAApQ,UAAA,gBADJ,SACaE,GACPA,IAAUN,KAAK4Q,OACjB5Q,KAAK4Q,KAAOtQ,oCAQhBkQ,EAAApQ,UAAAyQ,QADA,WAEE7Q,KAAK8Q,UAGPN,EAAApQ,UAAA0Q,OAAA,WACM9Q,KAAK0Q,OACP1Q,KAAKyQ,MAAMlH,QAEXvJ,KAAK+Q,SAEP/Q,KAAK0Q,OAAS1Q,KAAKyQ,MAAMpK,OAAS,GAG5BmK,EAAApQ,UAAA2Q,OAAR,WACE/Q,KAAKyQ,MAAMlH,QACPvJ,KAAK4Q,MAAQ5Q,KAAK2Q,KACpB3Q,KAAKyQ,MAAMO,mBAAmBhR,KAAK4Q,MAAQ7C,UAAW/N,KAAK2Q,OAGjEH,EAnDA,qECFA7P,MAAAC,EAAA,0DAAuBD,MAAAC,EAAA,+OAAAqQ,EAAAC,IAAAtQ,EAAA,mBAAAuQ,EAAA,MAAAC,OAAA,WAAAlO,UAAA,sBAAkH,SAAAO,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAAlHC,EAAAN,EAAA,IAAwDI,EAAA8N,SAAA,aAAoC9N,EAAqBL,WAAA,SAAAO,EAAAN,GAAjHM,EAAAN,EAAA,sBAAAvC,EAAA,IAAAuC,EAAA,GAAAiO,MAAA,YAAAxQ,EAAA,IAAAuC,EAAA,GAAAiO,MAAAxQ,EAAA,IAAAuC,EAAA,GAAAD,2CAAvBvC,MAAAC,EAAA,8BAAA0Q,IAAA1Q,EAAA,mBAAA2Q,EAAA,GAAA3Q,EAAA,GAAAA,EAAA,KAAAuL,MAAA,kBAAsKxL,MAAAC,EAAA,oFAA8BA,EAAA,aAAgCD,MAAAC,EAAA,+IAAAA,EAAA,oBAAAuQ,EAAA,GAAAvQ,EAAA,EAAAA,EAAA,EAAAmC,EAAA,KAAAoO,EAAA,KAAAnO,SAAA,aAAAE,UAAA,sBAAiI,SAAAO,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAArWC,EAAAN,EAAA,IAAMI,EAAgBiO,UAA8M/N,EAAAN,EAAA,IAA0CI,EAAsCkO,kBAAClO,EAAAL,UAAAK,EAA+C+K,gBAAA,SAAA7K,EAAAN,GAAhIM,EAAAN,EAAA,IAAAvC,EAAA,IAAAuC,EAAA,GAAAS,4CCApOjD,MAAAC,EAAA,iGAAkDD,MAAAC,EAAA,qBAAmBA,EAAA,aAAgC,cAAA6C,EAAAN,GAAA,IAAAI,EAAAJ,EAAAK,UAArGC,EAAAN,EAAA,IAAkCI,EAAemO,UAACjO,EAAAN,EAAA,IAAAI,EAAAoO","file":"common.89a38849ede4fdb0f7d2.chunk.js","sourcesContent":["import { Directive, Input } from '@angular/core';\n\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DataSourceContainer } from './data-source-container';\n\n@Directive({\n  selector: 'cdk-table[dataSource], mat-table[dataSource]',\n  exportAs: 'dataSource'\n})\nexport class DataSourceDirective<T> {\n\n  get dataSource(): DataSourceContainer<T> { return this._dataSource; }\n  @Input() set dataSource(value: DataSourceContainer<T>) {\n    this._dataSource = value;\n    this.sync();\n  }\n\n  get buffer(): number { return this.ghost.buffer; }\n  @Input() set buffer(value: number) {\n    this.ghost.buffer = coerceNumberProperty(value);\n    this.sync();\n  }\n\n  /**\n   * Proxy to the usePagination property in DataSourceContainer.\n   * @returns {boolean}\n   */\n  get pagination(): boolean { return this.ghost.usePagination; }\n  @Input() set pagination(value: boolean) {\n    this.ghost.usePagination = coerceBooleanProperty(value);\n    this.sync();\n  }\n\n\n  /**\n   * Just an alias for DataSourceDirective#tableDataSource\n   * @returns {DataSourceContainer<T>}\n   */\n  get ds(): DataSourceContainer<T> {\n    return this._dataSource;\n  }\n\n  private _dataSource: DataSourceContainer<T>;\n  /** A ghost object to hold properties synced with _dataSource  */\n  private ghost: Partial<DataSourceContainer<T>> = {};\n\n  private sync(): void {\n    if (this._dataSource) {\n      if (typeof this.ghost.buffer === 'number') {\n        this._dataSource.buffer = this.ghost.buffer;\n      }\n\n      if (typeof this.ghost.usePagination === 'boolean') {\n        this._dataSource.usePagination = this.ghost.usePagination;\n      }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/data-source/data-source.directive.ts","\n  <ng-container headerRowPlaceholder></ng-container>\n  <ng-container rowPlaceholder></ng-container>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/table/typings/index.d.ts.MatTable.html","<ng-container cdkCellOutlet></ng-container>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/table/typings/index.d.ts.MatHeaderRow.html","<ng-container cdkCellOutlet></ng-container>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/table/typings/index.d.ts.MatRow.html","import { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nexport interface PaginatorChangeEvent {\n  page?: [number, number];\n  perPage?: [number, number];\n  total?: [number, number];\n}\n\nexport class Paginator {\n\n  get perPage(): number { return this._perPage; }\n  set perPage(value: number) {\n    if (value < 1) {\n      throw new Error(`Invalid total size value ${value}`);\n    }\n\n    if (this._perPage !== value) {\n      const changes: PaginatorChangeEvent = { perPage: [this._perPage, this._perPage = value] };\n\n      const prev = this._page;\n      this.calcPages();\n      if (prev !== this._page) {\n        changes.page = [prev, this._page];\n      }\n\n      this.onChange$.next(changes);\n    }\n\n  }\n\n  /**\n   * Get / Set the current page\n   * @returns {number}\n   */\n  get page(): number { return this._page; }\n  set page(value: number) {\n    if (value < 0 || value > this._totalPages) {\n      throw new Error(`Invalid page index ${value}`);\n    }\n\n    if (this._page !== value) {\n      this.setPage(value, true);\n    }\n  }\n\n  get total(): number { return this._total; }\n  set total(value: number) {\n    if (value < 0) {\n      throw new Error(`Invalid total size value ${value}`);\n    }\n\n    if (this._total !== value) {\n      const changes: PaginatorChangeEvent = { total: [this._total, this._total = value] };\n\n      const prev = this._page;\n      this.calcPages();\n      if (prev !== this._page) {\n        changes.page = [prev, this._page];\n      }\n\n      this.onChange$.next(changes);\n    }\n  }\n\n  /**\n   * The amount of pages in this paginator\n   * @returns {number}\n   */\n  get totalPages(): number {\n    return this._totalPages;\n  }\n\n  get range(): [number, number] {\n    const start = (this.page - 1) * this.perPage;\n    return [start, Math.min(this._total, start + this.perPage)];\n  }\n\n  readonly onChange: Observable<PaginatorChangeEvent>;\n  protected onChange$: BehaviorSubject<PaginatorChangeEvent>;\n\n  private _total: number = 0;\n  private _perPage: number = 10;\n  private _page: number = 1;\n  private _totalPages: number = 0;\n\n  constructor() {\n    this.onChange$ = new BehaviorSubject<PaginatorChangeEvent>({page: [null, 1]});\n    this.onChange = this.onChange$.asObservable();\n  }\n\n  canMove(value: number): boolean {\n    const p = this._page + value;\n    return p >= 1 && p <= this.totalPages;\n  }\n  hasNext(): boolean { return this.canMove(1); }\n  hasPrev(): boolean { return this.canMove(-1); }\n\n  move(value: number): void { this.page = this._page + value; }\n  nextPage(): void { this.move(1); }\n  prevPage(): void { this.move(-1); }\n\n\n  reset(): void {\n    this.page = 1;\n  }\n\n  protected setPage(value: number, emitOnChange: boolean): void {\n    const prev = this._page;\n    this._page = value;\n    if (emitOnChange) {\n      this.onChange$.next({page: [prev, value]});\n    }\n  }\n\n  /**\n   * Calculate the number of pages.\n   * returns true if the current page has changed due to calculation. (current page > new pages value)\n   * @returns {boolean}\n   */\n  protected calcPages(): void {\n    this._totalPages = Math.ceil(this._total / this.perPage);\n    if (this._totalPages > 0 && this._page > this._totalPages) {\n      this.setPage(this._totalPages, false);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/data-source/pagination.ts","<label [attr.for]=\"inputId\" class=\"mat-radio-label\" #label><div class=\"mat-radio-container\"><div class=\"mat-radio-outer-circle\"></div><div class=\"mat-radio-inner-circle\"></div><div mat-ripple class=\"mat-radio-ripple\" [matRippleTrigger]=\"label\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"true\"></div></div><input #input class=\"mat-radio-input cdk-visually-hidden\" type=\"radio\" [id]=\"inputId\" [checked]=\"checked\" [disabled]=\"disabled\" [attr.name]=\"name\" [required]=\"required\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledby\" (change)=\"_onInputChange($event)\" (click)=\"_onInputClick($event)\"><div class=\"mat-radio-label-content\" [class.mat-radio-label-before]=\"labelPosition == 'before'\"><span style=\"display:none\">&nbsp;</span><ng-content></ng-content></div></label>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/radio/typings/index.d.ts.MatRadioButton.html","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\nexport interface CodeViewItem {\n  file?: string;\n  title?: string;\n  code: string;\n  lang: 'ts' | 'html' | 'css' | 'scss';\n}\n\n@Component({\n  selector: 'tdm-code-view',\n  templateUrl: './code-view.component.html',\n  styleUrls: [ './code-view.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TdmCodeViewComponent {\n  @Input() code: CodeViewItem[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/components/code-view/code-view.component.ts","import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { combineLatest as CombineLatest } from 'rxjs/observable/combineLatest';\nimport { map, tap, combineLatest } from 'rxjs/operators';\n\n\nimport { SelectionModel, CollectionViewer } from '@angular/cdk/collections';\nimport { DataSource } from '@angular/cdk/table';\nimport { MatTableSortData } from './types';\nimport { createFilter, filter, DataSourceFilter, DataSourceFilterToken } from './filtering';\nimport { sortData } from './sorting';\nimport { Paginator, PaginatorChangeEvent } from './pagination';\n\nconst emptySort: MatTableSortData = {column: null, order: 'asc'};\n\nexport class DataSourceContainer<T = any> extends DataSource<T> {\n\n  /**\n   * If true, pagination is used.\n   *\n   * @see DataSourceDirective#pagination\n   *\n   * @default false\n   * @type {boolean}\n   */\n  usePagination: boolean = false;\n\n  /**\n   * The buffer for virtual lists.\n   *\n   * @default 10\n   */\n  buffer: number = 10;\n\n  /**\n   * Notification stream for source changes.\n   */\n  readonly onSourceChanged: Observable<void>;\n\n  /**\n   * Notification stream for data changes.\n   * Data change is different from source change.\n   * A Source change will trigger a data change but a data change might also trigger from different\n   * actions, e.g. filtering\n   */\n  readonly onDataChanged: Observable<void>;\n\n  /**\n   * When set to True will not disconnect upon table disconnection, otherwise unsubscribe from the\n   * datatsource when the table disconnects.\n   */\n  readonly keepAlive: boolean;\n\n  get sort(): MatTableSortData {\n    return this._sort$.value;\n  }\n  set sort(sort: MatTableSortData) {\n    this._sort$.next(sort);\n  }\n\n  get filteredData(): T[] {\n    return this._filteredData;\n  }\n\n  get filter(): DataSourceFilter {\n    return this._filter$.value;\n  }\n\n\n  get length(): number {\n    return this._rawData$.value.length;\n  }\n\n  get source(): T[] {\n    return this._rawData$.value;\n  }\n\n  get pagination(): Paginator {\n    return this._pagination;\n  }\n\n  /**\n   * Represents selected items on the data source.\n   * @returns {SelectionModel<T>}\n   */\n  get selection(): SelectionModel<T> {\n    return this._selection;\n  }\n\n  protected _pagination = new Paginator();\n  protected _selection = new SelectionModel<T>(true, []);\n  protected _renderedData: T[] = [];\n  protected _rawData$ = new BehaviorSubject<T[]>([]);\n  protected _filteredData$: Observable<T[]>;\n  protected _filter$ = new BehaviorSubject<DataSourceFilter>(undefined);\n  protected _sort$ = new BehaviorSubject<MatTableSortData>({column: null, order: 'asc'});\n\n  protected gc: Subscription;\n\n  private _sourceChanged$: Subject<void> = new Subject<void>();\n  private _filteredData: T[];\n\n\n  constructor(initialData: T[] | Observable<T[]> | boolean, keepAlive: boolean)\n  constructor(initialData: T[] | Observable<T[]>)\n  constructor(keepAlive: boolean)\n  constructor()\n  /**\n   *\n   * @param initialData\n   * @param keepAlive When set to True will not disconnect upon table disconnection, otherwise does.\n   */\n  constructor(initialData?: T[] | Observable<T[]> | boolean, keepAlive?: boolean) {\n    super();\n\n    if (typeof initialData === 'boolean') {\n      keepAlive = initialData;\n    } else if (initialData) {\n      this.updateSource(initialData);\n    }\n    this.keepAlive = keepAlive;\n\n    this.onSourceChanged = this._sourceChanged$.asObservable();\n\n\n    this._filteredData$ = CombineLatest([this._rawData$, this._filter$])\n      .pipe(\n        map( () => filter(this._rawData$.value, this.filter) ),\n        tap( filteredData => {\n          if (this.usePagination) {\n            this.pagination.total = filteredData.length;\n            this.pagination.page = filteredData.length > 0 ? 1 : 0;\n          }\n        }),\n        combineLatest(this._sort$, (filteredData, sort) => {\n          if (!sort || sort.order === '') {\n            return this._filteredData = filteredData;\n          }\n\n          const sortFn = typeof sort.sortFn === 'function'\n            ? sort.sortFn\n            : sortData\n          ;\n          return this._filteredData =  sortFn(sort, filteredData);\n        })\n      );\n    this.onDataChanged = this._filteredData$.map( f => {} );\n  }\n\n  // workaround to refresh the page since row header and row can't communicate\n  refresh(): void {\n    this._rawData$.next(this._rawData$.value);\n  }\n\n  setFilter(value: DataSourceFilterToken, ...properties: string[]): void {\n    this._filter$.next(createFilter(value, properties));\n  }\n\n  /**\n   * Updates the source.\n   * If a an array is supplied, it is a one time value set as the source.\n   * If an array is supplied while an observable is already set, the array value will be set but and subsequent streams\n   * will override the values.\n   * To disconnect an observable source invoke the dispose() method\n   * @param data\n   * @param aggregateMode {boolean} [false] when true, the data is added to the previous data-set (async pagination)\n   */\n  updateSource(data: T[] | Observable<T[]>, aggregateMode: boolean = false): void {\n\n    if (!Array.isArray(data) && typeof (data as Observable<any>).subscribe !== 'function') {\n      data = [];\n    }\n\n    this.dispose(true);\n\n    if (Array.isArray(data)) {\n      this.updateRawData(data, aggregateMode);\n    } else {\n      this.gc = data.subscribe( d =>  this.updateRawData(d, aggregateMode) );\n    }\n  }\n\n  dispose(local?: boolean): void {\n    if (this.gc) {\n      this.gc.unsubscribe();\n      this.gc = undefined;\n    }\n    if (!local) {\n      this._sourceChanged$.unsubscribe();\n    }\n  }\n\n  disconnect(cv: CollectionViewer): void {\n    if (this.keepAlive === false) {\n      this.dispose();\n    }\n  }\n\n  connect(cv: CollectionViewer): Observable<T[]> {\n    return CombineLatest(cv.viewChange, this._filteredData$, this._pagination.onChange)\n      .pipe(\n        map((result: [{start: number, end: number}, T[], PaginatorChangeEvent]) => {\n          let [view, displayData, pageChange] = result;\n\n          if (this.usePagination && this._pagination.total !== displayData.length) {\n            this._pagination.total = displayData.length;\n            return this._renderedData;\n          }\n\n          // Set the rendered rows length to the virtual page size. Fill in the data provided\n          // from the index start until the end index or pagination size, whichever is smaller.\n          if (this.usePagination) {\n            const range = this.pagination.range;\n            displayData = displayData.slice(range[0], range[1]);\n          }\n\n          this._renderedData.length = displayData.length;\n\n          const rangeStart = Math.max(0, view.start - this.buffer);\n          const rangeEnd = Math.min(displayData.length, view.end + this.buffer);\n\n          for (let i = rangeStart; i < rangeEnd; i++) {\n            this._renderedData[i] = displayData[i];\n          }\n\n          return this._renderedData; // Currently ignoring the view\n        })\n      );\n  }\n\n\n  protected updateRawData(data: T[], aggregateMode: boolean): void {\n    this.selection.clear();\n    this.sort = emptySort;\n\n    const coll: T[] = aggregateMode === true &&  Array.isArray(this._rawData$.value)\n      ? [ ...this._rawData$.value, ...data ] //TODO: check performance\n      : data.slice()\n    ;\n\n\n    this._rawData$.next(coll);\n    this._sourceChanged$.next();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/data-source/data-source-container.ts","\nexport type DataSourcePredicate = (item: any, properties?: string[]) => boolean;\nexport type DataSourceFilterToken = undefined | DataSourcePredicate | any;\n\nexport interface DataSourceFilterType {\n  type: 'value' | 'predicate';\n  properties?: string[]\n  filter: any | DataSourcePredicate;\n}\n\n\nexport type DataSourceFilter = undefined | DataSourceFilterType ;\n\nexport function createFilter(value: DataSourceFilterToken, properties: string[]): DataSourceFilter {\n  return value === undefined\n    ? undefined\n    : {\n      properties: properties.length > 0 ? properties : undefined,\n      type: typeof value === 'function' ? 'predicate' : 'value',\n      filter: value\n    };\n}\n\nexport function filter<T>(rawData: T[], filter: DataSourceFilter): T[] {\n  if (!filter || !rawData || rawData.length === 0) {\n    return rawData;\n  } else {\n    const props = filter.properties\n      ? filter.properties\n      : Object.keys(rawData[0]) // assuming all objects are identical\n    ;\n\n    if (filter.type === 'predicate') {\n      const value: DataSourcePredicate = <any>filter.filter;\n      return rawData.filter( v => value(v, props) );\n    } else if ( filter.type === 'value' ) {\n      const value = filter.filter;\n      return rawData.filter( v => props.some( f => v[f] === value) );\n    }\n\n  }\n  return rawData;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/data-source/filtering.ts","import { MatTableSortData } from './types';\n\nexport function sortData<T>(sort: MatTableSortData, data: T[]): T[] {\n  let prop = sort.column;\n  if (!prop) return data;\n\n  return data.slice().sort((a, b) => {\n\n    let valueA = isNaN(+a[prop]) ? a[prop] : +a[prop];\n    let valueB = isNaN(+b[prop]) ? b[prop] : +b[prop];\n\n    return (valueA < valueB ? -1 : 1) * (sort.order === 'asc' ? 1 : -1);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/data-source/sorting.ts","/* tslint:disable:max-line-length */\n\nimport { Tixin, Type } from '@tdm/tixin';\nimport { targetStore } from '@tdm/core/tdm';\nimport { TDMModel, store, plugins } from '@tdm/data';\nimport { HttpAdapter } from '../core';\nimport { HttpActiveRecord, HttpActiveRecordStatic  } from './http-active-record';\n\n/* GENERATED BY scripts/generic_codegen.js */\nexport function ARMixin<Model, TypeofModel>(): Type<Model & TDMModel<Model> & HttpActiveRecord> & TypeofModel & HttpActiveRecordStatic<Model> & typeof HttpActiveRecord;\nexport function ARMixin<Model, TypeofModel>(model: TypeofModel & Type<Model>): Type<Model & TDMModel<Model> & HttpActiveRecord> & TypeofModel & HttpActiveRecordStatic<Model> & typeof HttpActiveRecord;\nexport function ARMixin<Model, TypeofModel, T1, C1>(model: TypeofModel & Type<Model>, m1: C1 & Type<T1>): Type<Model & HttpActiveRecord & T1> & TypeofModel & typeof HttpActiveRecord &  HttpActiveRecordStatic<Model> & C1;\nexport function ARMixin<Model, TypeofModel, T1, C1, T2, C2>(model: TypeofModel & Type<Model>, m1: C1 & Type<T1>, m2: C2 & Type<T2>): Type<Model & TDMModel<Model> & HttpActiveRecord & T1 & T2> & TypeofModel & typeof HttpActiveRecord &  HttpActiveRecordStatic<Model> & C1 & C2;\nexport function ARMixin<Model, TypeofModel, T1, C1, T2, C2, T3, C3>(model: TypeofModel & Type<Model>, m1: C1 & Type<T1>, m2: C2 & Type<T2>, m3: C3 & Type<T3>): Type<Model & TDMModel<Model> & HttpActiveRecord & T1 & T2 & T3> & TypeofModel & typeof HttpActiveRecord &  HttpActiveRecordStatic<Model> & C1 & C2 & C3;\nexport function ARMixin<Model, TypeofModel, T1, C1, T2, C2, T3, C3, T4, C4>(model: TypeofModel & Type<Model>, m1: C1 & Type<T1>, m2: C2 & Type<T2>, m3: C3 & Type<T3>, m4: C4 & Type<T4>): Type<Model & TDMModel<Model> & HttpActiveRecord & T1 & T2 & T3 & T4> & TypeofModel & typeof HttpActiveRecord &  HttpActiveRecordStatic<Model> & C1 & C2 & C3 & C4;\nexport function ARMixin<Model, TypeofModel, T1, C1, T2, C2, T3, C3, T4, C4, T5, C5>(model: TypeofModel & Type<Model>, m1: C1 & Type<T1>, m2: C2 & Type<T2>, m3: C3 & Type<T3>, m4: C4 & Type<T4>, m5: C5 & Type<T5>): Type<Model & TDMModel<Model> & HttpActiveRecord & T1 & T2 & T3 & T4 & T5> & TypeofModel & typeof HttpActiveRecord &  HttpActiveRecordStatic<Model> & C1 & C2 & C3 & C4 & C5;\nexport function ARMixin<Model, TypeofModel, T1, C1, T2, C2, T3, C3, T4, C4, T5, C5, T6, C6>(model: TypeofModel & Type<Model>, m1: C1 & Type<T1>, m2: C2 & Type<T2>, m3: C3 & Type<T3>, m4: C4 & Type<T4>, m5: C5 & Type<T5>, m6: C6 & Type<T6>): Type<Model & TDMModel<Model> & HttpActiveRecord & T1 & T2 & T3 & T4 & T5 & T6> & TypeofModel & typeof HttpActiveRecord &  HttpActiveRecordStatic<Model> & C1 & C2 & C3 & C4 & C5 & C6;\nexport function ARMixin<Model, TypeofModel, T1, C1, T2, C2, T3, C3, T4, C4, T5, C5, T6, C6, T7, C7>(model: TypeofModel & Type<Model>, m1: C1 & Type<T1>, m2: C2 & Type<T2>, m3: C3 & Type<T3>, m4: C4 & Type<T4>, m5: C5 & Type<T5>, m6: C6 & Type<T6>, m7: C7 & Type<T7>): Type<Model & TDMModel<Model> & HttpActiveRecord & T1 & T2 & T3 & T4 & T5 & T6 & T7> & TypeofModel & typeof HttpActiveRecord &  HttpActiveRecordStatic<Model> & C1 & C2 & C3 & C4 & C5 & C6 & C7;\n\nexport function ARMixin<Model, TypeofModel, TMIXIN, CMIXIN>(model?: TypeofModel & Type<Model>, ...mixins: Array<CMIXIN & Type<TMIXIN>>): Type<Model & TDMModel<Model> & HttpActiveRecord & TMIXIN> & HttpActiveRecordStatic<Model> & TypeofModel & typeof HttpActiveRecord & CMIXIN  {\n  plugins.assertPlugin('ActiveRecord'); // make sure plugin attached\n\n  if (!model) {\n    model = <any>class {};\n  }\n  // a model might not be a target at this point (i.e. it has no metadata)\n  targetStore.registerTarget(model);\n\n\n  /**\n   * Marking the mixin HttpActiveRecord for model.\n   * Since model is an extending class, it's type will be traversed and looked up for mixins\n   * so the deriving class (base) will get all the actions from the HttpActiveRecord\n   *\n   */\n  store.markMixins(model, HttpAdapter, HttpActiveRecord, ...mixins);\n\n  // we can't send ...mixin to Tixin since the type limits the ..mixins amount\n  const result = (Tixin as any)(model, HttpActiveRecord, ...mixins);\n\n  const tMeta = targetStore.getTargetMeta(result);\n  if (tMeta.hasModel) {\n    tMeta.model().build(true);\n  }\n\n  return result as any;\n}\nexport type ARMixin<Model> = Model & TDMModel<Model> & HttpActiveRecord;\n\n/* tslint:disable:max-line-length */\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/ngx-http-client/src/active-record/ar-mixin.ts","import { Tixin } from '@tdm/tixin';\nimport { TDMCollection as ARecordColl, TDMModel, IdentityValueType, ExecuteContext } from '@tdm/data';\n\nimport { HttpActionOptions } from '../core/interfaces';\nimport { HttpActionMetadata, HttpActionMethodType } from '../metadata';\nimport { HttpAction } from '../decorators';\nimport { HttpDAOActions } from '../core/http-dao';\n\nexport class HttpActiveRecord {\n  @HttpAction({\n    method: HttpActionMethodType.Post,\n    validation: 'both' as 'both',\n    pre: (ctx: ExecuteContext<HttpActionMetadata>, options?: HttpActionOptions) => {\n      ctx.data = ctx.serialize();\n      return options;\n    }\n  })\n  $create: (options?: HttpActionOptions) => this;\n\n  @HttpAction({\n    method: HttpActionMethodType.Get,\n    validation: 'incoming' as 'incoming'\n  })\n  $refresh: (options?: HttpActionOptions) => this;\n\n  @HttpAction({\n    method: HttpActionMethodType.Put,\n    validation: 'both' as 'both',\n    pre: (ctx: ExecuteContext<HttpActionMetadata>, options?: HttpActionOptions) => {\n      ctx.data = ctx.serialize();\n      return options;\n    }\n  })\n  $update: (options?: HttpActionOptions) => this;\n\n  @HttpAction({\n    method: HttpActionMethodType.Delete,\n    validation: 'skip' as 'skip'\n  })\n  $remove: (options?: HttpActionOptions) => this;\n\n  @HttpDAOActions.query\n  static query: (options?: HttpActionOptions) => any;\n  static findAll: (options?: HttpActionOptions) => any;\n\n  @HttpDAOActions.findById\n  static findById: (id: IdentityValueType, options?: HttpActionOptions) => any;\n\n  @HttpDAOActions.find\n  static find: (options: HttpActionOptions) =>any;\n  static findOne: (options: HttpActionOptions) => any;\n\n  @HttpDAOActions.create\n  static create: (data: any | Partial<any>, options?: HttpActionOptions) => any;\n\n  @HttpDAOActions.update\n  static update: (data: any | Partial<any>, options?: HttpActionOptions) => any;\n\n  @HttpDAOActions.remove\n  static remove: ( (id: IdentityValueType | any, options?: HttpActionOptions) => any );\n}\n\nexport const ActiveRecordCollection = ARecordColl;\nexport type ActiveRecordCollection<T> =\n  ARecordColl<Tixin<T, TDMModel<T> & HttpActiveRecord>>\n    & { query: ActiveRecordCollection<T> };\n\nexport interface HttpActiveRecordStatic<T>  {\n  findById(id: IdentityValueType, options?: HttpActionOptions): Tixin<T, TDMModel<T> & HttpActiveRecord>;\n\n  find(options: HttpActionOptions): Tixin<T, TDMModel<T> & HttpActiveRecord>;\n  findOne(options: HttpActionOptions): Tixin<T, TDMModel<T> & HttpActiveRecord>;\n\n  query(options?: HttpActionOptions): this & ActiveRecordCollection<T>;\n  findAll(options?: HttpActionOptions): this & ActiveRecordCollection<T>;\n\n  create(data: T, options?: HttpActionOptions): Tixin<T, TDMModel<T> & HttpActiveRecord>;\n  update(data: Partial<T>, options?: HttpActionOptions): Tixin<T, TDMModel<T> & HttpActiveRecord>;\n  remove(id: IdentityValueType | T, options?: HttpActionOptions): Tixin<T, TDMModel<T> & HttpActiveRecord>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/@tdm/ngx-http-client/src/active-record/http-active-record.ts","<ng-content></ng-content>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/icon/typings/index.d.ts.MatIcon.html","<div class=\"mat-input-wrapper mat-form-field-wrapper\"><div class=\"mat-input-flex mat-form-field-flex\" #connectionContainer (click)=\"_control.onContainerClick && _control.onContainerClick($event)\"><div class=\"mat-input-prefix mat-form-field-prefix\" *ngIf=\"_prefixChildren.length\"><ng-content select=\"[matPrefix]\"></ng-content></div><div class=\"mat-input-infix mat-form-field-infix\"><ng-content></ng-content><span class=\"mat-input-placeholder-wrapper mat-form-field-placeholder-wrapper\"><label class=\"mat-input-placeholder mat-form-field-placeholder\" [attr.for]=\"_control.id\" [attr.aria-owns]=\"_control.id\" [class.mat-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-form-field-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\" #placeholder *ngIf=\"_hasPlaceholder()\"><ng-content select=\"mat-placeholder\"></ng-content>{{_control.placeholder}} <span class=\"mat-placeholder-required mat-form-field-required-marker\" aria-hidden=\"true\" *ngIf=\"!hideRequiredMarker && _control.required\">*</span></label></span></div><div class=\"mat-input-suffix mat-form-field-suffix\" *ngIf=\"_suffixChildren.length\"><ng-content select=\"[matSuffix]\"></ng-content></div></div><div class=\"mat-input-underline mat-form-field-underline\" #underline><span class=\"mat-input-ripple mat-form-field-ripple\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\"></span></div><div class=\"mat-input-subscript-wrapper mat-form-field-subscript-wrapper\" [ngSwitch]=\"_getDisplayedMessages()\"><div *ngSwitchCase=\"'error'\" [@transitionMessages]=\"_subscriptAnimationState\"><ng-content select=\"mat-error\"></ng-content></div><div class=\"mat-input-hint-wrapper mat-form-field-hint-wrapper\" *ngSwitchCase=\"'hint'\" [@transitionMessages]=\"_subscriptAnimationState\"><div *ngIf=\"hintLabel\" [id]=\"_hintLabelId\" class=\"mat-hint\">{{hintLabel}}</div><ng-content select=\"mat-hint:not([align='end'])\"></ng-content><div class=\"mat-input-hint-spacer mat-form-field-hint-spacer\"></div><ng-content select=\"mat-hint[align='end']\"></ng-content></div></div></div>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/form-field/typings/index.d.ts.MatFormField.html","<mat-tab-header #tabHeader [selectedIndex]=\"selectedIndex\" [disableRipple]=\"disableRipple\" (indexFocused)=\"_focusChanged($event)\" (selectFocusedIndex)=\"selectedIndex = $event\"><div class=\"mat-tab-label\" role=\"tab\" matTabLabelWrapper mat-ripple *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabLabelId(i)\" [attr.tabIndex]=\"_getTabIndex(tab, i)\" [attr.aria-controls]=\"_getTabContentId(i)\" [attr.aria-selected]=\"selectedIndex == i\" [class.mat-tab-label-active]=\"selectedIndex == i\" [disabled]=\"tab.disabled\" [matRippleDisabled]=\"tab.disabled || disableRipple\" (click)=\"_handleClick(tab, tabHeader, i)\"><ng-template [ngIf]=\"tab.templateLabel\"><ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template></ng-template><ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template></div></mat-tab-header><div class=\"mat-tab-body-wrapper\" #tabBodyWrapper><mat-tab-body role=\"tabpanel\" *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabContentId(i)\" [attr.aria-labelledby]=\"_getTabLabelId(i)\" [class.mat-tab-body-active]=\"selectedIndex == i\" [content]=\"tab.content\" [position]=\"tab.position\" [origin]=\"tab.origin\" (_onCentered)=\"_removeTabBodyWrapperHeight()\" (_onCentering)=\"_setTabBodyWrapperHeight($event)\"></mat-tab-body></div>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabGroup.html","<div class=\"mat-tab-body-content\" #content [@translateTab]=\"_position\" (@translateTab.start)=\"_onTranslateTabStarted($event)\" (@translateTab.done)=\"_onTranslateTabComplete($event)\"><ng-template matTabBodyHost></ng-template></div>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabBody.html","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_scrollHeader('before')\"><div class=\"mat-tab-header-pagination-chevron\"></div></div><div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"><div class=\"mat-tab-list\" #tabList role=\"tablist\" (cdkObserveContent)=\"_onContentChanges()\"><div class=\"mat-tab-labels\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (click)=\"_scrollHeader('after')\"><div class=\"mat-tab-header-pagination-chevron\"></div></div>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabHeader.html","<ng-template><ng-content></ng-content></ng-template>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/tabs/typings/index.d.ts.MatTab.html","<div class=\"mat-tab-links\" (cdkObserveContent)=\"_alignInkBar()\"><ng-content></ng-content><mat-ink-bar></mat-ink-bar></div>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabNav.html","import {Directive, HostBinding, HostListener, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n\n@Directive({\n  selector: '[cdkDetailRow]'\n})\nexport class CdkDetailRowDirective {\n  private row: any;\n  private tRef: TemplateRef<any>;\n  private opened: boolean;\n\n  @HostBinding('class.expanded')\n  get expended(): boolean {\n    return this.opened;\n  }\n\n  @Input()\n  set cdkDetailRow(value: any) {\n    if (value !== this.row) {\n      this.row = value;\n      // this.render();\n    }\n  }\n\n  @Input('cdkDetailRowTpl')\n  set template(value: TemplateRef<any>) {\n    if (value !== this.tRef) {\n      this.tRef = value;\n      // this.render();\n    }\n  }\n\n  constructor(public vcRef: ViewContainerRef) { }\n\n  @HostListener('click')\n  onClick(): void {\n    this.toggle();\n  }\n\n  toggle(): void {\n    if (this.opened) {\n      this.vcRef.clear();\n    } else {\n      this.render();\n    }\n    this.opened = this.vcRef.length > 0;\n  }\n\n  private render(): void {\n    this.vcRef.clear();\n    if (this.tRef && this.row) {\n      this.vcRef.createEmbeddedView(this.tRef, { $implicit: this.row });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/modules/@shared/cdk-detail-row.directive.ts","<span *ngIf=\"multiple\"><mat-pseudo-checkbox class=\"mat-option-pseudo-checkbox\" [state]=\"selected ? 'checked' : ''\" [disabled]=\"disabled\"></mat-pseudo-checkbox></span><span class=\"mat-option-text\"><ng-content></ng-content></span><div class=\"mat-option-ripple\" mat-ripple [matRippleTrigger]=\"_getHostElement()\" [matRippleDisabled]=\"disabled || disableRipple\"></div>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/core/typings/index.d.ts.MatOption.html","<label class=\"mat-optgroup-label\" [id]=\"_labelId\">{{ label }}</label><ng-content select=\"mat-option\"></ng-content>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/core/typings/index.d.ts.MatOptgroup.html"],"sourceRoot":"webpack:///"}