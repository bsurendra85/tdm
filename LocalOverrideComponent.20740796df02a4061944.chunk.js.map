{"version":3,"sources":["./src/demo/modules/@forms/tutorials/8-local-override/__tdm-code__.ts"],"names":["module","exports","file","lang","section","code","title"],"mappings":"qCAAAA,EAAAC,UAAmBC,KAAA,YAAAC,KAAA,KAAAC,QAAA,QAAAC,KAAA,k7EAAkiFH,KAAA,YAAAC,KAAA,KAAAC,QAAA,QAAAC,KAAA,y1BAAm5BH,KAAA,8BAAAC,KAAA,KAAAC,QAAA,WAAAC,KAAA,suCAAy0CC,MAAA,cAA0BJ,KAAA,gCAAAC,KAAA,OAAAC,QAAA,WAAAC,KAAA,m5FAAynGC,MAAA,aAA8BJ,KAAA,8BAAAC,KAAA,KAAAC,QAAA,YAAAC,KAAA,o3DAAo+DC,MAAA,cAA0BJ,KAAA,gCAAAC,KAAA,OAAAC,QAAA,YAAAC,KAAA,+sCAAg1CC,MAAA,aAA8BJ,KAAA,gCAAAC,KAAA,OAAAC,QAAA,UAAAC,KAAA,GAAAC,MAAA,UAAqGJ,KAAA,WAAAC,KAAA,KAAAC,QAAA,UAAAC,KAAA,8/FAA2lGC,MAAA","file":"LocalOverrideComponent.20740796df02a4061944.chunk.js","sourcesContent":["module.exports = [{\"file\":\"README.md\",\"lang\":\"md\",\"section\":\"part1\",\"code\":\"<p>A dynamic form component will render a form control using the\\n<code>form control renderer</code> it has access to, this has been reviewed\\nin-depth in the <strong>renderer</strong> chapter.</p>\\n<p>There are scenarios where a custom implementation is required, locally\\nfor a specific dynamic form.</p>\\n<p>The library supports that using local custom templates.</p>\\n<p>A local custom template is a template defined within the content area\\nof a dynamic form and can refers to a specific field or globally to all\\nfields within the dynamic form.</p>\\n<p>A local custom template is defined using the structural directive\\n<code>DynamicFormOverrideDirective</code>.</p>\\n<pre class=\\\"lang-html\\\"><code class=\\\"lang-html\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">dynamic-form</span> [<span class=\\\"hljs-attr\\\">model</span>]=<span class=\\\"hljs-string\\\">\\\"model\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>  *<span class=\\\"hljs-attr\\\">dynamicFormOverride</span>=<span class=\\\"hljs-string\\\">\\\"'name'; let ctx\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-comment\\\">&lt;!-- LOCAL IMPLEMENTATION --&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n</code></pre>\\n<p>The context (<strong>ctx</strong> in the template above) for the template is the\\nsame context assigned to the <strong>renderer</strong>: <code>DynamicFormControlRenderer</code></p>\\n<p>To create a default local custom template use <code>*</code> as the key:</p>\\n<pre class=\\\"lang-html\\\"><code class=\\\"lang-html\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">dynamic-form</span> [<span class=\\\"hljs-attr\\\">model</span>]=<span class=\\\"hljs-string\\\">\\\"model\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>  *<span class=\\\"hljs-attr\\\">dynamicFormOverride</span>=<span class=\\\"hljs-string\\\">\\\"'*'; let ctx\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-comment\\\">&lt;!-- LOCAL IMPLEMENTATION --&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n</code></pre>\\n<p>The following represents the precedence when rendering:</p>\\n<ol>\\n<li>Specific local custom template</li>\\n<li>Default local custom template</li>\\n<li>Default form control renderer</li>\\n</ol>\\n<p>In the following example, the <code>name</code> field is replaced with a local\\ncustom override. Instead of an <code>input</code> element an <code>auto-complete</code>\\nelement, with predefined names, is used. </p>\\n\"},{\"file\":\"README.md\",\"lang\":\"md\",\"section\":\"part2\",\"code\":\"<h2 id=\\\"programmatic-local-custom-templates\\\">Programmatic local custom templates</h2>\\n<p>Local custom templates can also be set using the dynamic component API.</p>\\n<p>Get a hold of the DynamicFormComponent instance and a <code>TemplateRef</code> \\ninstance and use <code>DynamicFormComponent.addOverride()</code> method.</p>\\n<p>You can use any <code>TemplateRef&lt;DynamicFormControlRenderer&gt;</code>.</p>\\n<p>The following example is a nice demonstration of a &quot;control-less&quot; form\\nthat shows the form as readonly html elements. The local custom template\\nin this case is a default custom template (<code>*</code>) the will apply to all\\nfields.</p>\\n<p>This form is a slave of the form in the previous example.</p>\\n<p>Because it is a slave it is bound to the same form as the master,\\ntry changing values in the form on the top.</p>\\n\"},{\"file\":\"local-override.component.ts\",\"lang\":\"ts\",\"section\":\"tdmModel\",\"code\":\"<span class=\\\"hljs-keyword\\\">import</span> { Component, ViewChild, TemplateRef, AfterViewInit } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DynamicFormComponent, DynamicFormOverrideContext } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@tdm/ngx-dynamic-forms'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { FORM_CONTROL_COMPONENT } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@tdm/ngx-dynamic-forms'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { Hero, RendererV2Component } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'../6-extending-the-renderer'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  selector: <span class=\\\"hljs-string\\\">'form-local-override'</span>,\\n  templateUrl: <span class=\\\"hljs-string\\\">'./local-override.component.html'</span>,\\n  styleUrls: [ <span class=\\\"hljs-string\\\">'./local-override.component.scss'</span> ],\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> LocalOverrideComponent <span class=\\\"hljs-keyword\\\">implements</span> AfterViewInit {\\n  model = <span class=\\\"hljs-keyword\\\">new</span> Hero();\\n\\n}\\n\",\"title\":\"Component\"},{\"file\":\"local-override.component.html\",\"lang\":\"html\",\"section\":\"tdmModel\",\"code\":\"  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">dynamic-form</span> #<span class=\\\"hljs-attr\\\">dynFormMaster</span> [<span class=\\\"hljs-attr\\\">model</span>]=<span class=\\\"hljs-string\\\">\\\"model\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> *<span class=\\\"hljs-attr\\\">dynamicFormOverride</span>=<span class=\\\"hljs-string\\\">\\\"'name'; let ctx\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">mat-form-field</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">input</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"text\\\"</span> <span class=\\\"hljs-attr\\\">matInput</span> [<span class=\\\"hljs-attr\\\">formControl</span>]=<span class=\\\"hljs-string\\\">\\\"ctx.fControl\\\"</span> [<span class=\\\"hljs-attr\\\">matAutocomplete</span>]=<span class=\\\"hljs-string\\\">\\\"auto\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">mat-form-field</span>&gt;</span>\\n\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">mat-autocomplete</span> #<span class=\\\"hljs-attr\\\">auto</span>=<span class=\\\"hljs-string\\\">\\\"matAutocomplete\\\"</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">mat-option</span> <span class=\\\"hljs-attr\\\">value</span>=<span class=\\\"hljs-string\\\">\\\"batman\\\"</span>&gt;</span>Bat Man<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">mat-option</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">mat-option</span> <span class=\\\"hljs-attr\\\">value</span>=<span class=\\\"hljs-string\\\">\\\"superman\\\"</span>&gt;</span>Super Man<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">mat-option</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">mat-option</span> <span class=\\\"hljs-attr\\\">value</span>=<span class=\\\"hljs-string\\\">\\\"spiderman\\\"</span>&gt;</span>Spider Man<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">mat-option</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">mat-option</span> <span class=\\\"hljs-attr\\\">value</span>=<span class=\\\"hljs-string\\\">\\\"thor\\\"</span>&gt;</span>Thor<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">mat-option</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">mat-option</span> <span class=\\\"hljs-attr\\\">value</span>=<span class=\\\"hljs-string\\\">\\\"wonderwomen\\\"</span>&gt;</span>Wonder Women<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">mat-option</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">mat-option</span> <span class=\\\"hljs-attr\\\">value</span>=<span class=\\\"hljs-string\\\">\\\"captainamerica\\\"</span>&gt;</span>Captain America<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">mat-option</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">mat-autocomplete</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">dynamic-form</span>&gt;</span>\",\"title\":\"Template\"},{\"file\":\"local-override.component.ts\",\"lang\":\"ts\",\"section\":\"tdmModel2\",\"code\":\"<span class=\\\"hljs-keyword\\\">import</span> { Component, ViewChild, TemplateRef, AfterViewInit } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DynamicFormComponent, DynamicFormOverrideContext } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@tdm/ngx-dynamic-forms'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { FORM_CONTROL_COMPONENT } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@tdm/ngx-dynamic-forms'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { Hero, RendererV2Component } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'../6-extending-the-renderer'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  selector: <span class=\\\"hljs-string\\\">'form-local-override'</span>,\\n  templateUrl: <span class=\\\"hljs-string\\\">'./local-override.component.html'</span>,\\n  styleUrls: [ <span class=\\\"hljs-string\\\">'./local-override.component.scss'</span> ],\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> LocalOverrideComponent <span class=\\\"hljs-keyword\\\">implements</span> AfterViewInit {\\n  model = <span class=\\\"hljs-keyword\\\">new</span> Hero();\\n\\n  <span class=\\\"hljs-meta\\\">@ViewChild</span>(<span class=\\\"hljs-string\\\">'dynFormCustomOverride'</span>)\\n  dynFormCustomOverride: DynamicFormComponent;\\n\\n  <span class=\\\"hljs-meta\\\">@ViewChild</span>(<span class=\\\"hljs-string\\\">'defaultFieldOverrideTpl'</span>, { read: TemplateRef })\\n  defaultFieldOverrideTpl: TemplateRef&lt;DynamicFormOverrideContext&gt;;\\n\\n  ngAfterViewInit(): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">this</span>.dynFormCustomOverride.addOverride(<span class=\\\"hljs-string\\\">'*'</span>, <span class=\\\"hljs-keyword\\\">this</span>.defaultFieldOverrideTpl, <span class=\\\"hljs-literal\\\">true</span>);\\n  }\\n}\\n\",\"title\":\"Component\"},{\"file\":\"local-override.component.html\",\"lang\":\"html\",\"section\":\"tdmModel2\",\"code\":\"  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">dynamic-form</span> #<span class=\\\"hljs-attr\\\">dynFormCustomOverride</span> [<span class=\\\"hljs-attr\\\">slaveOf</span>]=<span class=\\\"hljs-string\\\">\\\"dynFormMaster\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">dynamic-form</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">ng-template</span> #<span class=\\\"hljs-attr\\\">defaultFieldOverrideTpl</span> <span class=\\\"hljs-attr\\\">let-ctx</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">span</span> <span class=\\\"hljs-attr\\\">style</span>=<span class=\\\"hljs-string\\\">\\\"display: inline-block; min-width: 200px\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b</span>&gt;</span>{{ctx.item.label}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">span</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">span</span>&gt;</span>{{ctx.tdmForm.getValue(ctx.item.getRuntimePath(ctx.fControl)) || 'Not Set'}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">span</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">ng-template</span>&gt;</span>\",\"title\":\"Template\"},{\"file\":\"local-override.component.scss\",\"lang\":\"scss\",\"section\":\"default\",\"code\":\"\",\"title\":\"Style\"},{\"file\":\"model.ts\",\"lang\":\"ts\",\"section\":\"default\",\"code\":\"<span class=\\\"hljs-keyword\\\">import</span> { Model, Prop } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@tdm/ngx-dynamic-forms'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Model</span>({\\n  form: <span class=\\\"hljs-literal\\\">true</span>\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> Hero {\\n  <span class=\\\"hljs-meta\\\">@Prop</span>({\\n    form: {\\n      render: {\\n        vType: <span class=\\\"hljs-string\\\">'number'</span>,\\n        label: <span class=\\\"hljs-string\\\">'Hero ID'</span>\\n      }\\n    }\\n  })\\n  id: <span class=\\\"hljs-built_in\\\">number</span>;\\n\\n  <span class=\\\"hljs-meta\\\">@Prop</span>({\\n    form: {\\n      required: <span class=\\\"hljs-literal\\\">true</span>,\\n      render: {\\n        vType: <span class=\\\"hljs-string\\\">'text'</span>,\\n        label: <span class=\\\"hljs-string\\\">'Hero Name'</span>\\n      }\\n    }\\n  })\\n  name: <span class=\\\"hljs-built_in\\\">string</span>;\\n\\n  <span class=\\\"hljs-meta\\\">@Prop</span>({\\n    form: {\\n      render: {\\n        vType: <span class=\\\"hljs-string\\\">'boolean'</span>,\\n        label: <span class=\\\"hljs-string\\\">'Has Tracking Device'</span>\\n      }\\n    }\\n  })\\n  hasTracking: <span class=\\\"hljs-built_in\\\">boolean</span>;\\n\\n  <span class=\\\"hljs-meta\\\">@Prop</span>({\\n    form: {\\n      render: {\\n        vType: <span class=\\\"hljs-string\\\">'slideToggle'</span>,\\n        label: <span class=\\\"hljs-string\\\">'Double Agent'</span>\\n      }\\n    }\\n  })\\n  doubleAgent: <span class=\\\"hljs-built_in\\\">boolean</span>;\\n\\n  <span class=\\\"hljs-meta\\\">@Prop</span>({\\n    form: {\\n      render: {\\n        vType: <span class=\\\"hljs-string\\\">'slider'</span>,\\n        label: <span class=\\\"hljs-string\\\">'BMI Index'</span>,\\n        data: { min: <span class=\\\"hljs-number\\\">1</span>, max: <span class=\\\"hljs-number\\\">35</span> }\\n      }\\n    }\\n  })\\n  bmi: <span class=\\\"hljs-built_in\\\">number</span>;\\n\\n  <span class=\\\"hljs-meta\\\">@Prop</span>({\\n    form: {\\n      render: {\\n        vType: <span class=\\\"hljs-string\\\">'select'</span>,\\n        label: <span class=\\\"hljs-string\\\">'Super Power'</span>,\\n        data: {\\n          options: [\\n            { value: <span class=\\\"hljs-string\\\">'selfHealing'</span>, label: <span class=\\\"hljs-string\\\">'Self Healing'</span> },\\n            { value: <span class=\\\"hljs-string\\\">'flying'</span>, label: <span class=\\\"hljs-string\\\">'Flying'</span> },\\n            { value: <span class=\\\"hljs-string\\\">'cloaking'</span>, label: <span class=\\\"hljs-string\\\">'Cloaking'</span> },\\n            { value: <span class=\\\"hljs-string\\\">'cloning'</span>, label: <span class=\\\"hljs-string\\\">'Cloning'</span> },\\n            { value: <span class=\\\"hljs-string\\\">'invisibility'</span>, label: <span class=\\\"hljs-string\\\">'Invisibility'</span> }\\n          ]\\n        }\\n      }\\n    }\\n  })\\n  superPower: <span class=\\\"hljs-string\\\">'selfHealing'</span> | <span class=\\\"hljs-string\\\">'flying'</span> | <span class=\\\"hljs-string\\\">'cloaking'</span> | <span class=\\\"hljs-string\\\">'cloning'</span> | <span class=\\\"hljs-string\\\">'invisibility'</span>;\\n}\\n\",\"title\":\"Model\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/demo/modules/@forms/tutorials/8-local-override/__tdm-code__.ts\n// module id = q9Mo\n// module chunks = 9"],"sourceRoot":"webpack:///"}